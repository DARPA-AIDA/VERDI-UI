{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityClusterDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityClusterDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIGJ1aWxkUm91dGUsIGZvcm1hdEVudGl0eUNsdXN0ZXIsIGdldFN0cmluZ1ZhbHVlLCBIZWFkZXJDb25maWcgfSBmcm9tICIuLi8uLi91dGlscyI7CmltcG9ydCBTaW1wbGVUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvU2ltcGxlVGFibGUnOwppbXBvcnQgRG9jdW1lbnRHcmlkIGZyb20gJ0AvY29tcG9uZW50cy9Eb2N1bWVudEdyaWQnOwppbXBvcnQgSW5mb1Rvb2x0aXAgZnJvbSAnQC9jb21wb25lbnRzL0luZm9Ub29sdGlwJzsKaW1wb3J0IEFQSSBmcm9tICIuLi8uLi9hcGkiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDbHVzdGVyRGV0YWlscycsCiAgY29tcG9uZW50czogewogICAgU2ltcGxlVGFibGU6IFNpbXBsZVRhYmxlLAogICAgRG9jdW1lbnRHcmlkOiBEb2N1bWVudEdyaWQsCiAgICBJbmZvVG9vbHRpcDogSW5mb1Rvb2x0aXAKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgc29ydDoge30sCiAgICAgIGNvbm5lY3Rpb25IZWFkZXJzOiBbXSwKICAgICAgZWxlbWVudEhlYWRlcnM6IFtdLAogICAgICBzdGF0dXNNZXNzYWdlOiAnJywKICAgICAgcm91dGVJZDogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5UQUJMRUZJRUxETUFQUElORyA9IFRBQkxFRklFTERNQVBQSU5HOwogICAgdGhpcy5WVUVST1VURVMgPSBWVUVST1VURVM7CiAgICB0aGlzLmdldFN0cmluZ1ZhbHVlID0gZ2V0U3RyaW5nVmFsdWU7CiAgICB0aGlzLnNvcnQgPSB7CiAgICAgIGJ5OiBUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZSwKICAgICAgZGVzY2VuZGluZzogZmFsc2UKICAgIH0sIHRoaXMuY29ubmVjdGlvbkhlYWRlcnMgPSBbbmV3IEhlYWRlckNvbmZpZygnQ2x1c3RlciBJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksIG5ldyBIZWFkZXJDb25maWcoJ1JvbGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnJvbGVzKSwgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpXTsKICAgIHRoaXMuZWxlbWVudEhlYWRlcnMgPSBbbmV3IEhlYWRlckNvbmZpZygnTmFtZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcubmFtZXMpLCBuZXcgSGVhZGVyQ29uZmlnKCdJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksIG5ldyBIZWFkZXJDb25maWcoJ1R5cGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnR5cGVzKV07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ25vZGVTZWxlY3Rpb24nLCAnY3VycmVudERhdGFTb3VyY2UnXSkpLCB7fSwgewogICAgaGVhZGluZzogZnVuY3Rpb24gaGVhZGluZygpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZV0gPyB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmVdIDogdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmlkXTsKICAgIH0sCiAgICBwcm90b3R5cGU6IGZ1bmN0aW9uIHByb3RvdHlwZSgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVdIHx8IHt9OwogICAgfSwKICAgIHByb3RvdHlwZUlkOiBmdW5jdGlvbiBwcm90b3R5cGVJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVJZF0gfHwgJyc7CiAgICB9LAogICAgcm91dGVQYXRoOiBmdW5jdGlvbiByb3V0ZVBhdGgoKSB7CiAgICAgIHJldHVybiBidWlsZFJvdXRlKHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVVcmldLCB0aGlzLlZVRVJPVVRFUy5lbGVtZW50LCAnZW50aXR5Jyk7CiAgICB9LAogICAgZG9jdW1lbnRMaXN0OiBmdW5jdGlvbiBkb2N1bWVudExpc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZG9jdW1lbnRMaXN0XTsKICAgIH0sCiAgICByb3V0ZVBhcmFtczogZnVuY3Rpb24gcm91dGVQYXJhbXMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXJhbXM7CiAgICB9CiAgfSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWyd1cGRhdGVOb2RlU2VsZWN0aW9uJ10pKSwge30sIHsKICAgIGdldENsdXN0ZXJDb3VudDogZnVuY3Rpb24gZ2V0Q2x1c3RlckNvdW50KGFycmF5TmFtZSkgewogICAgICB2YXIgYXJyYXkgPSB0aGlzLnByb3RvdHlwZVthcnJheU5hbWVdOwogICAgICByZXR1cm4gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAnJzsKICAgIH0sCiAgICBnZXROb2RlQ291bnQ6IGZ1bmN0aW9uIGdldE5vZGVDb3VudChhcnJheU5hbWUpIHsKICAgICAgdmFyIGFycmF5ID0gdGhpcy5ub2RlU2VsZWN0aW9uW2FycmF5TmFtZV07CiAgICAgIHJldHVybiBhcnJheSA/IGFycmF5Lmxlbmd0aCA6ICcnOwogICAgfSwKICAgIGdldENsdXN0ZXJDYXRlZ29yeTogZnVuY3Rpb24gZ2V0Q2x1c3RlckNhdGVnb3J5KCkgewogICAgICBpZiAodGhpcy5yb3V0ZVBhcmFtcy5pZCAhPT0gdGhpcy5yb3V0ZUlkKSB7CiAgICAgICAgdGhpcy5yZWZyZXNoRGF0YSgpOwogICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgIH0KCiAgICAgIHJldHVybiAnRW50aXR5JzsKICAgIH0sCiAgICByZWZyZXNoRGF0YTogZnVuY3Rpb24gcmVmcmVzaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnN0YXR1c01lc3NhZ2UgPSBMT0FESU5HTUVTU0FHRTsKICAgICAgQVBJLmdldEVudGl0eUNsdXN0ZXJEZXRhaWxzKGRlY29kZVVSSUNvbXBvbmVudCh0aGlzLnJvdXRlUGFyYW1zLmlkKSwgMTApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgT2JqZWN0LmtleXMocmVzcG9uc2UuZGF0YSkubGVuZ3RoID4gMCkgewogICAgICAgICAgX3RoaXMudXBkYXRlTm9kZVNlbGVjdGlvbihmb3JtYXRFbnRpdHlDbHVzdGVyKHJlc3BvbnNlLmRhdGEpKTsKCiAgICAgICAgICBfdGhpcy5zdGF0dXNNZXNzYWdlID0gJyc7IC8vIFRPRE86IHN3YWdnZXIgc2VydmVyIG5lZWRzIHRvIGluZGljYXRlIGlmIG5vIGRhdGEgZXhpc3RzCiAgICAgICAgICAvLyB0aGlzLnN0YXR1c01lc3NhZ2UgPSAnTm8gcmVzdWx0cyBmb3VuZCc7CiAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5zdGF0dXNNZXNzYWdlKSB7CiAgICAgICAgICBfdGhpcy5zdGF0dXNNZXNzYWdlID0gcmVzcG9uc2Uuc3RhdHVzTWVzc2FnZTsKCiAgICAgICAgICBfdGhpcy51cGRhdGVOb2RlU2VsZWN0aW9uKHt9KTsKICAgICAgICB9CgogICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["EntityClusterDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{heading}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getClusterCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(nodeSelection[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">Cluster ID: </span><span>{{nodeSelection[TABLEFIELDMAPPING.clusterUri]}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-label-spaced\">Prototype ID:\n                <router-link :to=\"routePath\" class=\"theme-color-text page-link\">\n                    {{prototypeId}}\n                </router-link >\n            </div>\n            <div v-if=\"prototype[TABLEFIELDMAPPING.eventList]\">\n                <div class=\"section-space\">\n                    <div class=\"kb-table-heading\">Events ({{getClusterCount(TABLEFIELDMAPPING.eventList)}})</div>\n                    <SimpleTable\n                            :headers=\"connectionHeaders\"\n                            :data=\"prototype[TABLEFIELDMAPPING.eventList]\"\n                            :loading=\"loading\"\n                            :statusMessage=\"statusMessage\"\n                            :route=\"VUEROUTES.cluster\"\n                    ></SimpleTable>\n                 </div>\n            </div>\n            <div v-if=\"prototype[TABLEFIELDMAPPING.relationList]\">\n                <div class=\"section-space\">\n                    <div class=\"kb-table-heading\">Relations ({{getClusterCount(TABLEFIELDMAPPING.relationList)}})</div>\n                    <SimpleTable\n                            :headers=\"connectionHeaders\"\n                            :data=\"prototype[TABLEFIELDMAPPING.relationList]\"\n                            :loading=\"loading\"\n                            :statusMessage=\"statusMessage\"\n                            :route=\"VUEROUTES.cluster\"\n                    ></SimpleTable>\n                </div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Entity Co-References ({{getNodeCount(TABLEFIELDMAPPING.nodes)}}) <InfoTooltip :iconStyle=\"'light'\" :message=\"'Data limit 10'\"></InfoTooltip></div>\n            <SimpleTable\n                :headers=\"elementHeaders\"\n                :data=\"nodeSelection[TABLEFIELDMAPPING.nodes]\"\n                :loading=\"loading\"\n                :statusMessage=\"statusMessage\"\n                :route=\"VUEROUTES.element\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"documentList\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, buildRoute, formatEntityCluster,\n        getStringValue, HeaderConfig} from '../../utils';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import InfoTooltip from '@/components/InfoTooltip';\n    import API from '../../api';\n    import {mapState} from 'vuex';\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'ClusterDetails',\n        components: {SimpleTable, DocumentGrid, InfoTooltip},\n        data: () => ({\n            loading: false,\n            sort: {},\n            connectionHeaders: [],\n            elementHeaders: [],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES = VUEROUTES;\n            this.getStringValue = getStringValue;\n            this.sort = {by: TABLEFIELDMAPPING.headline, descending: false},\n            this.connectionHeaders = [\n                new HeaderConfig('Cluster ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n            this.elementHeaders = [\n                new HeaderConfig('Names', 'start', false, TABLEFIELDMAPPING.names),\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource']),\n            heading() {\n                return this.nodeSelection[TABLEFIELDMAPPING.headline] ? this.nodeSelection[TABLEFIELDMAPPING.headline] :\n                    this.nodeSelection[TABLEFIELDMAPPING.id];\n            },\n            prototype() {\n                return this.nodeSelection[TABLEFIELDMAPPING.prototype] || {};\n            },\n            prototypeId() {\n                return  this.nodeSelection[TABLEFIELDMAPPING.prototypeId] || '';\n            },\n            routePath() {\n                return  buildRoute(\n                    this.nodeSelection[TABLEFIELDMAPPING.prototypeUri],\n                    this.VUEROUTES.element,\n                    'entity'\n                );\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            },\n            routeParams() {\n                return this.$route.params;\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            getClusterCount(arrayName) {\n                let array = this.prototype[arrayName];\n                return array ? array.length : '';\n            },\n            getNodeCount(arrayName) {\n                let array = this.nodeSelection[arrayName];\n                return array ? array.length : '';\n            },\n            getClusterCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return 'Entity';\n            },\n            refreshData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n\n                API.getEntityClusterDetails(decodeURIComponent(this.routeParams.id), 10).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.updateNodeSelection(formatEntityCluster(response.data));\n                        this.statusMessage = '';\n                        // TODO: swagger server needs to indicate if no data exists\n                        // this.statusMessage = 'No results found';\n                    } else if (response.statusMessage) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"],"sourceRoot":"src/views/explore"}]}