{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ClusterDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ClusterDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIFBBUkFNRVRFUk5BTUVTLCB1cHBlckZpcnN0TGV0dGVyLCBmb3JtYXRDbHVzdGVyLCBidWlsZFJvdXRlLCBnZXRTdHJpbmdWYWx1ZSwgSGVhZGVyQ29uZmlnIH0gZnJvbSAiLi4vLi4vdXRpbHMiOwppbXBvcnQgU2ltcGxlVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL1NpbXBsZVRhYmxlJzsKaW1wb3J0IERvY3VtZW50R3JpZCBmcm9tICdAL2NvbXBvbmVudHMvRG9jdW1lbnRHcmlkJzsKaW1wb3J0IEFQSSBmcm9tICIuLi8uLi9hcGkiOwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBNdXRhdGlvbnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2x1c3RlckRldGFpbHMnLAogIGNvbXBvbmVudHM6IHsKICAgIFNpbXBsZVRhYmxlOiBTaW1wbGVUYWJsZSwKICAgIERvY3VtZW50R3JpZDogRG9jdW1lbnRHcmlkCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGRhdGFSZXNwb25zZTogW10sCiAgICAgIHNvcnQ6IHt9LAogICAgICBhcmd1bWVudEhlYWRlcnM6IFtdLAogICAgICBlbGVtZW50SGVhZGVyczogW10sCiAgICAgIHN0YXR1c01lc3NhZ2U6ICcnLAogICAgICByb3V0ZUlkOiAnJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLlRBQkxFRklFTERNQVBQSU5HID0gVEFCTEVGSUVMRE1BUFBJTkc7CiAgICB0aGlzLlZVRVJPVVRFUyA9IFZVRVJPVVRFUzsKICAgIHRoaXMuZ2V0U3RyaW5nVmFsdWUgPSBnZXRTdHJpbmdWYWx1ZTsKICAgIHRoaXMuc29ydCA9IHsKICAgICAgYnk6IFRBQkxFRklFTERNQVBQSU5HLmhlYWRsaW5lLAogICAgICBkZXNjZW5kaW5nOiBmYWxzZQogICAgfTsKICAgIHRoaXMuYXJndW1lbnRIZWFkZXJzID0gW25ldyBIZWFkZXJDb25maWcoJ05hbWUnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmUpLCBuZXcgSGVhZGVyQ29uZmlnKCdDbHVzdGVyIElEJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmlkKSwgbmV3IEhlYWRlckNvbmZpZygnUm9sZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcucm9sZXMpLCBuZXcgSGVhZGVyQ29uZmlnKCdUeXBlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy50eXBlcyldOwogICAgdGhpcy5lbGVtZW50SGVhZGVycyA9IFtuZXcgSGVhZGVyQ29uZmlnKCdJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksIG5ldyBIZWFkZXJDb25maWcoJ1R5cGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnR5cGVzKSwgbmV3IEhlYWRlckNvbmZpZygnRW50aXR5IENsdXN0ZXJzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmVudGl0eUNvdW50KV07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5Lmhhc093blByb3BlcnR5KFBBUkFNRVRFUk5BTUVTLmRhdGFzb3VyZSkpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudERhdGFTb3VyY2UgIT09IHRoaXMuJHJvdXRlLnF1ZXJ5W1BBUkFNRVRFUk5BTUVTLmRhdGFzb3VyZV0pIHsKICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnREYXRhU291cmNlKHRoaXMuJHJvdXRlLnF1ZXJ5W1BBUkFNRVRFUk5BTUVTLmRhdGFzb3VyZV0pOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aGlzLnVwZGF0ZUN1cnJlbnREYXRhU291cmNlKHRoaXMuZGVmYXVsdEtiRGF0YVNvdXJjZSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ25vZGVTZWxlY3Rpb24nLCAnY3VycmVudERhdGFTb3VyY2UnLCAnZGVmYXVsdEtiRGF0YVNvdXJjZSddKSksIHt9LCB7CiAgICBwcm90b3R5cGU6IGZ1bmN0aW9uIHByb3RvdHlwZSgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVdOwogICAgfSwKICAgIHByb3RvdHlwZUlkOiBmdW5jdGlvbiBwcm90b3R5cGVJZCgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVJZF07CiAgICB9LAogICAgY2x1c3RlcklkOiBmdW5jdGlvbiBjbHVzdGVySWQoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuY2x1c3RlclVyaV07CiAgICB9LAogICAgcm91dGVQYXJhbXM6IGZ1bmN0aW9uIHJvdXRlUGFyYW1zKCkgewogICAgICByZXR1cm4gdGhpcy4kcm91dGUucGFyYW1zOwogICAgfSwKICAgIHJvdXRlUGF0aDogZnVuY3Rpb24gcm91dGVQYXRoKCkgewogICAgICByZXR1cm4gdGhpcy5wcm90b3R5cGUgPyBidWlsZFJvdXRlKHRoaXMucHJvdG90eXBlW1RBQkxFRklFTERNQVBQSU5HLmlkVXJpXSwgdGhpcy5WVUVST1VURVMuZWxlbWVudCwgdGhpcy5wcm90b3R5cGVbVEFCTEVGSUVMRE1BUFBJTkcuY2F0ZWdvcnldKSA6ICcnOwogICAgfSwKICAgIGVudGl0eUNvdW50OiBmdW5jdGlvbiBlbnRpdHlDb3VudCgpIHsKICAgICAgcmV0dXJuIHRoaXMucHJvdG90eXBlID8gdGhpcy5wcm90b3R5cGVbVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5Q291bnRdIDogbnVsbDsKICAgIH0sCiAgICBhcmd1bWVudExpc3Q6IGZ1bmN0aW9uIGFyZ3VtZW50TGlzdCgpIHsKICAgICAgcmV0dXJuIHRoaXMucHJvdG90eXBlID8gdGhpcy5wcm90b3R5cGVbVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5TGlzdF0gOiBbXTsKICAgIH0sCiAgICBkb2N1bWVudExpc3Q6IGZ1bmN0aW9uIGRvY3VtZW50TGlzdCgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5kb2N1bWVudExpc3RdOwogICAgfQogIH0pLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWyd1cGRhdGVOb2RlU2VsZWN0aW9uJ10pKSwgbWFwQWN0aW9ucyhbJ3VwZGF0ZUN1cnJlbnREYXRhU291cmNlJ10pKSwge30sIHsKICAgIGdldENsdXN0ZXJDYXRlZ29yeTogZnVuY3Rpb24gZ2V0Q2x1c3RlckNhdGVnb3J5KCkgewogICAgICBpZiAodGhpcy5yb3V0ZVBhcmFtcy5pZCAhPT0gdGhpcy5yb3V0ZUlkKSB7CiAgICAgICAgdGhpcy5yZWZyZXNoRGF0YSgpOwogICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgIH0KCiAgICAgIHJldHVybiB1cHBlckZpcnN0TGV0dGVyKHRoaXMucm91dGVQYXJhbXMuY2F0ZWdvcnkpOwogICAgfSwKICAgIHJlZnJlc2hEYXRhOiBmdW5jdGlvbiByZWZyZXNoRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbih7fSk7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuc3RhdHVzTWVzc2FnZSA9IExPQURJTkdNRVNTQUdFOwogICAgICBBUEkuZ2V0Q2x1c3RlckRldGFpbHMoZGVjb2RlVVJJQ29tcG9uZW50KHRoaXMucm91dGVQYXJhbXMuaWQpLCB0aGlzLnJvdXRlUGFyYW1zLmNhdGVnb3J5LCB0aGlzLmN1cnJlbnREYXRhU291cmNlKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhICYmIE9iamVjdC5rZXlzKHJlc3BvbnNlLmRhdGEpLmxlbmd0aCA+IDApIHsKICAgICAgICAgIF90aGlzLmRhdGFSZXNwb25zZSA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEucHJvdG90eXBlLmlkKSB7CiAgICAgICAgICAgIF90aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oZm9ybWF0Q2x1c3RlcihyZXNwb25zZS5kYXRhLCBfdGhpcy5yb3V0ZVBhcmFtcy5jYXRlZ29yeSkpOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLnN0YXR1c01lc3NhZ2UgPSAnJzsgLy8gVE9ETzogc3dhZ2dlciBzZXJ2ZXIgbmVlZHMgdG8gaW5kaWNhdGUgd2hlbiBub3RoaW5nIHdhcyBmb3VuZAogICAgICAgICAgLy8gdGhpcy5zdGF0dXNNZXNzYWdlID0gJ05vIHJlc3VsdHMgZm91bmQnOwogICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2Uuc3RhdHVzTWVzc2FnZSAmJiByZXNwb25zZS5zdGF0dXNNZXNzYWdlLmxlbmd0aCA+IDApIHsKICAgICAgICAgIF90aGlzLnN0YXR1c01lc3NhZ2UgPSByZXNwb25zZS5zdGF0dXNNZXNzYWdlOwoKICAgICAgICAgIF90aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["ClusterDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{nodeSelection[TABLEFIELDMAPPING.headline]}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getClusterCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(nodeSelection[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">Cluster ID: </span><span>{{clusterId}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-label-spaced\">Prototype ID:\n                <router-link :to=\"routePath\" class=\"theme-color-text page-link\">\n                    {{prototypeId}}\n                </router-link >\n            </div>\n            <div class=\"kb-table-heading\">Arguments ({{entityCount}}) </div>\n            <SimpleTable\n                    :headers=\"argumentHeaders\"\n                    :data=\"argumentList\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.cluster\"\n            ></SimpleTable>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">{{getClusterCategory()}} Co-References ({{nodeSelection[TABLEFIELDMAPPING.nodeCount]}})</div>\n            <SimpleTable\n                    :headers=\"elementHeaders\"\n                    :data=\"nodeSelection[TABLEFIELDMAPPING.nodes]\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.element\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"documentList\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, PARAMETERNAMES, upperFirstLetter, formatCluster,\n        buildRoute, getStringValue, HeaderConfig} from '../../utils';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import API from '../../api';\n    import {mapActions, mapMutations, mapState} from 'vuex';\n\n    export default {\n        name: 'ClusterDetails',\n        components: {SimpleTable, DocumentGrid},\n        data: () => ({\n            loading: false,\n            dataResponse: [],\n            sort: {},\n            argumentHeaders: [],\n            elementHeaders: [],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES =  VUEROUTES;\n            this.getStringValue = getStringValue;\n            this.sort = {by: TABLEFIELDMAPPING.headline, descending: false};\n            this.argumentHeaders = [\n                new HeaderConfig('Name', 'start', false, TABLEFIELDMAPPING.headline),\n                new HeaderConfig('Cluster ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n            this.elementHeaders = [\n            new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n            new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types),\n            new HeaderConfig('Entity Clusters', 'start', false, TABLEFIELDMAPPING.entityCount)\n            ];\n        },\n        mounted() {\n            if(this.$route.query.hasOwnProperty(PARAMETERNAMES.datasoure)) {\n                if(this.currentDataSource !== this.$route.query[PARAMETERNAMES.datasoure]) {\n                    this.updateCurrentDataSource(this.$route.query[PARAMETERNAMES.datasoure]);\n                }\n            }\n            else {\n                this.updateCurrentDataSource(this.defaultKbDataSource);\n            }\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource', 'defaultKbDataSource']),\n            prototype() {\n                return this.nodeSelection[TABLEFIELDMAPPING.prototype];\n            },\n            prototypeId() {\n                return this.nodeSelection[TABLEFIELDMAPPING.prototypeId];\n            },\n            clusterId() {\n                return this.nodeSelection[TABLEFIELDMAPPING.clusterUri];\n            },\n            routeParams() {\n                return this.$route.params;\n            },\n            routePath() {\n                return this.prototype ? buildRoute(\n                    this.prototype[TABLEFIELDMAPPING.idUri],\n                    this.VUEROUTES.element,\n                    this.prototype[TABLEFIELDMAPPING.category]\n                ) : '';\n            },\n            entityCount() {\n                return this.prototype ?\n                    this.prototype[TABLEFIELDMAPPING.entityCount] : null;\n            },\n            argumentList() {\n                return this.prototype ?\n                    this.prototype[TABLEFIELDMAPPING.entityList] : [];\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            ...mapActions(['updateCurrentDataSource']),\n            getClusterCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return upperFirstLetter(this.routeParams.category);\n            },\n            refreshData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n                API.getClusterDetails(\n                    decodeURIComponent(this.routeParams.id),\n                    this.routeParams.category,\n                    this.currentDataSource\n                ).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.dataResponse = response.data;\n                        if(response.data.prototype.id) {\n                            this.updateNodeSelection(formatCluster(response.data, this.routeParams.category));\n                        }\n                        this.statusMessage = '';\n                        // TODO: swagger server needs to indicate when nothing was found\n                        // this.statusMessage = 'No results found';\n                    }\n                    else if (response.statusMessage && response.statusMessage.length > 0) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"],"sourceRoot":"src/views/explore"}]}