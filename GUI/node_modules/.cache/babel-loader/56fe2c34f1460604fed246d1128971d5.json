{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/CardGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/CardGrid.vue","mtime":1640207172525},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvcnQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgU2VsZWN0RHJvcGRvd24gZnJvbSAnQC9jb21wb25lbnRzL1NlbGVjdERyb3Bkb3duJzsKaW1wb3J0IERhdGFEaXNwbGF5TWl4aW4gZnJvbSAnQC9taXhpbnMvRGF0YURpc3BsYXlNaXhpbic7CmltcG9ydCB7IFNFTEVDVERJU1BMQVksIFZVRVJPVVRFUywgVEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBEQVRBVFlQRVMsIE5PREFUQU1FU1NBR0UsIGJ1aWxkUm91dGUgfSBmcm9tICIuLi91dGlscyI7CmltcG9ydCB7IG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NhcmRHcmlkJywKICBtaXhpbnM6IFtEYXRhRGlzcGxheU1peGluXSwKICBwcm9wczogewogICAgY2FyZENvbmZpZ3VyYXRpb246IE9iamVjdCwKICAgIHN0YXR1c01lc3NhZ2U6IFN0cmluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGl0ZW1zUGVyUGFnZUFycmF5OiBbMTIsIDI0LCA0OCwgOTYsICdBbGwnXSwKICAgICAgaGVhZGVyU2VsZWN0RGlzcGxheTogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5WVUVST1VURVMgPSBWVUVST1VURVM7CiAgICB0aGlzLlRBQkxFRklFTERNQVBQSU5HID0gVEFCTEVGSUVMRE1BUFBJTkc7CiAgICB0aGlzLkxPQURJTkdNRVNTQUdFID0gTE9BRElOR01FU1NBR0U7CiAgICB0aGlzLk5PREFUQU1FU1NBR0UgPSBOT0RBVEFNRVNTQUdFOwogICAgdGhpcy5oZWFkZXJTZWxlY3REaXNwbGF5ID0gU0VMRUNURElTUExBWS5idXR0b247CiAgICB0aGlzLmJ1aWxkUm91dGUgPSBidWlsZFJvdXRlOwogIH0sCiAgY29tcG9uZW50czogewogICAgU2VsZWN0RHJvcGRvd246IFNlbGVjdERyb3Bkb3duCiAgfSwKICBjb21wdXRlZDogewogICAgZ3JvdXBFeGNsdXNpdmVDYXJkS2V5czogZnVuY3Rpb24gZ3JvdXBFeGNsdXNpdmVDYXJkS2V5cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBnZXRPYmplY3RWYWx1ZXMgPSBmdW5jdGlvbiBnZXRPYmplY3RWYWx1ZXMob2JqKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLmlzQW5PYmplY3Qob2JqKSA/IE9iamVjdC52YWx1ZXMob2JqKS5tYXAoZ2V0T2JqZWN0VmFsdWVzKS5mbGF0KCkgOiBbb2JqXTsKICAgICAgfTsKCiAgICAgIHJldHVybiBnZXRPYmplY3RWYWx1ZXModGhpcy5jYXJkQ29uZmlndXJhdGlvbi5leGNsdXNpdmVDYXJkS2V5cyk7CiAgICB9LAogICAgc29ydEJ5OiBmdW5jdGlvbiBzb3J0QnkoKSB7CiAgICAgIHJldHVybiB0aGlzLnNvcnQuYnkgIT09IHVuZGVmaW5lZCA/IHRoaXMuc29ydC5ieSA6IHRoaXMuY2FyZENvbmZpZ3VyYXRpb24uY2FyZEtleXNbMF07CiAgICB9LAogICAgc29ydERlc2M6IGZ1bmN0aW9uIHNvcnREZXNjKCkgewogICAgICByZXR1cm4gdGhpcy5zb3J0LmRlc2NlbmRpbmcgIT09IHVuZGVmaW5lZCA/IHRoaXMuc29ydC5kZXNjZW5kaW5nIDogZmFsc2U7CiAgICB9LAogICAgc29ydEljb25DbGFzczogZnVuY3Rpb24gc29ydEljb25DbGFzcygpIHsKICAgICAgcmV0dXJuIHRoaXMuc29ydERlc2MgPyAnYXJyb3ctaWNvbi1kb3duJyA6ICdhcnJvdy1pY29uLXVwJzsKICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwTXV0YXRpb25zKFsndXBkYXRlTm9kZVNlbGVjdGlvbiddKSksIHt9LCB7CiAgICB1cGRhdGVTb3J0T3JkZXJEaXNwbGF5OiBmdW5jdGlvbiB1cGRhdGVTb3J0T3JkZXJEaXNwbGF5KCkgewogICAgICB2YXIgdmFsaWRWYWwgPSAhIXRoaXMuc29ydERlc2M7CiAgICAgIHRoaXMudXBkYXRlU29ydERlc2MoIXZhbGlkVmFsKTsKICAgIH0sCiAgICBnZXRDYXJkSWNvbjogZnVuY3Rpb24gZ2V0Q2FyZEljb24odHlwZSkgewogICAgICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jYXJkQ29uZmlndXJhdGlvbi5jYXJkSWNvbnMpIHsKICAgICAgICBpZiAodGhpcy5jYXJkQ29uZmlndXJhdGlvbi5jYXJkSWNvbnMuaGFzT3duUHJvcGVydHkoa2V5KSAmJiB0eXBlLmluY2x1ZGVzKGtleSkpIHsKICAgICAgICAgIHJldHVybiB0aGlzLmNhcmRDb25maWd1cmF0aW9uLmNhcmRJY29uc1trZXldLmljb247CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gJ21kaS1jYXJkLXRleHQtb3V0bGluZSc7CiAgICB9LAogICAgZ2V0Q2F0ZWdvcnk6IGZ1bmN0aW9uIGdldENhdGVnb3J5KGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW1bVEFCTEVGSUVMRE1BUFBJTkcuY2F0ZWdvcnldID8gaXRlbVtUQUJMRUZJRUxETUFQUElORy5jYXRlZ29yeV0gOiBpdGVtW1RBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZV0gPyBpdGVtW1RBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZV1bVEFCTEVGSUVMRE1BUFBJTkcuY2F0ZWdvcnldIDogREFUQVRZUEVTLmV2ZW50VHlwZS5pZDsKICAgIH0sCiAgICBnZXRGaWVsZFZhbHVlOiBmdW5jdGlvbiBnZXRGaWVsZFZhbHVlKGl0ZW0sIGtleSkgewogICAgICByZXR1cm4gaXRlbVtrZXldID8gaXRlbVtrZXldIDogaXRlbVtUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVdID8gaXRlbVtUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVdW2tleV0gOiAnJzsKICAgIH0sCiAgICBnZXRMaXN0SXRlbTogZnVuY3Rpb24gZ2V0TGlzdEl0ZW0oaXRlbSwgZmllbGQpIHsKICAgICAgcmV0dXJuIGl0ZW1bZmllbGRdID8gaXRlbVtmaWVsZF0gOiBpdGVtW1RBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZV0gPyBpdGVtW1RBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZV1bZmllbGRdIDoge307CiAgICB9LAogICAgZ2V0TGlzdENvdW50OiBmdW5jdGlvbiBnZXRMaXN0Q291bnQoaXRlbSwgZmllbGQpIHsKICAgICAgdmFyIHZhbHVlID0gdGhpcy5nZXRGaWVsZFZhbHVlKGl0ZW0sIGZpZWxkKTsKICAgICAgcmV0dXJuIHZhbHVlID8gdmFsdWUgOiAwOwogICAgfSwKICAgIGlzSWRGaWVsZDogZnVuY3Rpb24gaXNJZEZpZWxkKGZpZWxkKSB7CiAgICAgIHJldHVybiBbVEFCTEVGSUVMRE1BUFBJTkcuaWQsIFRBQkxFRklFTERNQVBQSU5HLmlkVXJpLCBUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVJZCwgVEFCTEVGSUVMRE1BUFBJTkcucHJvdG90eXBlVXJpXS5pbmNsdWRlcyhmaWVsZCk7CiAgICB9LAogICAgZ2V0VXJpOiBmdW5jdGlvbiBnZXRVcmkoaXRlbSwga2V5KSB7CiAgICAgIHJldHVybiBrZXkgPT09IFRBQkxFRklFTERNQVBQSU5HLmlkID8gaXRlbVtUQUJMRUZJRUxETUFQUElORy5pZFVyaV0gOiBrZXkgPT09IFRBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZUlkID8gaXRlbVtUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVVcmldIDogJyc7CiAgICB9LAogICAgc2F2ZVNlbGVjdGVkRGF0YTogZnVuY3Rpb24gc2F2ZVNlbGVjdGVkRGF0YShkYXRhKSB7CiAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbihkYXRhKTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["CardGrid.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div>\n        <div class=\"element-list-header\">\n            <div v-if=\"cardConfiguration.cardSettings.tableHeading\" class=\"page-header-left bold-text\">{{cardConfiguration.cardSettings.tableHeading}}</div>\n            <div v-if=\"cardConfiguration.cardSettings.tableDescription\" class=\"page-header-left\">{{cardConfiguration.cardSettings.tableDescription}}</div>\n            <div class=\"page-header-right\">\n                <div class=\"small-header-text\">{{paginationText}}</div>\n                <div v-if=\"cardConfiguration.cardSettings.showToggleIcon\" class=\"icon-wrapper-div\">\n                    <v-icon class=\"element-card-icon\" @click=\"$emit('toggleView')\">mdi-view-list</v-icon>\n                </div>\n            </div>\n        </div>\n        <v-data-iterator\n            :items=\"data\"\n            :items-per-page=\"itemsPerPage\"\n            :page.sync=\"page\"\n            @pagination=\"updateHeaderPagination($event)\"\n            :sort-by=\"sortBy\"\n            :sort-desc=\"sortDesc\"\n            :loading=\"loading\"\n            :loading-text=\"LOADINGMESSAGE\"\n            :no-data-text=\"statusMessage ? statusMessage : NODATAMESSAGE\"\n            hide-default-footer\n        >\n            <template v-slot:header v-if=\"!hideHeader\">\n                <div class=\"grid-header-wrapper\">\n                    <div class=\"grid-header-row\">\n                        <div class=\"grid-header-menu\">\n                            <span>Order By: </span>\n                            <SelectDropdown :options=\"cardConfiguration.cardKeys\" :selectedOption=\"sortBy\"\n                                :selectDisplay=\"headerSelectDisplay\" @selectDropdownChange=\"updateSortBy($event.target.value)\"\n                            >\n                            </SelectDropdown>\n                            <div class=\"icon-wrapper-div\">\n                                <v-icon :class=\"sortIconClass\" @click=\"updateSortOrderDisplay()\">mdi-arrow-up</v-icon>\n                            </div>\n                        </div>\n                        <div v-if=\"loading===true\" class=\"grid-header-loading\">\n                            <v-progress-linear indeterminate></v-progress-linear>\n                        </div>\n                    </div>\n                </div>\n            </template>\n            <template v-slot:default=\"props\">\n                <v-row>\n                    <v-col v-for=\"(item, index) in props.items\" :key=\"index\" cols=\"12\" md=\"2\">\n                        <v-card class=\"element-card-display\">\n                            <!--Card image-->\n                            <div class=\"card-icon-div\">\n                                <v-icon class=\"card-icon-style\">\n                                    {{getCardIcon(item[cardConfiguration.cardSettings.iconKey])}}\n                                </v-icon>\n                            </div>\n                            <!--Card title-->\n                            <div class=\"element-card-row-heading element-card-space\"\n                                 :class=\"{'theme-color-text': sortBy === cardConfiguration.exclusiveCardKeys.title}\">\n                                <router-link\n                                    :to=\"buildRoute(\n                                        item[cardConfiguration.cardSettings.cardKey],\n                                        VUEROUTES.cluster,\n                                        getCategory(item)\n                                    )\"\n                                    class=\"element-card-header\"\n                                    @click.native=\"saveSelectedData(item)\"\n                                >\n                                    {{item[cardConfiguration.exclusiveCardKeys.title]}}\n                                </router-link>\n                            </div>\n                            <div :class=\"{'theme-color-text': sortBy === cardConfiguration.exclusiveCardKeys.type}\">\n                                {{item[cardConfiguration.exclusiveCardKeys.type]}}\n                            </div>\n                            <!--Remaining lists and keys-->\n                            <div class=\"card-list-display\">\n                                <div>\n                                    <div v-for=\"(key, kIndex) in cardConfiguration.cardKeys\"\n                                         :key=\"key + index + '_' + kIndex\"\n                                         :class=\"{'theme-color-text': sortBy === key}\">\n                                        <!--Display the remaining keys that are not in the exclusiveCardKeys-->\n                                        <div v-if=\"!(groupExclusiveCardKeys.includes(key))\" class=\"element-card-space\">\n                                            <span v-if=\"isIdField(key)\">\n                                                <router-link\n                                                    :to=\"buildRoute(\n                                                        getUri(item, key),\n                                                        VUEROUTES.element,\n                                                        getCategory(item)\n                                                    )\"\n                                                    class=\"element-card-row-heading element-card-header\"\n                                                    @click.native=\"saveSelectedData(item)\"\n                                                >\n                                                    {{getFieldValue(item, key)}}\n                                                </router-link>\n                                            </span>\n                                            <span v-else>\n                                                {{getFieldTitle(key)}} : {{getFieldValue(item, key)}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div v-for=\"(list) in cardConfiguration.exclusiveCardKeys.listDisplay\"\n                                         :key=\"list.field + index\">\n                                        <div v-for=\"(listItem, lIndex) in getListItem(item, list.field)\"\n                                             :key=\"lIndex\" :class=\"{'theme-color-text': sortBy === list.field}\">\n                                            <span v-if=\"list.value\">\n                                                {{listItem[list.field]}}: {{listItem[list.value]}}\n                                            </span>\n                                            <span v-else>\n                                                {{listItem}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <br>\n                                <div v-for=\"(counter) in cardConfiguration.exclusiveCardKeys.countDisplay\" class=\"element-card-space\"\n                                     :key=\"counter.field + index\" :class=\"{'theme-color-text': sortBy === counter.value}\">\n                                    {{counter.title}}: {{getListCount(item, counter.value)}}\n                                </div>\n                            </div>\n                            <!--Card footer keys-->\n                            <!-- TODO: Add footer back in if we get dates in the dataset\n                            <div class=\"element-card-footer\">\n                                <span :class=\"{'theme-color-text': sortBy === cardConfiguration.exclusiveCardKeys.date}\">{{item[cardConfiguration.exclusiveCardKeys.date]}}</span>\n                            </div>-->\n                        </v-card>\n                    </v-col>\n                </v-row>\n            </template>\n            <template v-slot:footer=\"{ item }\" v-if=\"!hideFooter\">\n                <div class=\"pagination-footer\">\n                    <div class=\"pagination-footer-text\">Results per page:\n                        <SelectDropdown :options=\"itemsPerPageArray\" :selectedOption=\"paging ? paging.itemsPerPage : null\"\n                                        @selectDropdownChange=\"updateItemsPerPage($event)\"\n                        >\n                        </SelectDropdown>\n                    </div>\n                    <v-pagination\n                            class=\"pagination-component\"\n                            v-model=\"page\"\n                            :length=\"pageCount\"\n                            :value=\"selectedPage\"\n                            total-visible=\"10\"\n                            @input=\"updatePageSelection($event)\"\n                    ></v-pagination>\n                    <div class=\"pagination-footer-text-end\">{{paginationText}}</div>\n                </div>\n            </template>\n        </v-data-iterator>\n    </div>\n</template>\n\n<script>\n    import SelectDropdown from '@/components/SelectDropdown';\n    import DataDisplayMixin from '@/mixins/DataDisplayMixin';\n    import {SELECTDISPLAY, VUEROUTES, TABLEFIELDMAPPING, LOADINGMESSAGE, DATATYPES, NODATAMESSAGE, buildRoute} from '../utils'\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'CardGrid',\n        mixins: [DataDisplayMixin],\n        props: {\n            cardConfiguration: Object,\n            statusMessage: String\n        },\n        data: () => ({\n            itemsPerPageArray: [12, 24, 48, 96, 'All'],\n            headerSelectDisplay: '',\n        }),\n        created() {\n            this.VUEROUTES = VUEROUTES;\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.LOADINGMESSAGE = LOADINGMESSAGE;\n            this.NODATAMESSAGE = NODATAMESSAGE;\n            this.headerSelectDisplay = SELECTDISPLAY.button;\n            this.buildRoute = buildRoute;\n        },\n        components: {SelectDropdown},\n        computed: {\n            groupExclusiveCardKeys() {\n                const getObjectValues = obj => this.isAnObject(obj) ? Object.values(obj).map(getObjectValues).flat() : [obj];\n                return getObjectValues(this.cardConfiguration.exclusiveCardKeys);\n            },\n            sortBy() {\n                return this.sort.by !== undefined ? this.sort.by : this.cardConfiguration.cardKeys[0];\n            },\n            sortDesc() {\n                return this.sort.descending !== undefined ? this.sort.descending : false;\n            },\n            sortIconClass() {\n                return this.sortDesc ? 'arrow-icon-down' : 'arrow-icon-up';\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            updateSortOrderDisplay() {\n                let validVal = !!this.sortDesc;\n                this.updateSortDesc(!validVal);\n            },\n            getCardIcon(type) {\n                for (const key in this.cardConfiguration.cardIcons) {\n                    if (this.cardConfiguration.cardIcons.hasOwnProperty(key) && type.includes(key)) {\n                        return this.cardConfiguration.cardIcons[key].icon;\n                    }\n                }\n                return 'mdi-card-text-outline';\n            },\n            getCategory(item) {\n                return item[TABLEFIELDMAPPING.category] ?\n                    item[TABLEFIELDMAPPING.category] :\n                    item[TABLEFIELDMAPPING.prototype] ?\n                        item[TABLEFIELDMAPPING.prototype][TABLEFIELDMAPPING.category] :\n                        DATATYPES.eventType.id;\n            },\n            getFieldValue(item, key) {\n                return item[key] ? item[key] : item[TABLEFIELDMAPPING.prototype] ? item[TABLEFIELDMAPPING.prototype][key] : '';\n            },\n            getListItem(item, field) {\n                return item[field] ? item[field] : item[TABLEFIELDMAPPING.prototype] ? item[TABLEFIELDMAPPING.prototype][field] : {}\n            },\n            getListCount(item, field) {\n                let value = this.getFieldValue(item, field);\n                return value ? value : 0;\n            },\n            isIdField(field) {\n                return [TABLEFIELDMAPPING.id, TABLEFIELDMAPPING.idUri, TABLEFIELDMAPPING.prototypeId, TABLEFIELDMAPPING.prototypeUri].includes(field);\n            },\n            getUri(item, key) {\n                return key === TABLEFIELDMAPPING.id ? item[TABLEFIELDMAPPING.idUri] :\n                    key === TABLEFIELDMAPPING.prototypeId ? item[TABLEFIELDMAPPING.prototypeUri] : '';\n            },\n            saveSelectedData(data) {\n                this.updateNodeSelection(data);\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n    .grid-header-wrapper {\n        background-color: $theme-teal;\n        color: #FFFFFF;\n        border-radius: 4px 4px 0 0;\n        @extend .bold-text;\n    }\n\n    .grid-header-row {\n        @include flex-row-wrap;\n    }\n\n    .grid-header-menu {\n        @include flex-row-nowrap;\n        padding: 16px;\n        width: 100%;\n        height: 40px;\n        align-items: center;\n        justify-content: flex-start;\n\n        .select-css {\n            background-color: #FFFFFF;\n            font-weight: initial;\n        }\n\n        span {\n            padding-right: 10px;\n            white-space: nowrap;\n        }\n\n        div .v-icon {\n            color: #FFFFFF;\n            font-size: 18px;\n        }\n    }\n\n    .grid-header-loading{\n        width: 100%;\n    }\n\n    .element-card-display {\n        padding: 16px;\n    }\n\n    .element-card-icon {\n        @extend .dark-icon-button;\n        @extend .v-icon;\n        padding: 0;\n        font-size: 32px;\n    }\n\n    .element-card-row-heading {\n        @extend .row-heading;\n        //margin-bottom: 16px;\n    }\n\n    .element-card-header {\n        color: inherit;\n        @include no-text-decoration;\n        @extend .page-link;\n    }\n\n    .element-card-space {\n        padding-bottom: 16px;\n    }\n\n    .element-card-footer {\n        @include flex-row-wrap;\n        padding-top: 16px;\n        justify-content: space-between;\n\n        span {\n            overflow-wrap: break-word;\n            width: 100%;\n        }\n    }\n\n    .card-list-display {\n        @include flex-column-nowrap;\n        width: 100%;\n        justify-content: space-between;\n    }\n\n    .card-icon-div {\n        display: flex;\n        justify-content: center;\n        padding: 10px 0;\n    }\n\n    .card-icon-style {\n        font-size: 80px;\n    }\n\n    .arrow-icon-down {\n        transform: rotate(180deg);\n        transition: all .3s ease;\n    }\n\n    .arrow-icon-up {\n        transform: rotate(0deg);\n        transition: all .3s ease;\n    }\n</style>\n"],"sourceRoot":"src/components"}]}