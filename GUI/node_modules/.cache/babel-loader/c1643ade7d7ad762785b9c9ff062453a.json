{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/eslint-loader/index.js??ref--14-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/api.js","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/api.js","mtime":1641326767932},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/eslint-loader/index.js","mtime":1641411772337}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/api.js"],"names":["DATATYPES","PREFIXTYPES","PARAMETERNAMES","upperFirstLetter","sortCaseInsensitive","removePrefix","pluralize","ta2DataSource","ta3DataSource","$store","axios","UPPERCASECATEGORY","event","eventType","id","relation","relationType","REQUEST","get","post","delete","put","patch","APIERRORMESSAGE","evalClient","create","baseURL","location","protocol","hostname","timeout","s3Client","sinClient","process","env","VUE_APP_IS_DEV","EXCLUDEDDATASOURCES","BASE_URL","getURLParams","params","ret","URLSearchParams","Object","entries","key","value","append","fetchDataSourceList","apiRequest","getCategoryArguments","namedGraph","category","text","getCategoryTypes","getPrototypeArguments","prototypeId","graph","getClustersByCategory","limit","dataLimit","getClustersByQueryParams","query","argumentName","length","getClusterDetails","getSinDocuments","hypothesis","roles","getElementDetails","getEntityClusterDetails","getEntityElementDetails","getSinEventTypes","sinId","entityIds","Array","isArray","getSinEntityNames","eventTypes","roleTypes","getSinRoles","prototypeIds","getSinQueryResults","filters","keys","JSON","stringify","getAllSinEventTypes","clusterIds","getAllSinRoles","getAllSinNames","getAllSinQueryResults","getClaimFrames","getClaimFrameById","claimFrameId","getClaimFrameFilterValues","getGraphs","deleteGraph","graphURI","importGraph","blob","formData","FormData","renameGraph","graphURIOrig","graphURINew","deleteCache","cacheGraph","payload","api","parameters","requestType","noContentTypeHeader","url","request","method","dataObject","data","statusMessage","promise","fetch","then","response","ok","json","Error","statusText","catch","error","toString","transformParamFormat","formattedParams","categoryTypes","conditionalTypes","entityType","kbId","parameter","hasOwnProperty","isObject","includes","values","condition","compileApiParams","apiParams","queryState","getters","getQueryParams","term","currentDataSource","datasoure","filter","searchKey","type","input","setInitialData","sourceList","Set","reduce","sources","s","charCount","split","source","substring","lastIndexOf","push","commit","find","d","dispatch","setCategoryData","dataType","setCategoryArguments","setCategoryTypes","formatArgumentStrings","nameList","map","replace","formatCategoryTypes","hash","state","defaultKbDataSource","items","arguments","types"],"mappings":"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","sourcesContent":["/*\n * Copyright 2019 Next Century Corporation/CACI\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n    DATATYPES,\n    PREFIXTYPES,\n    PARAMETERNAMES,\n    upperFirstLetter,\n    sortCaseInsensitive,\n    removePrefix,\n    pluralize,\n    ta2DataSource,\n    ta3DataSource\n} from './utils';\nimport $store from './store'\nimport axios from 'axios';\n\nexport const UPPERCASECATEGORY = {\n    event: upperFirstLetter(DATATYPES.eventType.id),\n    relation: upperFirstLetter(DATATYPES.relationType.id)\n};\n\nexport const REQUEST = {\n    get: 'GET',\n    post: 'POST',\n    delete: 'DELETE',\n    put: 'PUT',\n    patch: 'PATCH'\n};\n\nexport const APIERRORMESSAGE = '. Please contact administrator.';\nexport const evalClient = axios.create({\n    baseURL: location.protocol + '//' + location.hostname + ':5002/',\n    timeout: 2000\n});\nexport const s3Client = axios.create({\n    baseURL: 'https://s3.amazonaws.com/aida-blackbox-media/html/',\n    timeout: 2000\n});\nexport const sinClient = axios.create({\n    baseURL: process.env.VUE_APP_IS_DEV ? 'https://blackbox.verdi.nextcentury.com/solr/' : location.protocol + '//' + location.hostname + ':8983/solr/',\n    timeout: 2000\n});\nexport const EXCLUDEDDATASOURCES = [];\n\n// invoke ui with 'npx vue-cli-service serve --mode dev'\nexport const BASE_URL = location.protocol + '//' + location.hostname + ':' + (process.env.VUE_APP_IS_DEV ? '' : '8008') + '/api/';\n\nexport default {\n    getURLParams(params = {}) {\n        let ret = new URLSearchParams();\n        for ( const [key, value] of Object.entries(params)) {\n            if(value) {\n                ret.append(key, value);\n            }\n        }\n        return ret;\n    },\n    fetchDataSourceList () {\n        return this.apiRequest('graphs');\n    },\n    getCategoryArguments (namedGraph, category, text) {\n        let params = {\n            'graph': namedGraph\n        };\n\n        if(text) {\n            params['argument'] = text;\n        }\n        return this.apiRequest(pluralize(category) + '/arguments', params);\n    },\n    getCategoryTypes (namedGraph, category) {\n        let params = {\n            'graph': namedGraph\n        };\n\n        return this.apiRequest(pluralize(category) + '/types', params);\n    },\n    getPrototypeArguments(prototypeId, graph) {\n        return this.apiRequest('/roles', {\n            id: prototypeId,\n            graph: graph\n        });\n    },\n    getClustersByCategory (namedGraph, category, limit) {\n        return this.apiRequest(pluralize(category), {\n            graph: namedGraph,\n            dataLimit: limit\n        });\n    },\n    getClustersByQueryParams(namedGraph, category, query, limit) {\n        let params = {\n            graph : namedGraph,\n            dataLimit : limit\n        };\n\n        if(query[DATATYPES.argumentName.id]) {\n            params['arguments'] = query[DATATYPES.argumentName.id];\n        }\n\n        if(query[category] && query[category].length > 0 && query[category][0] !== 'undefined') {\n            params['types'] = query[category];\n        }\n\n        return this.apiRequest(pluralize(category), params);\n    },\n    getClusterDetails (id, category, namedGraph) {\n        let params = {id: id};\n        if(namedGraph) {\n           params['graph'] = namedGraph;\n        }\n        return this.apiRequest(category, params);\n    },\n    getSinDocuments(id, namedGraph, hypothesis, roles) {\n        let params = {id: id, hypothesis: hypothesis, roles: roles};\n        if(namedGraph) {\n            params['graph'] = namedGraph;\n        }\n        return this.apiRequest('docs', params);\n    },\n    getElementDetails (id, category) {\n        return this.apiRequest(category + '/element', {id: id});\n    },\n    getEntityClusterDetails (id, limit) {\n        return this.apiRequest('entity', {id: id, dataLimit: limit});\n    },\n    getEntityElementDetails (id) {\n        return this.apiRequest('entity/element', {id: id});\n    },\n    getSinEventTypes (sinId, entityIds) {\n        let params = {};\n        if(Array.isArray(entityIds) && entityIds.length > 0) {\n            params['entityIds'] = entityIds;\n        }\n        return this.apiRequest('sin/' + sinId + '/eventTypes', params);\n    },\n    getSinEntityNames (sinId, eventTypes, roleTypes) {\n\n        let params = {};\n        if(Array.isArray(eventTypes) && eventTypes.length > 0) {\n            params['eventTypes'] = eventTypes;\n        }\n\n        if(Array.isArray(roleTypes) && roleTypes.length > 0) {\n            params['roleTypes'] = roleTypes;\n        }\n        return this.apiRequest('sin/' + sinId + '/names', params);\n    },\n    getSinRoles(sinId, eventTypes, prototypeIds) {\n        let params = {};\n        if(Array.isArray(eventTypes) && eventTypes.length > 0) {\n            params['eventTypes'] = eventTypes;\n        }\n\n        if(Array.isArray(prototypeIds) && prototypeIds.length > 0) {\n            params['prototypeIds'] = prototypeIds;\n        }\n\n        return this.apiRequest('sin/' + sinId + '/roles', params);\n    },\n    getSinQueryResults(sinId, filters) {\n        let params = '';\n        if(Object.keys(filters).length > 0) {\n            params = JSON.stringify(filters);\n        }\n\n        return this.apiRequest('sin/' + sinId  + '/search', params, REQUEST.post);\n    },\n    getAllSinEventTypes (roles, clusterIds) {\n        let params = {};\n        if(Array.isArray(roles) && roles.length > 0) {\n            params['roleTypes'] = roles;\n        }\n\n        if(Array.isArray(clusterIds) && clusterIds.length > 0) {\n            params['clusterIds'] = clusterIds;\n        }\n        return this.apiRequest('sin/eventTypes', null, REQUEST.post, JSON.stringify(params));\n    },\n    getAllSinRoles (eventTypes, clusterIds) {\n        let params = {};\n        if(Array.isArray(eventTypes) && eventTypes.length > 0) {\n            params['eventTypes'] = eventTypes;\n        }\n\n        if(Array.isArray(clusterIds) && clusterIds.length > 0) {\n            params['clusterIds'] = clusterIds;\n        }\n\n        return this.apiRequest('sin/roles', params);\n    },\n    getAllSinNames (eventTypes, roles) {\n        let params = {};\n        if(Array.isArray(eventTypes) && eventTypes.length > 0) {\n            params['eventTypes'] = eventTypes;\n        }\n\n        if(Array.isArray(roles) && roles.length > 0) {\n            params['roleTypes'] = roles;\n        }\n\n        return this.apiRequest('sin/names', params);\n    },\n    getAllSinQueryResults(filters) {\n        let params = {};\n        if(Object.keys(filters).length > 0) {\n            params = filters;\n        }\n\n        return this.apiRequest('sin/search', null, REQUEST.post, JSON.stringify(params));\n    },\n    getClaimFrames(filters) {\n        let params = {};\n        if(Object.keys(filters).length > 0) {\n            params = filters;\n        }\n\n        return this.apiRequest('claimframe/search', null, REQUEST.post, JSON.stringify(params));\n    },\n\n    getClaimFrameById(claimFrameId) {\n        return this.apiRequest('claimframe/' + claimFrameId)\n    },\n\n    getClaimFrameFilterValues() {\n        return this.apiRequest('claimframe/topics');\n    },\n    getGraphs() {\n        let params = '';\n        return this.apiRequest('graphs', params, REQUEST.get);\n    },\n    deleteGraph(graphURI) {\n        let params = {};\n        params['graphURI'] = graphURI;\n        return this.apiRequest('graph', params, REQUEST.delete, null);\n    },\n    importGraph(graphURI, blob) {\n        let params = {};\n        params['graphURI'] = graphURI;\n\n        let formData = new FormData();\n        formData.append('fileName', blob);\n\n        return this.apiRequest('graph', params, REQUEST.post, formData, true);\n    },    \n    renameGraph(graphURIOrig, graphURINew) {\n        let params = {};\n        params['graphURIOrig'] = graphURIOrig;\n        params['graphURINew'] = graphURINew;\n        return this.apiRequest('graph', params, REQUEST.put, null);\n    },\n    deleteCache(graphURI) {\n        let params = {};\n        if (graphURI) {\n            params['graphURI'] = graphURI;\n        } else {\n            params = null;\n        }\n        return this.apiRequest('cache', params, REQUEST.delete, null);\n    },\n    cacheGraph(payload) {\n        return this.apiRequest('cache', null, REQUEST.post, payload);\n    },\n    apiRequest(api, parameters, requestType=REQUEST.get, payload=null, noContentTypeHeader=false) {\n        let url = BASE_URL + api;\n        let request = { method: requestType };\n        let dataObject = {data:{}, statusMessage:''};\n\n        url += (parameters ? '?' + this.getURLParams(parameters) : '');\n        request['headers'] = {'Accept': 'application/json'};\n\n        if (payload) {\n            request['body'] = payload;\n        }\n\n        //TODO: FIX THIS, header must be null for formData\n        if (!noContentTypeHeader) {\n            request['headers'] = {'Content-Type': 'application/json; charset=utf-8'};\n        }\n\n        let promise = fetch(url, request);\n\n        return promise.then((response) => {\n            if(response.ok) {\n                return response.json();\n            } else {\n                throw new Error(response.statusText);\n            }\n        }).then((response) => {\n            dataObject.data = response;\n            return dataObject;\n        }).catch((error) => {\n            dataObject.statusMessage = error.toString() + APIERRORMESSAGE;\n            return dataObject;\n        });\n    },\n    transformParamFormat(parameters) {\n        let formattedParams = {};\n        let categoryTypes = [DATATYPES.eventType.id, DATATYPES.relationType.id];\n        let conditionalTypes = [DATATYPES.entityType.id, DATATYPES.argumentName.id, DATATYPES.kbId.id];\n\n        for (const parameter in parameters) {\n            if(parameters.hasOwnProperty(parameter)) {\n                const isObject = typeof parameters[parameter] === 'object';\n\n                //Checks for relation or event filters that include nested objects and returns its values as an array.\n                //Checks for relation, event, or conditional filters that contain string values and returns an array of the string values.\n                //Checks for conditional filters that contain a \"values\" object and returns its values as an array.\n                // All other filter/query values are returned as is.\n                formattedParams[parameter] = categoryTypes.includes(parameter) && isObject ? [...Object.values(parameters[parameter])] :\n                    (categoryTypes.includes(parameter) || conditionalTypes.includes(parameter)) && !isObject ?  [parameters[parameter]] :\n                    conditionalTypes.includes(parameter) && parameters[parameter].values ? { condition : parameters[parameter].condition, values : [...Object.values(parameters[parameter].values)]} :\n                    parameters[parameter];\n            }\n        }\n\n        return formattedParams;\n    },\n    compileApiParams() {\n        let apiParams = {};\n        let queryState = $store.getters.getQueryParams;\n\n        if(queryState.url.params && queryState.url.params.term) {\n            apiParams[PARAMETERNAMES.term] = queryState.url.params.term;\n        }\n\n        //Set the datasource for this object\n        if(queryState.currentDataSource) {\n            apiParams[PARAMETERNAMES.datasoure] = queryState.currentDataSource;\n        }\n\n        //Verify that filters have been submitted and add all filters to this object.\n        if(Object.keys(queryState.filter).length > 0) {\n            apiParams = {...apiParams, ...this.transformParamFormat(queryState.filter)};\n\n            //Set the filter id for the entire query in order to save the query to a database\n            if(queryState.url.params && queryState.url.params.filter) {\n                apiParams['filter_id'] = queryState.url.params.filter;\n            }\n        }\n\n        //Verify that a search bar term has been submitted and add the query values to this object\n        if(Object.keys(queryState.term).length > 0) {\n\n            const searchKey = queryState.term.type;\n            if(searchKey) {\n                //transforms term keys into a key-value pair where type becomes the key and input becomes an array\n                let formattedParams = {[searchKey]: [queryState.term.input]};\n\n                //If the searchKey exists in apiParams, concatenate the term input array with the existing apiParams arrays. Otherwise define the searchKey object\n                apiParams = {\n                    ...apiParams, [searchKey]:\n                        apiParams[searchKey] ? [...formattedParams[searchKey], ...apiParams[searchKey]] : formattedParams[searchKey]\n                };\n            }\n        }\n        return apiParams;\n    },\n    setInitialData() {\n        this.fetchDataSourceList().then((response) => {\n            if(response.data && response.data.length > 0) {\n                const sourceList = sortCaseInsensitive([...new Set(response.data.reduce((sources, s) => {\n                    const charCount = s.split('/').length - 1;\n                    const source = charCount === 5 ? s : s.substring(0, s.lastIndexOf('/'));\n                    if(!EXCLUDEDDATASOURCES.includes(source)) {\n                        sources.push(source);\n                    }\n                    return sources;\n                }, []))]);\n\n\n                $store.commit('setDefaultKbDataSource', sourceList.find(d => ta2DataSource(d)));\n                $store.commit('setDefaultHypothesisDataSource', sourceList.find(d => ta3DataSource(d)));\n                $store.dispatch('updateDataSourceProperties', sourceList);\n                this.setCategoryData();\n            }\n        });\n    },\n    setCategoryData(source) {\n        for (let dataType of [DATATYPES.eventType.id, DATATYPES.relationType.id]) {\n            this.setCategoryArguments(dataType, source);\n            this.setCategoryTypes(dataType,source);\n        }\n    },\n    formatArgumentStrings(data) {\n        //remove double quotes in the argument strings\n        let nameList = data.map(value => {\n            return value.replace(/\"/g, '');\n        });\n\n        //remove duplicates and case insensitive sort of values\n        return sortCaseInsensitive([...new Set(nameList)]);\n    },\n    formatCategoryTypes(data) {\n        return sortCaseInsensitive(data.map(value => {\n            return removePrefix(value, PREFIXTYPES.hash);\n        }));\n    },\n    setCategoryArguments(category, source = $store.state.defaultKbDataSource) {\n        this.getCategoryArguments(\n            source,\n            category\n        ).then((response) => {\n            if (response.data && response.data.length > 0) {\n                const items = this.formatArgumentStrings(response.data);\n                $store.dispatch('updateCategoryArgumentsProperties', {category:category, arguments: items})\n            }\n        });\n    },\n    setCategoryTypes(category, source = $store.state.defaultKbDataSource) {\n        this.getCategoryTypes(\n            source,\n            category\n        ).then((response) => {\n            if (response.data && response.data.length > 0) {\n                const items = this.formatCategoryTypes(response.data);\n                $store.commit('updateCategoryTypes', {category:category, types: items})\n            }\n        });\n    }\n}\n"]}]}