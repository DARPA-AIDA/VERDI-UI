{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/settings/GraphLoad.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/settings/GraphLoad.vue","mtime":1641326767935},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GraphLoad.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"page-content\">\n    <h2>What would you like to do?</h2>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <h3 class=\"kb-heading\">Graph Management</h3>\n          <Collapse>\n            <template v-slot:header> <h3>Add Graph to triple store</h3> </template>\n            <template v-slot:content>\n              <h3>URI Base: {{ uriBase }}</h3>\n              <div>\n                <v-select\n                  :items=\"taskAreaOptions\"\n                  label=\"Select Task Area\"\n                  @input=\"showImportItems\"\n                  ref=\"taskArea\"\n                  @change=\"updateURI\"\n                  v-model=\"taskArea\"\n                ></v-select>\n              </div>\n              <div>\n                <v-select\n                  v-if=\"showTA3\"\n                  :items=\"sinOptions\"\n                  label=\"Select SIN\"\n                  @input=\"updateURI\"\n                  ref=\"sinSelect\"\n                  id=\"sinSelect\"\n                  v-model=\"sinID\"\n                  @change=\"updateURI\"\n                ></v-select>\n              </div>\n              <div>\n                <v-text-field\n                  v-if=\"showTA3\"\n                  label=\"TA3 Team Run ID: {TeamID}-{RunID}\"\n                  v-model=\"ta3Run\"\n                  @change=\"updateURI\"\n                />\n              </div>\n              <div>\n                <v-text-field\n                  v-if=\"showTA2 || showTA3\"\n                  label=\"TA2 Team Run ID: {TeamID}-{RunID}\"\n                  v-model=\"ta2Run\"\n                  @change=\"updateURI\"\n                />\n              </div>\n              <div>\n                <v-text-field\n                  v-if=\"showTA2 || showTA3\"\n                  label=\"TA1 Team Run ID: {TeamID}-{RunID}\"\n                  v-model=\"ta1Run\"\n                  @change=\"updateURI\"\n                />\n              </div>\n              <v-file-input\n                v-if=\"showTA2 || showTA3\"\n                accept=\"*.ttl\"\n                label=\"Select TTL File\"\n                show-size\n                id=\"fileInput\"\n                ref=\"fileInput\"\n                @change=\"changeFileInput\"\n              ></v-file-input>\n              <div>\n                <v-text-field\n                  v-if=\"showTA2 || showTA3\"\n                  label=\"URI of Graph\"\n                  v-model=\"newGraphURI\"\n                />\n              </div>\n              <div class=\"form-wrapper\">\n                <div class=\"row-wrapper-flex\" v-if=\"showTA2 || showTA3\">\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"importGraph()\">Import TTL</button>\n                  </div>\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"clearImportInputs()\">Clear</button>\n                  </div>\n                </div>\n                <div class=\"status-heading\">\n                  <div>Import Status:</div>\n                  <div><textarea v-model=importResponse readonly></textarea></div>\n                </div>\n              </div>\n            </template>\n          </Collapse>\n          <Collapse>\n            <template v-slot:header>\n              <h3>Delete Graph from triple store</h3>\n            </template>\n            <template v-slot:content> \n              <v-select \n                label='Select Graphs to Delete' \n                :items=\"graphsList\"\n                v-model=\"graphsListDelete\"\n                id=\"selectDelete\"\n                ref=\"selectDelete\"\n                multiple>\n              </v-select>\n              <div class=\"form-wrapper\">\n                <div>\n                  <button class=\"dark-app-button\" @click=\"deleteGraph()\">Delete Graph</button>\n                </div>\n                <div class=\"status-heading\">\n                  <div>Delete Status:</div>\n                  <div><textarea v-model=deleteResponse readonly></textarea></div>\n                </div>\n              </div>\n            </template>\n          </Collapse>\n          <Collapse>\n            <template v-slot:header>\n              <h3>Rename Graph in triple store</h3>\n            </template>\n            <template v-slot:content> \n              <v-select \n                label='Select Graph to Rename' \n                ref=\"origRenameGraph\"\n                id=\"origRenameGraph\"\n                v-model=\"origRenameGraph\"\n                :items=\"graphsList\"\n                @change=\"defaultRenameGraph\"\n              ></v-select>\n              <v-text-field  \n                label=\"New Graph URI\"\n                id=\"newRenameGraph\"\n                ref=\"newRenameGraph\"\n                v-model=\"newRenameGraph\"\n              />\n              <div class=\"form-wrapper\">\n                <div>\n                <button class=\"dark-app-button\" @click=\"renameGraph()\">Rename Graph</button>\n                </div>\n                <div  class=\"status-heading\">\n                  <div>Rename Status:</div>\n                  <div><textarea v-model=renameResponse readonly></textarea></div>\n                </div>\n              </div>\n            </template>\n          </Collapse>\n        </div>\n        <div class=\"col-sm\">\n          <h3 class=\"kb-heading\">Cache Management</h3>\n            <Collapse>\n              <template v-slot:header>\n                <h3>Create TA2 Cache</h3>\n              </template>\n              <template v-slot:content> \n                <v-select \n                  label='Select Graphs to cache' \n                  v-model=\"cacheGraphList\"\n                  :items=\"rootTA2GraphsList\"\n                  @change=\"defaultRenameGraph\"\n                  multiple\n                ></v-select>\n                <div class=\"form-wrapper\">\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"cacheTA2GraphsList()\">Cache Graph(s)</button>\n                  </div>\n                  <div class=\"status-heading\">\n                    <div>Create Cache Status:</div>\n                    <div><textarea v-model=createCacheResponse readonly></textarea></div>\n                  </div>\n                </div>\n              </template>\n            </Collapse>\n            <Collapse>\n              <template v-slot:header>\n                <h3>Delete TA2 Indices From Cache</h3>\n              </template>\n              <template v-slot:content> \n                <v-select \n                  label='Select Graphs to delete indices' \n                  v-model=\"uncacheGraphList\"\n                  :items=\"rootTA2GraphsList\"\n                  @change=\"defaultRenameGraph\"\n                  multiple\n                ></v-select>\n                <div class=\"form-wrapper\">\n                  <div class=\"row-wrapper-flex\">\n                    <div>\n                      <button class=\"dark-app-button\" @click=\"deleteCacheList()\">Clear selected indices</button>\n                    </div>\n                    <div>\n                      <button class=\"dark-app-button\" @click=\"deleteCacheAll()\">Clear all indices</button>\n                    </div>\n                  </div>\n                  <div class=\"status-heading\">\n                    <div>Clear Cache Status:</div>\n                    <div><textarea v-model=clearCacheResponse readonly></textarea></div>\n                  </div>\n                </div>\n              </template>\n            </Collapse>\n            <Collapse>\n              <template v-slot:header>\n                <h3>Create TA3 Cache</h3>\n              </template>\n              <template v-slot:content>\n                <div class=\"form-wrapper\">\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"cacheTA3Graphs()\">Index All TA3 Graphs</button>\n                  </div>\n                  <div class=\"status-heading\">\n                    <div>Clear Cache Status:</div>\n                    <div><textarea v-model=cacheTA3Response readonly></textarea></div>\n                  </div>\n                </div>\n              </template>\n            </Collapse>        \n          </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Collapse from '@/components/Collapse';\nimport API from '../../api';\nimport { DATASOURCEURI } from '../../utils';\n\nexport default {\n  name: 'GraphManagement',\n  components: { Collapse },\n  data: () => ({\n    taskAreaOptions: [\n      { value: 'TA2', text: 'TA2' },\n      { value: 'TA3', text: 'TA3' },\n    ],\n    sinOptions: [\n      { value: 'E201', text: 'E201' },\n      { value: 'E202', text: 'E202' },\n      { value: 'E203', text: 'E203' },\n    ],\n    showTA2: false,\n    showTA3: false,\n    uriBase: DATASOURCEURI,\n    newGraphURI: '',\n    taskArea: '',\n    sinID: '',\n    ta1Run: '',\n    ta2Run: '',\n    ta3Run: '',\n    importResponse: '',\n    deleteResponse: '',\n    renameResponse: '',\n    clearCacheResponse: '',\n    createCacheResponse: '',\n    cacheTA3Response: '',\n    uploadFile: undefined,\n    graphsList: [],\n    graphsListDelete: [],\n    cacheGraphList: [],\n    uncacheGraphList: [],\n    origRenameGraph: '',\n    newRenameGraph: '',\n    rootGraphsList: [],\n    rootTA2GraphsList: [],\n    rootTA3GraphsList: [],\n  }),\n  mounted() {\n    this.updateGraphsList();\n  },\n  methods: {\n    updateURI() {\n      if (this.showTA2) {\n        this.newGraphURI = [this.uriBase,this.taskArea,this.ta2Run,this.ta1Run].join('/');\n      }\n      if (this.showTA3) {\n        this.newGraphURI = [this.uriBase,this.taskArea,this.sinID,this.ta3Run,this.ta2Run,this.ta1Run,(typeof this.uploadFile == 'undefined' ? '' :  (typeof this.uploadFile.name == 'undefined' ? '' : this.uploadFile.name.replace('.ttl', '')))].join('/');       \n      }\n    },\n    changeFileInput(file) {\n      this.uploadFile = file;\n      this.updateURI();\n    },    \n    clearImportInputs() {\n      this.taskArea = '';\n      this.sinID = '';\n      this.ta3Run = '';\n      this.ta2Run = '';\n      this.ta1Run = '';\n      this.uploadFile = undefined;\n      this.$refs['fileInput'].reset();\n      this.newGraphURI = '';\n      this.showTA2 = false;\n      this.showTA3 = false;\n    },\n    showImportItems(value) {\n      if (value === 'TA2') {\n        this.showTA2 = true;\n        this.showTA3 = false;\n      }\n      if (value === 'TA3') {\n        this.showTA2 = false;\n        this.showTA3 = true;\n      }\n    },\n    importGraph() {\n      if (this.validateURI(this.newGraphURI)) {\n        this.importResponse = '> Currently importing ' + this.newGraphURI + '...\\n';\n        API.importGraph(this.newGraphURI, this.uploadFile).then((response) => {\n          if (response.data && Object.keys(response.data).length > 0) {\n            this.importResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n          }\n          this.updateGraphsList();\n          this.importResponse += '> Completed importing of ' + this.newGraphURI + '.\\n';\n          if (this.showTA2) {\n            this.cacheTA2Graph(this.getGraphRoot(this.newGraphURI));\n          }\n        });\n      } else {\n        alert('Please complete all the components of the URI.');\n      }\n    },\n    renameGraph() {\n      this.renameResponse = '> Currently renaming ' + this.origRenameGraph + ' to ' + this.newRenameGraph + '...\\n';\n      API.renameGraph(this.origRenameGraph, this.newRenameGraph).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.renameResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        this.updateGraphsList();\n        this.renameResponse += '> Completed renaming of ' + this.origRenameGraph + ' to ' + this.newRenameGraph + '.\\n';\n        this.newRenameGraph = '';\n      });\n    },\n    defaultRenameGraph() {\n      this.newRenameGraph = this.origRenameGraph;\n    },    \n    updateGraphsList() {\n      this.rootGraphsList = []\n      this.rootTA2GraphsList = []\n      this.rootTA3GraphsList = []\n      API.getGraphs().then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.graphsList = response.data;\n          this.graphsList.forEach(graph => {\n            if (this.rootGraphsList.indexOf(graph) === -1) {\n              this.rootGraphsList.push(graph);\n            }\n\n            if (graph.includes('/TA2/')) {\n              if (this.rootTA2GraphsList.indexOf(graph) === -1)\n                this.rootTA2GraphsList.push(graph);\n            }\n            if (graph.includes('/TA3/')) {\n              if (this.rootTA3GraphsList.indexOf(this.getGraphRoot(graph)) === -1)\n                this.rootTA3GraphsList.push(this.getGraphRoot(graph));\n            }\n          });\n        }\n      });\n    },\n    deleteGraph() {\n      this.deleteResponse = '';\n      this.graphsListDelete.forEach(graph => {\n\n        if (graph.includes('/TA2/')) {\n          this.deleteResponse += '> Currently deleting ' + graph + '...\\n';\n          API.deleteGraph(graph).then((response) => {\n            if (response.data && Object.keys(response.data).length > 0) {\n              this.deleteResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n            }\n            this.updateGraphsList();\n            this.deleteResponse += '> Completed deletion of ' + graph + ' .\\n'\n            this.deleteCacheGraph(graph);\n            this.deleteResponse += '> Cache for ' + graph + ' was also removed.\\n'\n          });\n        }\n\n        if (graph.includes('/TA3/')) {\n          this.deleteResponse += '> Currently deleting ' + graph + '...\\n';\n          API.deleteGraph(graph).then((response) => {\n            if (response.data && Object.keys(response.data).length > 0) {\n              this.deleteResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n            }\n            this.updateGraphsList();\n            this.deleteResponse += '> Completed deletion of ' + graph + ' .\\n'\n          });\n        }\n\n      });\n      //needs check\n      this.graphsListDelete = [];\n      this.$refs['selectDelete'].reset();\n    },\n    deleteCacheList() {\n      this.clearCacheResponse = '';\n      this.uncacheGraphList.forEach(graph => {\n        this.deleteCacheGraph(graph);\n      });\n\n    },\n    deleteCacheGraph(graph) {\n      this.clearCacheResponse += '> Clearing index for ' + graph + '...\\n';\n      API.deleteCache(graph).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.clearCacheResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        //TODO: Catch Error\n        this.updateGraphsList();\n        this.clearCacheResponse += '> Clearing index for ' + graph + ' completed\\n';\n      });\n    },\n    deleteCacheAll() {\n      if (confirm('Are you sure you want to delete all indices in the cache?')) {\n        this.clearCacheResponse = '> Clearing all indices from cache...\\n';\n        API.deleteCache(null).then((response) => {\n          if (response.data && Object.keys(response.data).length > 0) {\n            this.clearCacheResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n          }\n          //TODO: Catch Error\n          this.updateGraphsList();\n          this.clearCacheResponse += '> Clearing all indices has completed\\n'\n        });\n      }\n    },\n    cacheTA2GraphsList() {\n      this.createCacheResponse = '';\n      this.cacheGraphList.forEach(graph => {\n\n        var payload = {\n          'taskArea': 'TA2',\n          'overwrite': true,\n          'graphRootURI': [graph]\n        };\n\n        this.createCacheResponse += '> Currently caching ' + graph + '...\\n';\n\n        API.cacheGraph(JSON.stringify(payload)).then((response) => {\n          if (response.data && Object.keys(response.data).length > 0) {\n            this.createCacheResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n          }\n          //TODO: Catch Error\n          this.createCacheResponse += '> Completed caching of ' + graph + ' .\\n'\n        });\n      });\n    },\n\n    cacheTA2Graph(graph) {\n\n      var payload = {\n        'taskArea': 'TA2',\n        'overwrite': true,\n        'graphRootURI': [graph]\n      };\n\n      this.importResponse += '> Currently caching ' + graph + '...\\n';\n\n      API.cacheGraph(JSON.stringify(payload)).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.importResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        //TODO: Catch Error\n        this.importResponse += '> Completed caching of ' + graph + ' .\\n';\n      });\n    },\n    cacheTA3Graphs() {\n\n      var payload = {\n        'taskArea': 'TA3',\n        'overwrite': true,\n        'graphRootURI': this.rootTA3GraphsList\n      };\n\n      this.cacheTA3Response = '> Currently caching all TA3 Graphs...\\n';\n\n      API.cacheGraph(JSON.stringify(payload)).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.cacheTA3Response += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        //TODO: Catch Error\n        this.cacheTA3Response += '> Completed caching of all TA3 Graphs.\\n';\n      });\n    },\n\n    getGraphRoot(graph) {\n      if (graph.includes('/TA2/'))\n        return graph;\n      if (graph.includes('/TA3/'))\n        return graph.replace('/' + graph.split('/').pop() , '');\n    },\n    validateURI(strURI) {\n      if (strURI.includes('/TA2/')) {\n        if (this.ta2Run !== '' &&\n            this.ta1Run !== '' &&\n            (typeof this.uploadFile !== 'undefined'))\n              return true;\n      }\n      if (strURI.includes('/TA3/')) {\n        if (this.sinID !== '' &&\n            this.ta3Run !== '' &&\n            this.ta2Run !== '' &&\n            this.ta1Run !== '' &&\n            (typeof this.uploadFile !== 'undefined'))\n            return true;\n      }\n      return false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n  border: none !important;\n  font-size: 8pt;\n  font-family: Arial;\n  background-color: #f3f3f3;\n  color: #03777d;\n  width: 100%;\n}\n\n.status-heading {\n  font-size: 14px;\n  width: 100%;\n  margin-top: 26px;\n}\n</style>\n"],"sourceRoot":"src/views/settings"}]}