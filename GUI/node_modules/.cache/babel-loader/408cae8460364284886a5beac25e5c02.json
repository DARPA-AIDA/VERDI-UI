{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/eslint-loader/index.js??ref--14-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/mixins/QueryViewMixin.js","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/mixins/QueryViewMixin.js","mtime":1640207172532},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/eslint-loader/index.js","mtime":1641411772337}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvd29taXRvd29qdS93b3Jrc3BhY2UvYWlkYS9WRVJESS1VSS9HVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24ubmFtZSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KSksIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH0KCi8qCiAqIENvcHlyaWdodCAyMDE5IE5leHQgQ2VudHVyeSBDb3Jwb3JhdGlvbi9DQUNJCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KICoKICovCmltcG9ydCB7IFBBUkFNRVRFUk5BTUVTLCBWVUVST1VURVMgfSBmcm9tICIuLi91dGlscyI7CmltcG9ydCBRdWVyeVN1Ym1pc3Npb25NaXhpbiBmcm9tICIuL1F1ZXJ5U3VibWlzc2lvbk1peGluIjsKaW1wb3J0IHsgbWFwTXV0YXRpb25zLCBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zLCBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbUXVlcnlTdWJtaXNzaW9uTWl4aW5dLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcmV2Um91dGU6IG51bGwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy9VcG9uIHJldHVybmluZyB0byBhIHZpZXcgZnJvbSBhbm90aGVyIHZpZXcsIHRoZSB1cmwgcGFyYW1ldGVycyBuZWVkIHRvIGJlIHVwZGF0ZWQKICAgIGlmICh0aGlzLnNhdmVkVXJsUGFyYW1ldGVycyAmJiB0aGlzLnNhdmVkVXJsUGFyYW1ldGVyc1t0aGlzLiRyb3V0ZS5uYW1lXSAmJiBPYmplY3Qua2V5cyh0aGlzLnNhdmVkVXJsUGFyYW1ldGVyc1t0aGlzLiRyb3V0ZS5uYW1lXSkubGVuZ3RoID4gMCkgewogICAgICB2YXIgc2F2ZWRQYXJhbXMgPSB0aGlzLnNhdmVkVXJsUGFyYW1ldGVyc1t0aGlzLiRyb3V0ZS5uYW1lXTsgLy9UaGUgImNsYWltcyIgYW5kICJhbmFseXplIiByb3V0ZXMgYXJlIHJlbGF0ZWQgYW5kIHNob3VsZCBoYXZlIHRoZSBzYW1lIHNhdmVkUGFyYW1ldGVycyBmb3Igbm93CgogICAgICB2YXIgcmVtb3ZlZEJ5Q2xhaW1zID0gdGhpcy4kcm91dGUubmFtZSA9PT0gJ2FuYWx5emUnICYmICghdGhpcy5zYXZlZFVybFBhcmFtZXRlcnNbJ2NsYWltcyddIHx8ICF0aGlzLnNhdmVkVXJsUGFyYW1ldGVyc1snY2xhaW1zJ11bUEFSQU1FVEVSTkFNRVMudGVybV0pOyAvL3N0YXJ0IGFkZGluZyBzYXZlZCBwYXJhbWV0ZXJzIHRvIHRoZSB1cmwKCiAgICAgIGZvciAodmFyIHBhcmFtIGluIHNhdmVkUGFyYW1zKSB7CiAgICAgICAgaWYgKHNhdmVkUGFyYW1zLmhhc093blByb3BlcnR5KHBhcmFtKSkgewogICAgICAgICAgaWYgKHBhcmFtID09PSBQQVJBTUVURVJOQU1FUy50ZXJtICYmICFyZW1vdmVkQnlDbGFpbXMpIHsKICAgICAgICAgICAgdmFyIHRlcm1RdWVyeSA9IHNhdmVkUGFyYW1zW3BhcmFtXS5zcGxpdCgnOicpOwogICAgICAgICAgICB0aGlzLnVwZGF0ZVNlYXJjaFRlcm0oewogICAgICAgICAgICAgIHR5cGU6IHRlcm1RdWVyeVswXSwKICAgICAgICAgICAgICBpbnB1dDogdGVybVF1ZXJ5WzFdCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChwYXJhbSA9PT0gUEFSQU1FVEVSTkFNRVMuZGF0YXNvdXJlKSB7CiAgICAgICAgICAgIC8vaWYgdGhlIGN1cnJlbnQgZGF0YXNvdXJjZSBkb2VzIG5vdCBlcXVhbCB0aGUgdXJsIHJvdXRlCiAgICAgICAgICAgIGlmICh0aGlzLmRhdGFTb3VyY2VSb3V0ZVR5cGUoKSAhPT0gdGhpcy4kcm91dGUubmFtZSkgewogICAgICAgICAgICAgIHRoaXMudXBkYXRlQ3VycmVudERhdGFTb3VyY2Uoc2F2ZWRQYXJhbXNbcGFyYW1dKTsKICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVJvdXRlUGFyYW1zKHBhcmFtLCBzYXZlZFBhcmFtc1twYXJhbV0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgaWYgKHJlbW92ZWRCeUNsYWltcykgewogICAgICAgICAgICB0aGlzLnVwZGF0ZVJvdXRlUGFyYW1zKFBBUkFNRVRFUk5BTUVTLnRlcm0sICcnKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMudXBkYXRlUm91dGVQYXJhbXMocGFyYW0sIHNhdmVkUGFyYW1zW3BhcmFtXSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoIXNhdmVkUGFyYW1zW1BBUkFNRVRFUk5BTUVTLnRlcm1dKSB7CiAgICAgICAgdGhpcy51cGRhdGVTZWFyY2hUZXJtKHsKICAgICAgICAgIHR5cGU6IHRoaXMuZ2V0RGVmYXVsdFR5cGVJZEJ5Um91dGUoKQogICAgICAgIH0pOwogICAgICB9CiAgICB9IC8vSGFuZGxlcyBzdWJtaXR0aW5nIHRoZSBxdWVyeSB3aGVuIGEgdXJsIGlzIGNvcGllZCBpbnRvIHRoZSBicm93c2VyCiAgICBlbHNlIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5oYXNPd25Qcm9wZXJ0eShQQVJBTUVURVJOQU1FUy5kYXRhc291cmUpIHx8IHRoaXMuJHJvdXRlLnF1ZXJ5Lmhhc093blByb3BlcnR5KFBBUkFNRVRFUk5BTUVTLnRlcm0pIHx8IHRoaXMuJHJvdXRlLnF1ZXJ5Lmhhc093blByb3BlcnR5KFBBUkFNRVRFUk5BTUVTLmZpbHRlcikpIHsKICAgICAgdGhpcy51cGRhdGVTZWFyY2hUZXJtKHt9KTsKCiAgICAgIGlmICh0aGlzLmN1cnJlbnREYXRhU291cmNlICE9PSB0aGlzLiRyb3V0ZS5xdWVyeVtQQVJBTUVURVJOQU1FUy5kYXRhc291cmVdKSB7CiAgICAgICAgdGhpcy51cGRhdGVDdXJyZW50RGF0YVNvdXJjZSh0aGlzLiRyb3V0ZS5xdWVyeVtQQVJBTUVURVJOQU1FUy5kYXRhc291cmVdKTsKICAgICAgfSAvL2lmIGVxdWFsIGJ1dCBub3QgdGhlIGNvcnJlY3QgZGF0YXNvdXJjZQogICAgICBlbHNlIGlmICh0aGlzLmN1cnJlbnREYXRhU291cmNlID09PSB0aGlzLiRyb3V0ZS5xdWVyeVtQQVJBTUVURVJOQU1FUy5kYXRhc291cmVdICYmIHRoaXMuJHJvdXRlLm5hbWUgIT09IHRoaXMuZGF0YVNvdXJjZVJvdXRlVHlwZSgpKSB7CiAgICAgICAgLy9zZXQgZGVmYXVsdCBhbmQgdXBkYXRlIHBhcmFtCiAgICAgICAgdmFyIHNvdXJjZSA9IHRoaXMuZ2V0U3RvcmVCeVJvdXRlKHRoaXMuJHJvdXRlLm5hbWUpOwogICAgICAgIHRoaXMudXBkYXRlQ3VycmVudERhdGFTb3VyY2Uoc291cmNlKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5W1BBUkFNRVRFUk5BTUVTLnRlcm1dICYmICF0aGlzLnRlcm0udHlwZSkgewogICAgICAgIHZhciBfdGVybVF1ZXJ5ID0gdGhpcy4kcm91dGUucXVlcnlbUEFSQU1FVEVSTkFNRVMudGVybV0uc3BsaXQoJzonKTsKCiAgICAgICAgdGhpcy51cGRhdGVTZWFyY2hUZXJtKHsKICAgICAgICAgIHR5cGU6IF90ZXJtUXVlcnlbMF0sCiAgICAgICAgICBpbnB1dDogX3Rlcm1RdWVyeVsxXQogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAodGhpcy4kcm91dGUucXVlcnlbUEFSQU1FVEVSTkFNRVMuZmlsdGVyXSAmJiAoIXRoaXMuZmlsdGVycyB8fCBPYmplY3Qua2V5cyh0aGlzLmZpbHRlcnMpLmxlbmd0aCA9PT0gMCkpIHsKICAgICAgICB0aGlzLnJldHJpZXZlRmlsdGVycyh0aGlzLiRyb3V0ZS5xdWVyeVtQQVJBTUVURVJOQU1FUy5maWx0ZXJdKTsKICAgICAgfQoKICAgICAgdGhpcy5leGVjdXRlUXVlcnkoKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vcmVtb3ZlIGFsbCBmaWx0ZXJzIGlmIHRoZXkgYXJlIGNvbWluZyBmcm9tIGFub3RoZXIgdmlldwogICAgICB2YXIgdmlld1JvdXRlcyA9IFtWVUVST1VURVMudGEyLCBWVUVST1VURVMudGEzXTsKCiAgICAgIGlmICh0aGlzLnByZXZSb3V0ZSAmJiB2aWV3Um91dGVzLmluY2x1ZGVzKHRoaXMucHJldlJvdXRlLm5hbWUpICYmIHRoaXMucHJldlJvdXRlLm5hbWUgIT09IHRoaXMuJHJvdXRlLm5hbWUpIHsKICAgICAgICB0aGlzLnJlbW92ZUFsbEZpbHRlcnMoKTsKICAgICAgfQogICAgfQogIH0sCiAgYmVmb3JlUm91dGVFbnRlcjogZnVuY3Rpb24gYmVmb3JlUm91dGVFbnRlcih0bywgZnJvbSwgbmV4dCkgewogICAgbmV4dChmdW5jdGlvbiAodm0pIHsKICAgICAgdm0ucHJldlJvdXRlID0gZnJvbTsKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydzYXZlZFVybFBhcmFtZXRlcnMnXSkpLCBtYXBHZXR0ZXJzKFsnZ2V0U3RvcmVCeVJvdXRlJ10pKSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcE11dGF0aW9ucyhbJ3JlbW92ZUFsbEZpbHRlcnMnXSkpLCBtYXBBY3Rpb25zKFsndXBkYXRlQ3VycmVudERhdGFTb3VyY2UnLCAncmV0cmlldmVGaWx0ZXJzJywgJ3VwZGF0ZVNlYXJjaFRlcm0nXSkpCn07"},{"version":3,"sources":["/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/mixins/QueryViewMixin.js"],"names":["PARAMETERNAMES","VUEROUTES","QuerySubmissionMixin","mapMutations","mapGetters","mapActions","mapState","mixins","data","prevRoute","mounted","savedUrlParameters","$route","name","Object","keys","length","savedParams","removedByClaims","term","param","hasOwnProperty","termQuery","split","updateSearchTerm","type","input","datasoure","dataSourceRouteType","updateCurrentDataSource","updateRouteParams","getDefaultTypeIdByRoute","query","filter","currentDataSource","source","getStoreByRoute","filters","retrieveFilters","executeQuery","viewRoutes","ta2","ta3","includes","removeAllFilters","beforeRouteEnter","to","from","next","vm","computed","methods"],"mappings":"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","sourcesContent":["/*\n * Copyright 2019 Next Century Corporation/CACI\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {PARAMETERNAMES, VUEROUTES} from '../utils'\nimport QuerySubmissionMixin from './QuerySubmissionMixin';\nimport {mapMutations, mapGetters, mapActions, mapState} from 'vuex';\n\nexport default {\n    mixins: [QuerySubmissionMixin],\n    data: () => ({\n        prevRoute: null\n    }),\n    mounted() {\n        //Upon returning to a view from another view, the url parameters need to be updated\n        if(this.savedUrlParameters && this.savedUrlParameters[this.$route.name] &&\n            Object.keys(this.savedUrlParameters[this.$route.name]).length > 0)\n        {\n            const savedParams = this.savedUrlParameters[this.$route.name];\n            //The \"claims\" and \"analyze\" routes are related and should have the same savedParameters for now\n            const removedByClaims = this.$route.name === 'analyze' &&\n                (!this.savedUrlParameters['claims'] || !this.savedUrlParameters['claims'][PARAMETERNAMES.term]);\n            //start adding saved parameters to the url\n            for (const param in savedParams) {\n                if(savedParams.hasOwnProperty(param)) {\n                    if(param === PARAMETERNAMES.term && !removedByClaims) {\n                        let termQuery = savedParams[param].split(':');\n                        this.updateSearchTerm({type: termQuery[0], input: termQuery[1]});\n                    }\n\n                    if(param === PARAMETERNAMES.datasoure) {\n                        //if the current datasource does not equal the url route\n                        if(this.dataSourceRouteType() !== this.$route.name) {\n                            this.updateCurrentDataSource(savedParams[param]);\n                            this.updateRouteParams(param, savedParams[param]);\n                        }\n                    }\n                    else if (removedByClaims) {\n                        this.updateRouteParams(PARAMETERNAMES.term, '');\n                    }\n                    else {\n                        this.updateRouteParams(param, savedParams[param]);\n                    }\n                }\n            }\n\n            if(!savedParams[PARAMETERNAMES.term]) {\n                this.updateSearchTerm({type: this.getDefaultTypeIdByRoute()});\n            }\n        }\n        //Handles submitting the query when a url is copied into the browser\n        else if(this.$route.query.hasOwnProperty(PARAMETERNAMES.datasoure) || this.$route.query.hasOwnProperty(PARAMETERNAMES.term) ||\n            this.$route.query.hasOwnProperty(PARAMETERNAMES.filter))\n        {\n            this.updateSearchTerm({});\n            if(this.currentDataSource !== this.$route.query[PARAMETERNAMES.datasoure]) {\n                this.updateCurrentDataSource(this.$route.query[PARAMETERNAMES.datasoure]);\n            }\n            //if equal but not the correct datasource\n            else if(this.currentDataSource === this.$route.query[PARAMETERNAMES.datasoure] && this.$route.name !== this.dataSourceRouteType()) {\n                //set default and update param\n                const source = this.getStoreByRoute(this.$route.name);\n                this.updateCurrentDataSource(source);\n            }\n\n            if(this.$route.query[PARAMETERNAMES.term] && !this.term.type) {\n                let termQuery = this.$route.query[PARAMETERNAMES.term].split(':');\n                this.updateSearchTerm({type: termQuery[0], input: termQuery[1]});\n            }\n\n            if(this.$route.query[PARAMETERNAMES.filter] && (!this.filters || Object.keys(this.filters).length === 0)) {\n                this.retrieveFilters(this.$route.query[PARAMETERNAMES.filter]);\n            }\n\n            this.executeQuery();\n        }\n        else {\n           //remove all filters if they are coming from another view\n            let viewRoutes = [VUEROUTES.ta2, VUEROUTES.ta3];\n            if(this.prevRoute && viewRoutes.includes(this.prevRoute.name) && this.prevRoute.name !== this.$route.name) {\n                this.removeAllFilters();\n            }\n        }\n    },\n    beforeRouteEnter(to, from, next) {\n        next(vm => {\n            vm.prevRoute = from\n        })\n    },\n    computed: {\n        ...mapState(['savedUrlParameters']),\n        ...mapGetters(['getStoreByRoute'])\n    },\n    methods: {\n        ...mapMutations(['removeAllFilters']),\n        ...mapActions(['updateCurrentDataSource', 'retrieveFilters', 'updateSearchTerm'])\n    }\n};\n\n"]}]}