{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ElementDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ElementDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIHVwcGVyRmlyc3RMZXR0ZXIsIGZvcm1hdEVsZW1lbnRNZW1iZXJzLCBnZXRTdHJpbmdWYWx1ZSwgSGVhZGVyQ29uZmlnIH0gZnJvbSAiLi4vLi4vdXRpbHMiOyAvL2ltcG9ydCBUYWJzIGZyb20gJ0AvY29tcG9uZW50cy9UYWJzJzsKCmltcG9ydCBTaW1wbGVUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvU2ltcGxlVGFibGUnOwppbXBvcnQgRG9jdW1lbnRHcmlkIGZyb20gJ0AvY29tcG9uZW50cy9Eb2N1bWVudEdyaWQnOwppbXBvcnQgQVBJIGZyb20gIi4uLy4uL2FwaSI7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0VsZW1lbnREZXRhaWxzJywKICBjb21wb25lbnRzOiB7CiAgICBTaW1wbGVUYWJsZTogU2ltcGxlVGFibGUsCiAgICBEb2N1bWVudEdyaWQ6IERvY3VtZW50R3JpZAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYlRpdGxlczogWydFdmVudHMnLCAnUmVsYXRpb25zJ10sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBhcmd1bWVudEhlYWRlcnM6IFtuZXcgSGVhZGVyQ29uZmlnKCdOYW1lJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmhlYWRsaW5lKSwgbmV3IEhlYWRlckNvbmZpZygnSUQnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuaWQpLCBuZXcgSGVhZGVyQ29uZmlnKCdSb2xlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5yb2xlcyksIG5ldyBIZWFkZXJDb25maWcoJ1R5cGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnR5cGVzKSwgbmV3IEhlYWRlckNvbmZpZygnRW50aXR5IENsdXN0ZXIgSUQnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuY2x1c3RlcklkTGlzdCldLAogICAgICBjbHVzdGVySGVhZGVyczogW25ldyBIZWFkZXJDb25maWcoJ0lEJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmlkKSwgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpXSwKICAgICAgc3RhdHVzTWVzc2FnZTogJycsCiAgICAgIHJvdXRlSWQ6ICcnCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuVEFCTEVGSUVMRE1BUFBJTkcgPSBUQUJMRUZJRUxETUFQUElORzsKICAgIHRoaXMuVlVFUk9VVEVTID0gVlVFUk9VVEVTOwogICAgdGhpcy5nZXRTdHJpbmdWYWx1ZSA9IGdldFN0cmluZ1ZhbHVlOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydub2RlU2VsZWN0aW9uJywgJ2N1cnJlbnREYXRhU291cmNlJ10pKSwge30sIHsKICAgIGN1cnJlbnRFbGVtZW50OiBmdW5jdGlvbiBjdXJyZW50RWxlbWVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbjsKICAgIH0sCiAgICBlbGVtZW50VVJJOiBmdW5jdGlvbiBlbGVtZW50VVJJKCkgewogICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmlkXSA/IHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5pZF0gOiAnJzsKICAgIH0sCiAgICBlbnRpdHlDb3VudDogZnVuY3Rpb24gZW50aXR5Q291bnQoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5Q291bnRdID8gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmVudGl0eUNvdW50XSA6IDA7CiAgICB9LAogICAgYXJndW1lbnRMaXN0OiBmdW5jdGlvbiBhcmd1bWVudExpc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5TGlzdF0gPyB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5TGlzdF0gOiBbXTsKICAgIH0sCiAgICBkb2N1bWVudExpc3Q6IGZ1bmN0aW9uIGRvY3VtZW50TGlzdCgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5kb2N1bWVudExpc3RdOwogICAgfSwKICAgIHJvdXRlUGFyYW1zOiBmdW5jdGlvbiByb3V0ZVBhcmFtcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtczsKICAgIH0KICB9KSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcE11dGF0aW9ucyhbJ3VwZGF0ZU5vZGVTZWxlY3Rpb24nXSkpLCB7fSwgewogICAgZ2V0RWxlbWVudENhdGVnb3J5OiBmdW5jdGlvbiBnZXRFbGVtZW50Q2F0ZWdvcnkoKSB7CiAgICAgIGlmICh0aGlzLnJvdXRlUGFyYW1zLmlkICE9PSB0aGlzLnJvdXRlSWQpIHsKICAgICAgICB0aGlzLnJlZnJlc2hFbGVtZW50RGF0YSgpOwogICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgIH0KCiAgICAgIHJldHVybiB1cHBlckZpcnN0TGV0dGVyKHRoaXMucm91dGVQYXJhbXMuY2F0ZWdvcnkpOwogICAgfSwKICAgIHJlZnJlc2hFbGVtZW50RGF0YTogZnVuY3Rpb24gcmVmcmVzaEVsZW1lbnREYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy51cGRhdGVOb2RlU2VsZWN0aW9uKHt9KTsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gTE9BRElOR01FU1NBR0U7CiAgICAgIEFQSS5nZXRFbGVtZW50RGV0YWlscyhkZWNvZGVVUklDb21wb25lbnQodGhpcy5yb3V0ZVBhcmFtcy5pZCksIHRoaXMucm91dGVQYXJhbXMuY2F0ZWdvcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgT2JqZWN0LmtleXMocmVzcG9uc2UuZGF0YSkubGVuZ3RoID4gMCkgewogICAgICAgICAgX3RoaXMudXBkYXRlTm9kZVNlbGVjdGlvbihmb3JtYXRFbGVtZW50TWVtYmVycyhyZXNwb25zZS5kYXRhLCBfdGhpcy5yb3V0ZVBhcmFtcy5jYXRlZ29yeSkpOwoKICAgICAgICAgIF90aGlzLnN0YXR1c01lc3NhZ2UgPSAnJzsgLy9UT0RPOiBzd2FnZ2VyIG5lZWRzIHRvIGluZGljYXRlIHdoZW4gdGhlcmUgYXJlIG5vIHJlc3VsdHMKICAgICAgICAgIC8vIHRoaXMuc3RhdHVzTWVzc2FnZSA9ICdObyByZXN1bHRzIGZvdW5kJzsKICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1c01lc3NhZ2UpIHsKICAgICAgICAgIF90aGlzLnN0YXR1c01lc3NhZ2UgPSByZXNwb25zZS5zdGF0dXNNZXNzYWdlOwoKICAgICAgICAgIF90aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["ElementDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{currentElement[TABLEFIELDMAPPING.id]}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getElementCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(currentElement[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">ID: </span><span>{{currentElement[TABLEFIELDMAPPING.idUri]}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Arguments ({{entityCount}}) </div>\n            <SimpleTable\n                    :headers=\"argumentHeaders\"\n                    :data=\"argumentList\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.element\"\n            ></SimpleTable>\n<!--                <Tabs :titles=\"tabTitles\" class=\"deactivate-pointer\">\n                <SimpleTable\n                        :slot=\"tabTitles[0]\"\n                        :headers=\"headers\"\n                        :data=\"nodeSelection[TABLEFIELDMAPPING.entityList]\"\n                        :loading=\"loading\"\n                        :statusMessage=\"statusMessage\"\n                ></SimpleTable>\n            </Tabs>-->\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Clusters ({{currentElement[TABLEFIELDMAPPING.nodeCount]}})</div>\n            <SimpleTable\n                    :headers=\"clusterHeaders\"\n                    :data=\"currentElement[TABLEFIELDMAPPING.clusterList]\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.cluster\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"currentElement[TABLEFIELDMAPPING.documentList]\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, upperFirstLetter,\n        formatElementMembers, getStringValue, HeaderConfig} from '../../utils';\n    //import Tabs from '@/components/Tabs';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import API from '../../api';\n    import {mapState} from 'vuex';\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'ElementDetails',\n        components: {SimpleTable, DocumentGrid},\n        data: () => ({\n            tabTitles: ['Events', 'Relations'],\n            loading: false,\n            argumentHeaders: [\n                new HeaderConfig('Name', 'start', false, TABLEFIELDMAPPING.headline),\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types),\n                new HeaderConfig('Entity Cluster ID', 'start', false, TABLEFIELDMAPPING.clusterIdList)\n            ],\n            clusterHeaders: [\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES = VUEROUTES;\n            this.getStringValue = getStringValue;\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource']),\n            currentElement() {\n                return this.nodeSelection;\n            },\n            elementURI() {\n                return this.nodeSelection[TABLEFIELDMAPPING.id] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.id] : '';\n            },\n            entityCount() {\n                return this.nodeSelection[TABLEFIELDMAPPING.entityCount] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.entityCount] : 0;\n            },\n            argumentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.entityList] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.entityList] : [];\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            },\n            routeParams() {\n                return this.$route.params;\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            getElementCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshElementData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return upperFirstLetter(this.routeParams.category);\n            },\n            refreshElementData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n                API.getElementDetails(decodeURIComponent(this.routeParams.id), this.routeParams.category).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.updateNodeSelection(formatElementMembers(response.data, this.routeParams.category));\n                        this.statusMessage = '';\n                        //TODO: swagger needs to indicate when there are no results\n                        // this.statusMessage = 'No results found';\n                    } else if (response.statusMessage) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"],"sourceRoot":"src/views/explore"}]}