{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/eslint-loader/index.js??ref--14-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/store.js","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/store.js","mtime":1640207172534},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/eslint-loader/index.js","mtime":1641411772337}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/store.js"],"names":["Vue","Vuex","DATATYPES","TABLESELECTIONS","sortCaseInsensitive","TABLEFIELDMAPPING","VUEROUTES","ta2DataSource","ta3DataSource","convertTA3toTA2Route","use","FILTERPROPS","vals","condition","Store","state","filters","term","dataSourceList","currentDataSource","defaultKbDataSource","defaultHypothesisDataSource","nodeSelection","hypothesisSelection","sinSelection","categoryTypes","categoryArguments","allArguments","knowledgeBase","exploreSelections","analyzeSelections","filterReset","filterSubmission","savedUrlParameters","savedFilters","savedHypotheses","mutations","updateSingleFilters","update","type","filter","updateCategoryFilters","removeCategoryFilterByIndex","splice","index","replaceCategoryFilterByIndex","updateConditionalFilters","id","updateFilterCondition","updateSavedFilters","removeFiltersByType","removeFilterByValueId","removeAllFilters","resetFilters","updateFilterReset","boolVal","updateFilterSubmission","updateSavedHypotheses","details","updateHypothesisMember","category","map","member","clusterUri","updateDataSourceList","setDefaultKbDataSource","dataSource","setDefaultHypothesisDataSource","mutateCurrentDataSource","updateNodeSelection","updateHypothesisSelection","updateSinSelection","updateCategoryTypes","data","types","updateCategoryArguments","arguments","updateAllArguments","removeArgumentsAndTypes","updateDataKB","response","removeExploreKB","eventType","relationType","updateSavedUrlParameters","query","name","params","removeSavedUrlParametersByRoute","route","removeSavedUrlParametersByName","parameter","updateClusterPrototype","cluster","prototype","nodes","nodeCount","length","updateTerm","input","removeTerm","addExploreSelections","option","value","addExploreSortOption","sort","addExplorePagingOption","paging","removeExploreSelectionsByOption","addAnalyzeSelections","addAnalyzeSortOption","addAnalyzePagingOption","actions","updateCurrentDataSource","commit","newKbDataSource","updatePrototypeRoles","updateFilters","hasOwnProperty","entityType","argumentName","kbId","retrieveFilters","Object","keys","updateDataSourceProperties","updateCategoryArgumentsProperties","combinedArguments","values","flat","a","b","indexOf","updateSearchTerm","updateUrlParameters","termQuery","split","removeFilter","filterKeys","console","warn","updateExploreSelections","viewFields","tab","display","sortFields","sortBy","sortDesc","pagingFields","pageNumber","pageStart","itemsPerPage","includes","selection","updateAnalyzeSelections","getters","getDateFilter","dateRange","getFilterKeys","getFilterByType","getSavedFilterByTypeAndIndex","getSavedHypothesisById","getQueryParams","url","getStoreByRoute","ret","ta3","find","ta2"],"mappings":"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","sourcesContent":["\n/*\n * Copyright 2019 Next Century Corporation/CACI\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { DATATYPES, TABLESELECTIONS, sortCaseInsensitive, TABLEFIELDMAPPING, VUEROUTES, ta2DataSource, ta3DataSource, convertTA3toTA2Route } from './utils';\n\nVue.use(Vuex);\n\n/*\n* filters = {\n*       entityType: { entityType0: '', entityType2: '' },\n*       eventType: { eventType0: '', eventType2: '' },\n*       relationType: { relationType0: '', relationType2: '' },\n*       date: {startDate: '', endDate : ''}\n*       entityName: { condition: '', values : { entityName0 :'' , entityName1 :''}\n*       kbId: { condition: '', values : { kbId0 :'' , kbId1 :''}\n* }\n* */\n\nconst FILTERPROPS = {\n    vals : 'values',\n    condition: 'condition'\n};\n\nexport default new Vuex.Store({\n    state: {\n        filters: {},\n        term: {}, // type, input\n        dataSourceList: [],\n        currentDataSource: '',\n        defaultKbDataSource: '',\n        defaultHypothesisDataSource: '',\n        nodeSelection: {},\n        hypothesisSelection: {},\n        sinSelection: {},\n        categoryTypes: {},\n        categoryArguments: {},\n        allArguments: [], //Potentially will be used to query hypothesis based on argument names\n        knowledgeBase: {},\n        exploreSelections: {}, //{} - selectedTab, selectedDisplay, sort(sortBy, sortDesc), paging(resultsPerPage, pageNumber, pageStart)\n        analyzeSelections: {}, //{hypothesis : {selections}, event: {selections}, relation : {selections}}; selections - sort(sortBy, sortDesc), paging(resultsPerPage, pageNumber, pageStart)\n        filterReset: false,\n        filterSubmission: false,\n        //TODO: The following variables will be removed and functionality replaced with an API request at some point\n        savedUrlParameters: {}, //{} - routeName : parameters, used for querying results without having to re-enter a search term or re-populate filter fields\n        savedFilters: {}, //{} - id : filterList, used for re-populating filter fields in the filter menu\n        savedHypotheses: {}, //{} - id : hypothesis cluster, used to retrieve edited hypotheses\n    },\n    mutations: {\n        updateSingleFilters(state, update) {\n            state.filters = { ...state.filters, [update.type]: update.filter };\n        },\n        updateCategoryFilters(state, update) {\n            state.filters = { ...state.filters, [update.type]: state.filters[update.type] ? [ ...state.filters[update.type], update.filter ] : [update.filter] };\n        },\n        removeCategoryFilterByIndex(state, filter) {\n            state.filters[filter.type].splice(filter.index, 1);\n        },\n        replaceCategoryFilterByIndex(state, update) {\n            state.filters[update.type].splice(update.index, 1, update.filter);\n        },\n        updateConditionalFilters(state, update) {\n            state.filters = {\n                ...state.filters, [update.type]: {\n                    ...state.filters[update.type],\n                    [FILTERPROPS.vals]:\n                        state.filters[update.type] ?\n                            {\n                                ...state.filters[update.type][FILTERPROPS.vals],\n                                [update.id]: update.filter\n                            } : {[update.id]: update.filter}\n                }\n            };\n        },\n        updateFilterCondition(state, update) {\n            state.filters = { ...state.filters, [update.type]: {...state.filters[update.type], [FILTERPROPS.condition] : update[FILTERPROPS.condition] }};\n        },\n        updateSavedFilters(state, update) {\n            state.savedFilters[update.id] = state.filters;\n        },\n        removeFiltersByType(state, type) {\n            state.filters = {...state.filters};\n            delete state.filters[type];\n        },\n        removeFilterByValueId(state, filter) {\n            state.filters = {...state.filters};\n            delete state.filters[filter.type][FILTERPROPS.vals][filter.id];\n        },\n        removeAllFilters(state) {\n            state.filters = {};\n        },\n        resetFilters(state, filters) {\n            state.filters = filters;\n        },\n        updateFilterReset(state, boolVal) {\n            state.filterReset = boolVal;\n        },\n        updateFilterSubmission(state, boolVal) {\n            state.filterSubmission = boolVal;\n        },\n        updateSavedHypotheses(state, update) {\n            state.savedHypotheses[update.id] = update.details;\n        },\n        updateHypothesisMember(state, update) {\n            state.savedHypotheses = {\n                ...state.savedHypotheses, [update.id]: {\n                    ...state.savedHypotheses[update.id],\n                    [update.category] :\n                        state.savedHypotheses[update.id][update.category].map(member =>\n                            member[TABLEFIELDMAPPING.clusterUri] === update.details[TABLEFIELDMAPPING.clusterUri] ? update.details : member)\n                }\n            };\n        },\n        updateDataSourceList(state, dataSourceList) {\n            state.dataSourceList = dataSourceList;\n        },\n        setDefaultKbDataSource(state, dataSource) {\n            state.defaultKbDataSource = dataSource;\n        },\n        setDefaultHypothesisDataSource(state, dataSource) {\n            state.defaultHypothesisDataSource = dataSource;\n        },\n        mutateCurrentDataSource(state, currentDataSource) {\n            state.currentDataSource = currentDataSource;\n        },\n        updateNodeSelection(state, nodeSelection) {\n            state.nodeSelection = nodeSelection;\n        },\n        updateHypothesisSelection(state, hypothesisSelection) {\n            state.hypothesisSelection = hypothesisSelection;\n        },\n        updateSinSelection(state, sinSelection) {\n            state.sinSelection = sinSelection;\n        },\n        updateCategoryTypes(state, data) {\n            state.categoryTypes = { ...state.categoryTypes, [data.category]: data.types };\n        },\n        updateCategoryArguments(state, data) {\n            state.categoryArguments = { ...state.categoryArguments, [data.category]: data.arguments };\n        },\n        updateAllArguments(state, data) {\n            state.allArguments = data;\n        },\n        removeArgumentsAndTypes(state) {\n            state.categoryArguments = {};\n            state.categoryTypes = {};\n            state.allArguments = [];\n        },\n        updateDataKB(state, data) {\n            state.knowledgeBase = { ...state.knowledgeBase, [data.category]: data.response };\n        },\n        removeExploreKB(state) {\n            state.knowledgeBase = {...state.knowledgeBase};\n            delete state.knowledgeBase[DATATYPES.eventType.id];\n            delete state.knowledgeBase[DATATYPES.relationType.id];\n        },\n        updateSavedUrlParameters(state, query) {\n            state.savedUrlParameters = { ...state.savedUrlParameters, [query.name]: query.params };\n        },\n        removeSavedUrlParametersByRoute(state, route) {\n            state.savedUrlParameters = {...state.savedUrlParameters};\n            delete state.savedUrlParameters[route];\n        },\n        removeSavedUrlParametersByName(state, query) {\n            state.savedUrlParameters = {...state.savedUrlParameters};\n            delete state.savedUrlParameters[query.route][query.parameter];\n        },\n        updateClusterPrototype(state, data) {\n            data.cluster[TABLEFIELDMAPPING.prototype][TABLEFIELDMAPPING.nodes] = data.prototype.nodes;\n            data.cluster[TABLEFIELDMAPPING.nodeCount] = data.prototype.nodes.length;\n            state.knowledgeBase = { ...state.knowledgeBase, [data.prototype.category]:\n                    {...state.knowledgeBase[data.prototype.category], [data.prototype.id] : data.cluster}};\n        },\n        updateTerm(state, update) {\n            state.term = {type: update.type , input : update.input};\n        },\n        removeTerm(state) {\n            state.term = {};\n        },\n        addExploreSelections(state, update) {\n            state.exploreSelections = { ...state.exploreSelections, [update.option]: update.value };\n        },\n        addExploreSortOption(state, update) {\n            state.exploreSelections = { ...state.exploreSelections, [TABLESELECTIONS.sort]: { ...state.exploreSelections[TABLESELECTIONS.sort], [update.option]: update.value }};\n        },\n        addExplorePagingOption(state, update) {\n            state.exploreSelections = { ...state.exploreSelections, [TABLESELECTIONS.paging]: { ...state.exploreSelections[TABLESELECTIONS.paging], [update.option]: update.value }};\n        },\n        removeExploreSelectionsByOption(state, option) {\n            state.exploreSelections = {...state.exploreSelections};\n            delete state.exploreSelections[option];\n        },\n        addAnalyzeSelections(state, update) {\n            state.analyzeSelections = { ...state.analyzeSelections, [update.type] : {...state.analyzeSelections[update.type], [update.option]: update.value }};\n        },\n        addAnalyzeSortOption(state, update) {\n            state.analyzeSelections = {\n                ...state.analyzeSelections, [update.type] :\n                    {...state.analyzeSelections[update.type], [TABLESELECTIONS.sort]:\n                            { ...state.exploreSelections[update.type][TABLESELECTIONS.sort], [update.option]: update.value }\n                    }\n            };\n        },\n        addAnalyzePagingOption(state, update) {\n            state.exploreSelections = { ...state.exploreSelections, [TABLESELECTIONS.paging]: { ...state.exploreSelections[TABLESELECTIONS.paging], [update.option]: update.value }};\n            state.analyzeSelections = {\n                ...state.analyzeSelections, [update.type] :\n                    {...state.analyzeSelections[update.type], [TABLESELECTIONS.paging]:\n                            { ...state.exploreSelections[update.type][TABLESELECTIONS.paging], [update.option]: update.value }\n                    }\n            };\n        }\n    },\n    actions: {\n        updateCurrentDataSource({ commit }, currentDataSource) {\n            commit('mutateCurrentDataSource', currentDataSource);\n\n            // replace TA3/SIN/TEAM3-version/ with TA2/\n            if(currentDataSource) {\n                const newKbDataSource = ta3DataSource(currentDataSource) ? convertTA3toTA2Route(currentDataSource) : currentDataSource;\n                commit('setDefaultKbDataSource', newKbDataSource);\n                //clear stored kb data, arguments, and types for events and relations based on the previously stored TA2 datasource\n                commit('removeExploreKB');\n                commit('removeArgumentsAndTypes');\n            }\n        },\n        updatePrototypeRoles({ commit, state }, prototype) {\n                const cluster = state.knowledgeBase[prototype.category][prototype.id];\n                if(cluster) {\n                    commit('updateClusterPrototype', { cluster: cluster, prototype: prototype } );\n                }\n        },\n        updateFilters({ commit, state }, update) {\n            if(update.type === DATATYPES.eventType.id || update.type === DATATYPES.relationType.id) {\n\n                if(state.filters && state.filters[update.type] && state.filters[update.type].hasOwnProperty(update.index)) {\n                    commit('replaceCategoryFilterByIndex', update)\n                }\n                else {\n                    commit('updateCategoryFilters', update);\n                }\n            }\n            else if(update.type === DATATYPES.entityType.id || update.type === DATATYPES.argumentName.id || update.type === DATATYPES.kbId.id) {\n                if(update.filter) {\n                    commit('updateConditionalFilters', update);\n                }\n            }\n            else {\n                commit('updateSingleFilters', update);\n            }\n\n            if(update[FILTERPROPS.condition] && update[FILTERPROPS.condition] !== '') {\n                commit('updateFilterCondition', update);\n            }\n        },\n        retrieveFilters({ commit, state }, id) {\n            if(Object.keys(state.savedFilters).length > 0) {\n                commit('resetFilters', state.savedFilters[id]);\n            }\n        },\n        updateDataSourceProperties({ commit, state }, update) {\n            commit('mutateCurrentDataSource', state.defaultKbDataSource);\n            commit('updateDataSourceList', update);\n        },\n        updateCategoryArgumentsProperties({ commit, state }, data) {\n            commit('updateCategoryArguments', data);\n\n            //In order to get all arguments combine values, remove duplicates, and sort the arguments\n            const combinedArguments = Object.values(state.categoryArguments).flat();\n            commit('updateAllArguments', sortCaseInsensitive(combinedArguments.filter((a, b) => combinedArguments.indexOf(a) === b)));\n        },\n        updateSearchTerm({ commit }, update) {\n            if(update.type) {\n                commit('updateTerm', update);\n            }\n            else {\n                commit('removeTerm');\n            }\n\n        },\n        updateUrlParameters({ commit, state }, update) {\n            if(update.params) {\n                commit('updateSavedUrlParameters', {name: update.name, params: update.params});\n\n                if(update.params.term) {\n                    let termQuery = update.params.term.split(':');\n                    if(termQuery[0] !== state.term.type && termQuery[1] !== state.term.input) {\n                        commit('updateTerm', {type: termQuery[0], input: termQuery[1]});\n                    }\n                }\n            }\n            else {\n                commit('removeSavedUrlParametersByRoute', update.name);\n            }\n\n        },\n        removeFilter({ commit, state }, update) {\n            if(update.type !== null && update.index && state.filters.hasOwnProperty(update.type)) {\n                if(state.filters[update.type].hasOwnProperty(FILTERPROPS.vals)) {\n                    commit('removeFilterByValueId', update)\n                }\n                else {\n                    commit('removeCategoryFilterByIndex', update);\n                }\n                \n                let filterKeys = state.filters[update.type].hasOwnProperty(FILTERPROPS.vals) ? Object.keys(state.filters[update.type][FILTERPROPS.vals])\n                    : state.filters[update.type];\n                //if there are no longer filters for this filter type, remove the filter type\n                if(filterKeys.length === 0) {\n                    commit('removeFiltersByType', update.type);\n                }\n            }\n            else if(update.type) {\n                commit('removeFiltersByType', update.type);\n            }\n            else {\n                console.warn('Deletion message not formatted correctly. Must have a type')\n            }\n        },\n        updateExploreSelections({ commit, state }, update) {\n            const viewFields = [TABLESELECTIONS.tab, TABLESELECTIONS.display];\n            const sortFields = [TABLESELECTIONS.sortBy, TABLESELECTIONS.sortDesc];\n            const pagingFields = [TABLESELECTIONS.pageNumber, TABLESELECTIONS.pageStart, TABLESELECTIONS.itemsPerPage];\n\n            if(viewFields.includes(update.option)) {\n                //loop through state and remove all of the options that are not tab or display\n                for (let selection of Object.keys(state.exploreSelections)) {\n                    if(!viewFields.includes(selection)) {\n                        commit('removeExploreSelectionsByOption', selection);\n                    }\n                }\n            }\n\n            //add new selection\n            commit(\n                sortFields.includes(update.option) ? 'addExploreSortOption' :\n                    pagingFields.includes(update.option) ? 'addExplorePagingOption' :\n                    'addExploreSelections',\n                update\n            );\n        },\n        updateAnalyzeSelections({ commit }, update) {\n            const sortFields = [TABLESELECTIONS.sortBy, TABLESELECTIONS.sortDesc];\n            const pagingFields = [TABLESELECTIONS.pageNumber, TABLESELECTIONS.pageStart, TABLESELECTIONS.itemsPerPage];\n\n            //add new selection\n            commit(\n                sortFields.includes(update.option) ? 'addAnalyzeSortOption' :\n                    pagingFields.includes(update.option) ? 'addAnalyzePagingOption' :\n                        'addAnalyzeSelections',\n                update\n            );\n        }\n    },\n    getters: {\n        getDateFilter: state => state.filters[DATATYPES.dateRange.id],\n        getFilterKeys: state => Object.keys(state.filters),\n        getFilterByType: state => filter => state.filters[filter],\n        getSavedFilterByTypeAndIndex: state => (id, type, index) => state.savedFilters[id][type][index],\n        getSavedHypothesisById: state => (id) => state.savedHypotheses[id],\n        getQueryParams: state => ({\n            currentDataSource: state.currentDataSource,\n            term: state.term,\n            filter: state.filters,\n            url: state.savedUrlParameters,\n        }),\n        getStoreByRoute: state => (route) => {\n            let ret;\n            if (route === VUEROUTES.ta3)  {\n                ret = state.dataSourceList.find((dataSource) => dataSource === state.defaultHypothesisDataSource) ||\n                    state.dataSourceList.find(ta3DataSource);\n            } else if (route === VUEROUTES.ta2) {\n                ret = state.dataSourceList.find((dataSource) => dataSource === state.defaultKbDataSource) ||\n                    state.dataSourceList.find(ta2DataSource);\n            }\n            return ret;\n        }\n    }\n});\n\n"]}]}