{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityElementDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityElementDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBlbnVtZXJhYmxlT25seSAmJiAoc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pKSwga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTsgaSAlIDIgPyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIGZvcm1hdEVudGl0eU1lbWJlcnMsIGdldFN0cmluZ1ZhbHVlLCBIZWFkZXJDb25maWcgfSBmcm9tICIuLi8uLi91dGlscyI7IC8vaW1wb3J0IFRhYnMgZnJvbSAnQC9jb21wb25lbnRzL1RhYnMnOwoKaW1wb3J0IFNpbXBsZVRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9TaW1wbGVUYWJsZSc7CmltcG9ydCBEb2N1bWVudEdyaWQgZnJvbSAnQC9jb21wb25lbnRzL0RvY3VtZW50R3JpZCc7CmltcG9ydCBBUEkgZnJvbSAiLi4vLi4vYXBpIjsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgbWFwTXV0YXRpb25zIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRW50aXR5RWxlbWVudERldGFpbHMnLAogIGNvbXBvbmVudHM6IHsKICAgIFNpbXBsZVRhYmxlOiBTaW1wbGVUYWJsZSwKICAgIERvY3VtZW50R3JpZDogRG9jdW1lbnRHcmlkCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFiVGl0bGVzOiBbJ0V2ZW50cycsICdSZWxhdGlvbnMnXSwKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIGNvbm5lY3Rpb25IZWFkZXJzOiBbXSwKICAgICAgY2x1c3RlckhlYWRlcnM6IFtdLAogICAgICBzdGF0dXNNZXNzYWdlOiAnJywKICAgICAgcm91dGVJZDogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5UQUJMRUZJRUxETUFQUElORyA9IFRBQkxFRklFTERNQVBQSU5HOwogICAgdGhpcy5WVUVST1VURVMgPSBWVUVST1VURVM7CiAgICB0aGlzLmdldFN0cmluZ1ZhbHVlID0gZ2V0U3RyaW5nVmFsdWU7CiAgICB0aGlzLmNvbm5lY3Rpb25IZWFkZXJzID0gW25ldyBIZWFkZXJDb25maWcoJ0lEJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmlkKSwgbmV3IEhlYWRlckNvbmZpZygnUm9sZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcucm9sZXMpLCBuZXcgSGVhZGVyQ29uZmlnKCdUeXBlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy50eXBlcyldOwogICAgdGhpcy5jbHVzdGVySGVhZGVycyA9IFtuZXcgSGVhZGVyQ29uZmlnKCdOYW1lcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5uYW1lcyksIG5ldyBIZWFkZXJDb25maWcoJ0lEJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmlkKSwgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpXTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsnbm9kZVNlbGVjdGlvbicsICdjdXJyZW50RGF0YVNvdXJjZSddKSksIHt9LCB7CiAgICBoZWFkaW5nOiBmdW5jdGlvbiBoZWFkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmhlYWRsaW5lXSA/IHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZV0gOiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaWRdOwogICAgfSwKICAgIGN1cnJlbnRFbnRpdHk6IGZ1bmN0aW9uIGN1cnJlbnRFbnRpdHkoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb247CiAgICB9LAogICAgZWxlbWVudFVSSTogZnVuY3Rpb24gZWxlbWVudFVSSSgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5pZF0gPyB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaWRdIDogJyc7CiAgICB9LAogICAgZG9jdW1lbnRMaXN0OiBmdW5jdGlvbiBkb2N1bWVudExpc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZG9jdW1lbnRMaXN0XTsKICAgIH0sCiAgICByb3V0ZVBhcmFtczogZnVuY3Rpb24gcm91dGVQYXJhbXMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXJhbXM7CiAgICB9CiAgfSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoWyd1cGRhdGVOb2RlU2VsZWN0aW9uJ10pKSwge30sIHsKICAgIGdldE5vZGVDb3VudDogZnVuY3Rpb24gZ2V0Tm9kZUNvdW50KGFycmF5TmFtZSkgewogICAgICB2YXIgYXJyYXkgPSB0aGlzLm5vZGVTZWxlY3Rpb25bYXJyYXlOYW1lXTsKICAgICAgcmV0dXJuIGFycmF5ID8gYXJyYXkubGVuZ3RoIDogJyc7CiAgICB9LAogICAgZ2V0RW50aXR5Q2F0ZWdvcnk6IGZ1bmN0aW9uIGdldEVudGl0eUNhdGVnb3J5KCkgewogICAgICBpZiAodGhpcy5yb3V0ZVBhcmFtcy5pZCAhPT0gdGhpcy5yb3V0ZUlkKSB7CiAgICAgICAgdGhpcy5yZWZyZXNoRW50aXR5RGF0YSgpOwogICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgIH0KCiAgICAgIHJldHVybiAnRW50aXR5JzsKICAgIH0sCiAgICByZWZyZXNoRW50aXR5RGF0YTogZnVuY3Rpb24gcmVmcmVzaEVudGl0eURhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnN0YXR1c01lc3NhZ2UgPSBMT0FESU5HTUVTU0FHRTsKICAgICAgQVBJLmdldEVudGl0eUVsZW1lbnREZXRhaWxzKGRlY29kZVVSSUNvbXBvbmVudCh0aGlzLnJvdXRlUGFyYW1zLmlkKSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSAmJiBPYmplY3Qua2V5cyhyZXNwb25zZS5kYXRhKS5sZW5ndGggPiAwKSB7CiAgICAgICAgICBfdGhpcy51cGRhdGVOb2RlU2VsZWN0aW9uKGZvcm1hdEVudGl0eU1lbWJlcnMocmVzcG9uc2UuZGF0YSkpOwoKICAgICAgICAgIF90aGlzLnN0YXR1c01lc3NhZ2UgPSAnJzsgLy8gdGhpcy5zdGF0dXNNZXNzYWdlID0gJ05vIHJlc3VsdHMgZm91bmQnOwogICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2Uuc3RhdHVzTWVzc2FnZSkgewogICAgICAgICAgX3RoaXMuc3RhdHVzTWVzc2FnZSA9IHJlc3BvbnNlLnN0YXR1c01lc3NhZ2U7CgogICAgICAgICAgX3RoaXMudXBkYXRlTm9kZVNlbGVjdGlvbih7fSk7CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0pCn07"},{"version":3,"sources":["EntityElementDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{heading}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getEntityCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(currentEntity[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">ID: </span><span>{{currentEntity[TABLEFIELDMAPPING.idUri]}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div v-if=\"currentEntity[TABLEFIELDMAPPING.eventList]\">\n                <div class=\"kb-table-heading\">Events ({{getNodeCount(TABLEFIELDMAPPING.eventList)}})</div>\n                <SimpleTable\n                        :headers=\"connectionHeaders\"\n                        :data=\"currentEntity[TABLEFIELDMAPPING.eventList]\"\n                        :loading=\"loading\"\n                        :statusMessage=\"statusMessage\"\n                        :route=\"VUEROUTES.element\"\n                ></SimpleTable>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div v-if=\"currentEntity[TABLEFIELDMAPPING.relationList]\">\n                <div class=\"kb-table-heading\">Relations ({{getNodeCount(TABLEFIELDMAPPING.relationList)}})</div>\n                <SimpleTable\n                        :headers=\"connectionHeaders\"\n                        :data=\"currentEntity[TABLEFIELDMAPPING.relationList]\"\n                        :loading=\"loading\"\n                        :statusMessage=\"statusMessage\"\n                        :route=\"VUEROUTES.element\"\n                ></SimpleTable>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Clusters ({{getNodeCount(TABLEFIELDMAPPING.clusterList)}})</div>\n            <SimpleTable\n                    :headers=\"clusterHeaders\"\n                    :data=\"currentEntity[TABLEFIELDMAPPING.clusterList]\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.cluster\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"currentEntity[TABLEFIELDMAPPING.documentList]\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, formatEntityMembers,\n        getStringValue, HeaderConfig} from '../../utils';\n    //import Tabs from '@/components/Tabs';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import API from '../../api';\n    import {mapState} from 'vuex';\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'EntityElementDetails',\n        components: {SimpleTable, DocumentGrid},\n        data: () => ({\n            tabTitles: ['Events', 'Relations'],\n            loading: false,\n            connectionHeaders: [],\n            clusterHeaders: [],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES = VUEROUTES;\n            this.getStringValue = getStringValue;\n            this.connectionHeaders = [\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n            this.clusterHeaders = [\n                new HeaderConfig('Names', 'start', false, TABLEFIELDMAPPING.names),\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource']),\n            heading() {\n                return this.nodeSelection[TABLEFIELDMAPPING.headline] ? this.nodeSelection[TABLEFIELDMAPPING.headline] :\n                    this.nodeSelection[TABLEFIELDMAPPING.id];\n            },\n            currentEntity() {\n                return this.nodeSelection;\n            },\n            elementURI() {\n                return this.nodeSelection[TABLEFIELDMAPPING.id] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.id] : '';\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            },\n            routeParams() {\n                return this.$route.params;\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            getNodeCount(arrayName) {\n                let array = this.nodeSelection[arrayName];\n                return array ? array.length : '';\n            },\n            getEntityCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshEntityData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return 'Entity';\n            },\n            refreshEntityData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n                API.getEntityElementDetails(decodeURIComponent(this.routeParams.id)).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.updateNodeSelection(formatEntityMembers(response.data));\n                        this.statusMessage = '';\n                        // this.statusMessage = 'No results found';\n                    } else if (response.statusMessage) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"],"sourceRoot":"src/views/explore"}]}