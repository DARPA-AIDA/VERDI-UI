{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/ExploreFilterController.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/ExploreFilterController.vue","mtime":1640207172528},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/babel.config.js","mtime":1639107483667},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL3dvbWl0b3dvanUvd29ya3NwYWNlL2FpZGEvVkVSREktVUkvR1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvd29taXRvd29qdS93b3Jrc3BhY2UvYWlkYS9WRVJESS1VSS9HVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MuanMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9Vc2Vycy93b21pdG93b2p1L3dvcmtzcGFjZS9haWRhL1ZFUkRJLVVJL0dVSS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjay5qcyI7CgpmdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihvLCBhbGxvd0FycmF5TGlrZSkgeyB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSAidW5kZWZpbmVkIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl0gfHwgb1siQEBpdGVyYXRvciJdOyBpZiAoIWl0KSB7IGlmIChBcnJheS5pc0FycmF5KG8pIHx8IChpdCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09ICJudW1iZXIiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHZhciBGID0gZnVuY3Rpb24gRigpIHt9OyByZXR1cm4geyBzOiBGLCBuOiBmdW5jdGlvbiBuKCkgeyBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHsgZG9uZTogdHJ1ZSB9OyByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IG9baSsrXSB9OyB9LCBlOiBmdW5jdGlvbiBlKF9lKSB7IHRocm93IF9lOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9IHZhciBub3JtYWxDb21wbGV0aW9uID0gdHJ1ZSwgZGlkRXJyID0gZmFsc2UsIGVycjsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgaXQgPSBpdC5jYWxsKG8pOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgc3RlcCA9IGl0Lm5leHQoKTsgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsgcmV0dXJuIHN0ZXA7IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IGRpZEVyciA9IHRydWU7IGVyciA9IF9lMjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0LnJldHVybiAhPSBudWxsKSBpdC5yZXR1cm4oKTsgfSBmaW5hbGx5IHsgaWYgKGRpZEVycikgdGhyb3cgZXJyOyB9IH0gfTsgfQoKZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSAic3RyaW5nIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09ICJPYmplY3QiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSAiTWFwIiB8fCBuID09PSAiU2V0IikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSAiQXJndW1lbnRzIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH0KCmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfQoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBudWxsICE9IGFyZ3VtZW50c1tpXSA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpIDogb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgRGF0ZUZpbHRlciBmcm9tICdAL2NvbXBvbmVudHMvZm9ybXMvRGF0ZUZpbHRlcic7CmltcG9ydCBDYXRlZ29yeUZpbHRlciBmcm9tICdAL2NvbXBvbmVudHMvZm9ybXMvQ2F0ZWdvcnlGaWx0ZXInOwppbXBvcnQgU2xpZGVyRmlsdGVyIGZyb20gJ0AvY29tcG9uZW50cy9mb3Jtcy9TbGlkZXJGaWx0ZXInOwppbXBvcnQgeyBEQVRBVFlQRVMsIFRBQkxFU0VMRUNUSU9OUywgUVVFUllPUFRJT05TIH0gZnJvbSAiLi4vdXRpbHMiOwppbXBvcnQgQ2F0ZWdvcnlUeXBlcyBmcm9tICdAL2Fzc2V0cy9kYXRhL3R5cGVzLmpzb24nOwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwR2V0dGVycywgbWFwQWN0aW9ucywgbWFwTXV0YXRpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IFVQUEVSQ0FTRUNBVEVHT1JZIH0gZnJvbSAiLi4vYXBpIjsKCnZhciBGaWx0ZXIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUNsYXNzKGZ1bmN0aW9uIEZpbHRlcihkYXRhdHlwZSwgdmFsdWVzLCBkZWZhdWx0VmFsdWUpIHsKICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRmlsdGVyKTsKCiAgdGhpcy5pZCA9IGRhdGF0eXBlLmlkOwogIHRoaXMudGl0bGUgPSBkYXRhdHlwZS5kaXNwbGF5OwogIHRoaXMudmFsdWVzID0gdmFsdWVzOwogIHRoaXMuZGVmYXVsdFZhbHVlID0gZGVmYXVsdFZhbHVlOwogIHRoaXMucXVldWVDb3VudCA9IDE7CiAgdGhpcy5maXJzdEZpbHRlckluZGV4ID0gMDsKfSk7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZpbHRlckZvcm1zQ29udHJvbGxlcicsCiAgcHJvcHM6IHsKICAgIHNob3dEYXRlVG9vbHRpcDogQm9vbGVhbgogIH0sCiAgY29tcG9uZW50czogewogICAgRGF0ZUZpbHRlcjogRGF0ZUZpbHRlciwKICAgIENhdGVnb3J5RmlsdGVyOiBDYXRlZ29yeUZpbHRlciwKICAgIFNsaWRlckZpbHRlcjogU2xpZGVyRmlsdGVyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2F0ZWdvcnlDb21wb25lbnRMaXN0OiBudWxsLAogICAgICBjb250cm9sbGVyS2V5OiAwLAogICAgICBmaWx0ZXJLZXk6IDAsCiAgICAgIGNhdGVnb3JpZXM6IHt9LAogICAgICByZXNldEtleTogbnVsbCwKICAgICAgc2xpZGVyczogewogICAgICAgIGNvbmZpZGVuY2U6IHsKICAgICAgICAgIGlkOiBEQVRBVFlQRVMuY29uZmlkZW5jZVRocmVzaG9sZC5pZCwKICAgICAgICAgIHRpdGxlOiBEQVRBVFlQRVMuY29uZmlkZW5jZVRocmVzaG9sZC5kaXNwbGF5LAogICAgICAgICAgY29uZmlnOiB7CiAgICAgICAgICAgIG1pbjogMCwKICAgICAgICAgICAgbWF4OiAxMDAsCiAgICAgICAgICAgIGludGVydmFsOiAxLAogICAgICAgICAgICB2YWx1ZTogNTAsCiAgICAgICAgICAgIGFic29yYjogZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGhvcHM6IHsKICAgICAgICAgIGlkOiBEQVRBVFlQRVMuY29ubmVjdGlvbkhvcHMuaWQsCiAgICAgICAgICB0aXRsZTogREFUQVRZUEVTLmNvbm5lY3Rpb25Ib3BzLmRpc3BsYXksCiAgICAgICAgICBjb25maWc6IHsKICAgICAgICAgICAgbWluOiAxLAogICAgICAgICAgICBtYXg6IDMsCiAgICAgICAgICAgIGludGVydmFsOiAuMDEsCiAgICAgICAgICAgIHZhbHVlOiAxLjUsCiAgICAgICAgICAgIGRhdGE6IFsxLCAxLjUsIDIsIDIuNSwgM10sCiAgICAgICAgICAgIGFic29yYjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLlFVRVJZT1BUSU9OUyA9IFFVRVJZT1BUSU9OUzsKICAgIHRoaXMuREFUQVRZUEVTID0gREFUQVRZUEVTOwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ3Rlcm0nLCAnZXhwbG9yZVNlbGVjdGlvbnMnLCAnY2F0ZWdvcnlUeXBlcycsICdjYXRlZ29yeUFyZ3VtZW50cycsICdzYXZlZFVybFBhcmFtZXRlcnMnLCAnZmlsdGVycycsICdzYXZlZEZpbHRlcnMnLCAnZmlsdGVyUmVzZXQnXSkpLCBtYXBHZXR0ZXJzKFsnZ2V0U2F2ZWRGaWx0ZXJCeVR5cGVBbmRJbmRleCddKSksIHt9LCB7CiAgICBzZWxlY3RlZENhdGVnb3J5OiBmdW5jdGlvbiBzZWxlY3RlZENhdGVnb3J5KCkgewogICAgICByZXR1cm4gdGhpcy5leHBsb3JlU2VsZWN0aW9uc1tUQUJMRVNFTEVDVElPTlMudGFiXTsKICAgIH0sCiAgICBjb21wdXRlZENhdGVnb3JpZXM6IGZ1bmN0aW9uIGNvbXB1dGVkQ2F0ZWdvcmllcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLmNhdGVnb3JpZXMpLmxlbmd0aCA9PT0gMCB8fCAhdGhpcy5jYXRlZ29yaWVzW0RBVEFUWVBFUy5yZWxhdGlvblR5cGUuaWRdLnZhbHVlcyB8fCAhdGhpcy5jYXRlZ29yaWVzW0RBVEFUWVBFUy5ldmVudFR5cGUuaWRdLnZhbHVlcykgewogICAgICAgIHRoaXMuc2V0SW5pdGlhbFZhbHVlcygpOwogICAgICB9CgogICAgICBpZiAodGhpcy5maWx0ZXJSZXNldCkgewogICAgICAgIHRoaXMucmVzZXRGaWx0ZXJzKCk7CiAgICAgIH0KCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoX3RoaXMuc2F2ZWRVcmxQYXJhbWV0ZXJzW190aGlzLiRyb3V0ZS5uYW1lXSAmJiBfdGhpcy5zYXZlZFVybFBhcmFtZXRlcnNbX3RoaXMuJHJvdXRlLm5hbWVdLmZpbHRlciAmJiBPYmplY3Qua2V5cyhfdGhpcy5maWx0ZXJzKS5sZW5ndGggPT09IDApIHsKICAgICAgICAgIF90aGlzLnNldEluaXRpYWxDb3VudHMoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy5jYXRlZ29yaWVzOwogICAgfSwKICAgIGFyZ3VtZW50TmFtZXM6IGZ1bmN0aW9uIGFyZ3VtZW50TmFtZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkQ2F0ZWdvcnkgPT09IFVQUEVSQ0FTRUNBVEVHT1JZLmV2ZW50ID8gdGhpcy5jYXRlZ29yeUFyZ3VtZW50c1tEQVRBVFlQRVMuZXZlbnRUeXBlLmlkXSA6IHRoaXMuY2F0ZWdvcnlBcmd1bWVudHNbREFUQVRZUEVTLnJlbGF0aW9uVHlwZS5pZF07CiAgICB9LAogICAgY29tcG9uZW50RGlzcGxheTogZnVuY3Rpb24gY29tcG9uZW50RGlzcGxheSgpIHsKICAgICAgLy9zZXQgdGhlIHNob3cgcHJvcGVydHkgb24gZWFjaCBmaWx0ZXIgY29tcG9uZW50IGJhc2VkIG9uIHRoZSBzZWFyY2ggYmFyIHNlbGVjdGlvbgogICAgICB2YXIgYWN0aXZhdGVDb21wb25lbnRzID0gdGhpcy5wcmVzZXREaXNwbGF5KCk7CiAgICAgIHZhciBzZWxlY3RlZFRhYiA9IHRoaXMuZXhwbG9yZVNlbGVjdGlvbnNbVEFCTEVTRUxFQ1RJT05TLnRhYl07CiAgICAgIHZhciBzZWFyY2hLZXkgPSB0aGlzLnRlcm0udHlwZTsKICAgICAgdGhpcy5zZXRSZXNldEtleShzZWFyY2hLZXkpOyAvL2Jhc2VkIG9uIHRhYiBzZWxlY3Rpb24gb24gdGhlIEV4cGxvcmUgdmlldwoKICAgICAgaWYgKHNlbGVjdGVkVGFiICYmIHNlbGVjdGVkVGFiLnRvTG93ZXJDYXNlKCkgPT09IERBVEFUWVBFUy5ldmVudFR5cGUuaWQgfHwgIXNlbGVjdGVkVGFiKSB7CiAgICAgICAgYWN0aXZhdGVDb21wb25lbnRzW0RBVEFUWVBFUy5ldmVudFR5cGUuaWRdLnNob3cgPSB0cnVlOwogICAgICB9IGVsc2UgaWYgKHNlbGVjdGVkVGFiICYmIHNlbGVjdGVkVGFiLnRvTG93ZXJDYXNlKCkgPT09IERBVEFUWVBFUy5yZWxhdGlvblR5cGUuaWQpIHsKICAgICAgICBhY3RpdmF0ZUNvbXBvbmVudHNbREFUQVRZUEVTLnJlbGF0aW9uVHlwZS5pZF0uc2hvdyA9IHRydWU7CiAgICAgIH0gLy9UT0RPOiBBZGQgdGhpcyBzZXR1cCBiYWNrIGluIG9uY2UgdGhlc2UgQVBJcyBhcmUgYXZhaWxhYmxlCgogICAgICAvKgogICAgICBpZihzZWFyY2hLZXkgPT09IERBVEFUWVBFUy5oeXBvdGhlc2lzLmlkKSB7CiAgICAgICAgICBhY3RpdmF0ZUNvbXBvbmVudHNbREFUQVRZUEVTLmV2ZW50VHlwZS5pZF0uc2hvdyA9IHRydWU7CiAgICAgICAgICBhY3RpdmF0ZUNvbXBvbmVudHNbREFUQVRZUEVTLnJlbGF0aW9uVHlwZS5pZF0uc2hvdyA9IHRydWU7CiAgICAgIH0KICAgICAgIGlmKHNlYXJjaEtleSA9PT0gREFUQVRZUEVTLmV2ZW50VHlwZS5pZCB8fCBzZWFyY2hLZXkgPT09IERBVEFUWVBFUy5yZWxhdGlvblR5cGUuaWQpIHsKICAgICAgICAgICAgICBhY3RpdmF0ZUNvbXBvbmVudHNbREFUQVRZUEVTLmVudGl0eVR5cGUuaWRdLnNob3cgPSB0cnVlOwogICAgICAgICAgICAgIGFjdGl2YXRlQ29tcG9uZW50c1tEQVRBVFlQRVMuYXJndW1lbnROYW1lLmlkXS5zaG93ID0gdHJ1ZTsKICAgICAgICAgICAgICBhY3RpdmF0ZUNvbXBvbmVudHNbREFUQVRZUEVTLmtiSWQuaWRdLnNob3cgPSB0cnVlOwogICAgICAgICAgfQogICAgICAgICAgZWxzZSBpZihzZWFyY2hLZXkgPT09IERBVEFUWVBFUy5lbnRpdHlUeXBlLmlkIHx8IHNlYXJjaEtleSA9PT0gREFUQVRZUEVTLmtiSWQuaWQgfHwKICAgICAgICAgICAgICBzZWFyY2hLZXkgPT09IERBVEFUWVBFUy5hcmd1bWVudE5hbWUuaWQpCiAgICAgICAgICB7CiAgICAgICAgICAgICAgYWN0aXZhdGVDb21wb25lbnRzW0RBVEFUWVBFUy5hcmd1bWVudE5hbWUuaWRdLnNob3cgPSBzZWFyY2hLZXkgPT09IERBVEFUWVBFUy5lbnRpdHlUeXBlLmlkIHx8IHNlYXJjaEtleSA9PT0gREFUQVRZUEVTLmtiSWQuaWQ7CiAgICAgICAgICAgICAgYWN0aXZhdGVDb21wb25lbnRzW0RBVEFUWVBFUy5rYklkLmlkXS5zaG93ID0gc2VhcmNoS2V5ID09PSBEQVRBVFlQRVMuZW50aXR5VHlwZS5pZCB8fCBzZWFyY2hLZXkgPT09IERBVEFUWVBFUy5hcmd1bWVudE5hbWUuaWQ7CiAgICAgICAgICAgICAgYWN0aXZhdGVDb21wb25lbnRzW0RBVEFUWVBFUy5lbnRpdHlUeXBlLmlkXS5zaG93ID0gc2VhcmNoS2V5ICE9PSBEQVRBVFlQRVMuZW50aXR5VHlwZS5pZDsKICAgICAgICAgICAgICBhY3RpdmF0ZUNvbXBvbmVudHNbREFUQVRZUEVTLmV2ZW50VHlwZS5pZF0uc2hvdyA9IHRydWU7CiAgICAgICAgICAgICAgYWN0aXZhdGVDb21wb25lbnRzW0RBVEFUWVBFUy5yZWxhdGlvblR5cGUuaWRdLnNob3cgPSB0cnVlOwogICAgICAgICAgfSovCiAgICAgIC8vVE9ETzogQWRkIHRoaXMgc2V0dXAgYmFjayBpbiBvbmNlIHRoZXNlIEFQSXMgYXJlIGF2YWlsYWJsZQogICAgICAvL2FjdGl2YXRlQ29tcG9uZW50c1tEQVRBVFlQRVMuY29uZmlkZW5jZVRocmVzaG9sZC5pZF0uc2hvdyA9IHRydWU7CiAgICAgIC8vYWN0aXZhdGVDb21wb25lbnRzW0RBVEFUWVBFUy5kYXRlUmFuZ2UuaWRdLnNob3cgPSB0cnVlOwoKCiAgICAgIHJldHVybiBhY3RpdmF0ZUNvbXBvbmVudHM7CiAgICB9CiAgfSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWyd1cGRhdGVGaWx0ZXJzJ10pKSwgbWFwTXV0YXRpb25zKFsndXBkYXRlRmlsdGVyUmVzZXQnXSkpLCB7fSwgewogICAgcHJlc2V0RGlzcGxheTogZnVuY3Rpb24gcHJlc2V0RGlzcGxheSgpIHsKICAgICAgdmFyIGNvbXBvbmVudHMgPSB7fTsKCiAgICAgIGZvciAodmFyIGZpbHRlciBpbiBEQVRBVFlQRVMpIHsKICAgICAgICBjb21wb25lbnRzW0RBVEFUWVBFU1tmaWx0ZXJdLmlkXSA9IHsKICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNvbXBvbmVudHM7CiAgICB9LAogICAgZ2V0RGVmYXVsdENhdGVnb3JpZXM6IGZ1bmN0aW9uIGdldERlZmF1bHRDYXRlZ29yaWVzKCkgewogICAgICB2YXIgX3JlZjsKCiAgICAgIHJldHVybiBfcmVmID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCBEQVRBVFlQRVMuZW50aXR5VHlwZS5pZCwgbmV3IEZpbHRlcihEQVRBVFlQRVMuZW50aXR5VHlwZSwgQ2F0ZWdvcnlUeXBlcy5lbnRpdHlUeXBlcywgJ1R5cGUnKSksIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCBEQVRBVFlQRVMuYXJndW1lbnROYW1lLmlkLCBuZXcgRmlsdGVyKERBVEFUWVBFUy5hcmd1bWVudE5hbWUsIHRoaXMuYXJndW1lbnROYW1lcywgJ05hbWUnKSksIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCBEQVRBVFlQRVMuZXZlbnRUeXBlLmlkLCBuZXcgRmlsdGVyKERBVEFUWVBFUy5ldmVudFR5cGUsIHRoaXMuY2F0ZWdvcnlUeXBlc1tEQVRBVFlQRVMuZXZlbnRUeXBlLmlkXSkpLCBfZGVmaW5lUHJvcGVydHkoX3JlZiwgREFUQVRZUEVTLnJlbGF0aW9uVHlwZS5pZCwgbmV3IEZpbHRlcihEQVRBVFlQRVMucmVsYXRpb25UeXBlLCB0aGlzLmNhdGVnb3J5VHlwZXNbREFUQVRZUEVTLnJlbGF0aW9uVHlwZS5pZF0pKSwgX2RlZmluZVByb3BlcnR5KF9yZWYsIERBVEFUWVBFUy5rYklkLmlkLCBuZXcgRmlsdGVyKERBVEFUWVBFUy5rYklkLCBbJ1JNSUMwMDE1RDJKLjAwMDI5MCcsICdWTUlDMDAxNUQySi4wMDEyNjknLCAnVk1JQzAwMTVEMkouMDAwMDYzJ10sICdJRCcpKSwgX3JlZjsKICAgIH0sCiAgICBzZXRJbml0aWFsVmFsdWVzOiBmdW5jdGlvbiBzZXRJbml0aWFsVmFsdWVzKCkgewogICAgICB0aGlzLmNhdGVnb3JpZXMgPSB0aGlzLmdldERlZmF1bHRDYXRlZ29yaWVzKCk7CiAgICB9LAogICAgc2V0SW5pdGlhbENvdW50czogZnVuY3Rpb24gc2V0SW5pdGlhbENvdW50cygpIHsKICAgICAgLy9pZiBmaWx0ZXJzIGV4aXN0IHVwZGF0ZSB1cmwgcGFyYW1ldGVycyB3aXRoIHRoZSBsYXN0IHNhdmVkIGZpbHRlciBrZXkKICAgICAgdmFyIGZpbHRlcklkID0gdGhpcy5zYXZlZFVybFBhcmFtZXRlcnNbdGhpcy4kcm91dGUubmFtZV0uZmlsdGVyOwogICAgICB2YXIgZmlsdGVycyA9IHRoaXMuc2F2ZWRGaWx0ZXJzW2ZpbHRlcklkXTsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihPYmplY3QudmFsdWVzKERBVEFUWVBFUykubWFwKGZ1bmN0aW9uICh0eXBlKSB7CiAgICAgICAgcmV0dXJuIHR5cGUuaWQ7CiAgICAgIH0pKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHR5cGVJZCA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIGlmIChmaWx0ZXJzICYmIGZpbHRlcnMuaGFzT3duUHJvcGVydHkodHlwZUlkKSkgewogICAgICAgICAgICB0aGlzLmNhdGVnb3JpZXNbdHlwZUlkXS5xdWV1ZUNvdW50ID0gZmlsdGVyc1t0eXBlSWRdLmxlbmd0aDsKCiAgICAgICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZmlsdGVyc1t0eXBlSWRdLmVudHJpZXMoKSksCiAgICAgICAgICAgICAgICBfc3RlcDI7CgogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICB2YXIgX3N0ZXAyJHZhbHVlID0gX3NsaWNlZFRvQXJyYXkoX3N0ZXAyLnZhbHVlLCAyKSwKICAgICAgICAgICAgICAgICAgICBpbmRleCA9IF9zdGVwMiR2YWx1ZVswXSwKICAgICAgICAgICAgICAgICAgICBmaWx0ZXIgPSBfc3RlcDIkdmFsdWVbMV07CgogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXJzKHsKICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZUlkLAogICAgICAgICAgICAgICAgICBpbmRleDogaW5kZXgsCiAgICAgICAgICAgICAgICAgIGZpbHRlcjogZmlsdGVyLAogICAgICAgICAgICAgICAgICBjb25kaXRpb246ICcnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KICAgIH0sCiAgICBhZGRDYXRlZ29yeUNvbXBvbmVudDogZnVuY3Rpb24gYWRkQ2F0ZWdvcnlDb21wb25lbnQoY2F0ZWdvcnkpIHsKICAgICAgLy9wZXJmb3JtIHZhbGlkYXRpb24gb24gcHJldmlvdXMgZm9ybSBiZWZvcmUgYWRkaW5nIGEgbmV3IGZvcm0KICAgICAgdmFyIGxhc3RBY3RpdmVDYXRlZ29yeUtleSA9IE9iamVjdC5rZXlzKHRoaXMuJHJlZnMpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgcmV0dXJuIGtleS5pbmNsdWRlcyhjYXRlZ29yeSk7CiAgICAgIH0pLnBvcCgpOwogICAgICB2YXIgbGFzdEFjdGl2ZUNhdGVnb3J5Rm9ybSA9IHRoaXMuJHJlZnNbbGFzdEFjdGl2ZUNhdGVnb3J5S2V5XTsKICAgICAgdmFyIGlkbGVDYXRlZ29yeUtleXMgPSBPYmplY3Qua2V5cyh0aGlzLiRyZWZzKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkgewogICAgICAgIHJldHVybiAha2V5LmluY2x1ZGVzKGNhdGVnb3J5KTsKICAgICAgfSk7CiAgICAgIHZhciBhbGxWYWxpZCA9IHRydWU7CgogICAgICBmb3IgKHZhciByZWYgaW4gdGhpcy4kcmVmcykgewogICAgICAgIGlmICh0aGlzLiRyZWZzLmhhc093blByb3BlcnR5KHJlZikgJiYgcmVmLmluY2x1ZGVzKGNhdGVnb3J5KSAmJiB0aGlzLiRyZWZzW3JlZl1bMF0gJiYgIXRoaXMuJHJlZnNbcmVmXVswXS52YWxpZEZvcm0oKSkgewogICAgICAgICAgYWxsVmFsaWQgPSBmYWxzZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKGFsbFZhbGlkKSB7CiAgICAgICAgdGhpcy5jYXRlZ29yaWVzW2NhdGVnb3J5XS5xdWV1ZUNvdW50Kys7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbGFzdEFjdGl2ZUNhdGVnb3J5Rm9ybVswXS5yZXF1ZXN0VG9WYWxpZGF0ZSA9IHRydWU7CiAgICAgIH0KCiAgICAgIHRoaXMudHVybk9mZlJlcXVlc3RUb1ZhbGlkYXRlKGlkbGVDYXRlZ29yeUtleXMpOwogICAgfSwKICAgIGdldEN1cnJlbnRGaWx0ZXI6IGZ1bmN0aW9uIGdldEN1cnJlbnRGaWx0ZXIodHlwZSwgaW5kZXgpIHsKICAgICAgdmFyIGN1cnJlbnRGaWx0ZXIgPSB7CiAgICAgICAgaW5kZXg6IGluZGV4LAogICAgICAgIHZhbHVlOiAnJwogICAgICB9OwoKICAgICAgaWYgKHRoaXMuc2F2ZWRVcmxQYXJhbWV0ZXJzW3RoaXMuJHJvdXRlLm5hbWVdICYmIHRoaXMuc2F2ZWRVcmxQYXJhbWV0ZXJzW3RoaXMuJHJvdXRlLm5hbWVdLmZpbHRlcikgewogICAgICAgIHZhciBmaWx0ZXJJZCA9IHRoaXMuc2F2ZWRVcmxQYXJhbWV0ZXJzW3RoaXMuJHJvdXRlLm5hbWVdLmZpbHRlcjsKICAgICAgICB2YXIgc2F2ZWRGaWx0ZXJzID0gdGhpcy5zYXZlZEZpbHRlcnNbZmlsdGVySWRdOwoKICAgICAgICBpZiAoc2F2ZWRGaWx0ZXJzICYmIHNhdmVkRmlsdGVyc1t0eXBlXSkgewogICAgICAgICAgdmFyIHR5cGVGaWx0ZXJzID0gc2F2ZWRGaWx0ZXJzW3R5cGVdOwoKICAgICAgICAgIGlmICh0eXBlRmlsdGVycyAmJiB0eXBlRmlsdGVycy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGN1cnJlbnRGaWx0ZXIudmFsdWUgPSB0aGlzLmdldFNhdmVkRmlsdGVyQnlUeXBlQW5kSW5kZXgoZmlsdGVySWQsIHR5cGUsIGluZGV4KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAodGhpcy5maWx0ZXJzICYmIHRoaXMuZmlsdGVyc1t0eXBlXSkgewogICAgICAgIHZhciBmaWx0ZXJzID0gdGhpcy5maWx0ZXJzW3R5cGVdOwoKICAgICAgICBpZiAoZmlsdGVycyAmJiBmaWx0ZXJzW2luZGV4XSkgewogICAgICAgICAgY3VycmVudEZpbHRlci52YWx1ZSA9IGZpbHRlcnNbaW5kZXhdOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGN1cnJlbnRGaWx0ZXI7CiAgICB9LAogICAgdHVybk9mZlJlcXVlc3RUb1ZhbGlkYXRlOiBmdW5jdGlvbiB0dXJuT2ZmUmVxdWVzdFRvVmFsaWRhdGUoY2F0ZWdvcnlGb3JtS2V5cykgewogICAgICB2YXIgX2l0ZXJhdG9yMyA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKGNhdGVnb3J5Rm9ybUtleXMpLAogICAgICAgICAgX3N0ZXAzOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGtleSA9IF9zdGVwMy52YWx1ZTsKCiAgICAgICAgICBpZiAodGhpcy4kcmVmc1trZXldWzBdKSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnNba2V5XVswXS5yZXF1ZXN0VG9WYWxpZGF0ZSA9IGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgIH0KICAgIH0sCiAgICBkZWFjdGl2YXRlQ29tcG9uZW50VmFsaWRhdGlvbjogZnVuY3Rpb24gZGVhY3RpdmF0ZUNvbXBvbmVudFZhbGlkYXRpb24oKSB7CiAgICAgIGZvciAodmFyIHJlZiBpbiB0aGlzLiRyZWZzKSB7CiAgICAgICAgLy9pZiB0aGlzIGNhdGVnb3J5IGZpbHRlciBpcyB0aGUgb25seSBjb21wb25lbnQgaW4gdGhlIHF1ZXVlIGFuZCBkb2Vzbid0IGhhdmUgYSB2YWx1ZShjdXJyZW50U2VsZWN0ZWRWYWx1ZSksIHR1cm4gb2ZmIHRoZSB2YWxpZGF0aW9uCiAgICAgICAgaWYgKHRoaXMuJHJlZnMuaGFzT3duUHJvcGVydHkocmVmKSAmJiAocmVmLmluY2x1ZGVzKERBVEFUWVBFUy5lbnRpdHlUeXBlLmlkKSB8fCByZWYuaW5jbHVkZXMoREFUQVRZUEVTLmFyZ3VtZW50TmFtZS5pZCkgfHwgcmVmLmluY2x1ZGVzKERBVEFUWVBFUy5rYklkLmlkKSB8fCByZWYuaW5jbHVkZXMoREFUQVRZUEVTLmV2ZW50VHlwZS5pZCkgfHwgcmVmLmluY2x1ZGVzKERBVEFUWVBFUy5yZWxhdGlvblR5cGUuaWQpKSAmJiB0aGlzLiRyZWZzW3JlZl1bMF0gJiYgdGhpcy4kcmVmc1tyZWZdWzBdLmNhdGVnb3J5RGF0YS5xdWV1ZUNvdW50ID09PSAxICYmICF0aGlzLiRyZWZzW3JlZl1bMF0uY3VycmVudFNlbGVjdGVkVmFsdWUpIHsKICAgICAgICAgIHRoaXMuJHJlZnNbcmVmXVswXS5yZXF1ZXN0VG9WYWxpZGF0ZSA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHJlbW92ZUNhdGVnb3J5Q29tcG9uZW50OiBmdW5jdGlvbiByZW1vdmVDYXRlZ29yeUNvbXBvbmVudChvYmplY3QpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLnVwZGF0ZUNhdGVnb3J5Q29tcG9uZW50TGlzdCh0aGlzLmNhdGVnb3JpZXNbb2JqZWN0LnR5cGVdLmlkKTsKICAgICAgdGhpcy5jYXRlZ29yeUNvbXBvbmVudExpc3QuZm9yRWFjaChmdW5jdGlvbiAoZmlsdGVyKSB7CiAgICAgICAgaWYgKHBhcnNlSW50KGZpbHRlci5pZCkgPT09IG9iamVjdC5pbmRleCkgewogICAgICAgICAgLy9yZW1vdmluZyB0aGUgVnVlIHJlZmVyZW5jZSB0byB0aGUgY29tcG9uZW50IGNvbnRhaW5lciBkaXYKICAgICAgICAgIGZvciAodmFyIHJlZiBpbiBfdGhpczIuJHJlZnMpIHsKICAgICAgICAgICAgaWYgKF90aGlzMi4kcmVmcy5oYXNPd25Qcm9wZXJ0eShyZWYpICYmIF90aGlzMi4kcmVmc1tyZWZdWzBdICYmIF90aGlzMi4kcmVmc1tyZWZdWzBdLmN1cnJlbnRGaWx0ZXIuaW5kZXggPT09IG9iamVjdC5pbmRleCkgewogICAgICAgICAgICAgIGRlbGV0ZSBfdGhpczIuJHJlZnNbcmVmXTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7IC8vZ2l2ZSB0aW1lIGZvciB0aGUgY29tcG9uZW50IHRvIGJlIHJlbW92ZWQgdGhlbiB1cGRhdGUgdGhlIGNhdGVnb3J5Q29tcG9uZW50TGlzdCwgc2V0IHRoZSBuZXcgZmlsdGVySWQgZm9yIHRoZSBmaXJzdCBjb21wb25lbnQKICAgICAgLy9pbiB0aGUgcXVldWUgYW5kIGRlY3JlbWVudCB0aGUgcXVldWVDb3VudCBiYXNlZCBvbiB0aGUgbnVtYmVyIG9mIHJlbWFpbmluZyBhY3RpdmUgY2F0ZWdvcnkgY29tcG9uZW50cy4KCiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIudXBkYXRlQ2F0ZWdvcnlDb21wb25lbnRMaXN0KG9iamVjdC50eXBlKTsKCiAgICAgICAgdmFyIGNhdGVnb3J5QXJyYXkgPSBBcnJheS5mcm9tKF90aGlzMi5jYXRlZ29yeUNvbXBvbmVudExpc3QpOwoKICAgICAgICBpZiAoY2F0ZWdvcnlBcnJheVswXSkgewogICAgICAgICAgX3RoaXMyLmNhdGVnb3JpZXNbb2JqZWN0LnR5cGVdLmZpcnN0RmlsdGVySW5kZXggPSBjYXRlZ29yeUFycmF5WzBdLmlkOwogICAgICAgIH0KCiAgICAgICAgaWYgKF90aGlzMi5jYXRlZ29yaWVzW29iamVjdC50eXBlXS5xdWV1ZUNvdW50ID4gMSkgewogICAgICAgICAgX3RoaXMyLmNhdGVnb3JpZXNbb2JqZWN0LnR5cGVdLnF1ZXVlQ291bnQtLTsKICAgICAgICB9IC8vUmVyZW5kZXIgY2F0ZWdvcnkgY29tcG9uZW50cyB3aXRoIG5ldyBrZXlzIGluIG9yZGVyIGZvciBWdWUgdG8gcmVjb2duaXplIHRoYXQgdGhlIG9sZCBjb21wb25lbnRzIG5lZWQgdG8gYmUgcmVtb3ZlZAoKCiAgICAgICAgX3RoaXMyLmZpbHRlcktleSsrOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVDYXRlZ29yeUNvbXBvbmVudExpc3Q6IGZ1bmN0aW9uIHVwZGF0ZUNhdGVnb3J5Q29tcG9uZW50TGlzdChjbGFzc05hbWUpIHsKICAgICAgdGhpcy5jYXRlZ29yeUNvbXBvbmVudExpc3QgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCcuJyArIGNsYXNzTmFtZSk7CiAgICB9LAogICAgc2V0UmVzZXRLZXk6IGZ1bmN0aW9uIHNldFJlc2V0S2V5KHZhbHVlKSB7CiAgICAgIGlmICh0aGlzLnJlc2V0S2V5ICYmIHZhbHVlICYmIHRoaXMucmVzZXRLZXkgIT09IHZhbHVlKSB7CiAgICAgICAgdGhpcy5yZXNldEZpbHRlcnMoKTsKICAgICAgfQoKICAgICAgdGhpcy5yZXNldEtleSA9IHZhbHVlOwogICAgfSwKICAgIHJlc2V0RmlsdGVyczogZnVuY3Rpb24gcmVzZXRGaWx0ZXJzKCkgewogICAgICBmb3IgKHZhciBfaSA9IDAsIF9PYmplY3Qka2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuJHJlZnMpOyBfaSA8IF9PYmplY3Qka2V5cy5sZW5ndGg7IF9pKyspIHsKICAgICAgICB2YXIgaWQgPSBfT2JqZWN0JGtleXNbX2ldOwogICAgICAgIGRlbGV0ZSB0aGlzLiRyZWZzW2lkXTsKICAgICAgfSAvL1JlcmVuZGVyIHRoZSBjb250cm9sbGVyIGNvbXBvbmVudCB3aXRoIGEgbmV3IGtleSBpbiBvcmRlciBmb3IgVnVlIHRvIHJlY29nbml6ZSB0aGF0IHRoZSBvbGQgY29tcG9uZW50IG5lZWRzIHRvIGJlIHJlbW92ZWQKCgogICAgICB0aGlzLmNvbnRyb2xsZXJLZXkrKzsKICAgICAgdGhpcy5jYXRlZ29yaWVzID0gdGhpcy5nZXREZWZhdWx0Q2F0ZWdvcmllcygpOwogICAgICB0aGlzLnVwZGF0ZUZpbHRlclJlc2V0KGZhbHNlKTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["ExploreFilterController.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"full-width\" :key=\"controllerKey\">\n        <div v-if=\"componentDisplay[DATATYPES.entityType.id].show\">\n            <CategoryFilter v-for=\"(entityCount, index) in computedCategories[DATATYPES.entityType.id].queueCount\" :key=\"DATATYPES.entityType.id  + filterKey + entityCount\"\n                            :ref=\"DATATYPES.entityType.id + index\" :class='DATATYPES.entityType.id' :currentFilter=\"getCurrentFilter(DATATYPES.entityType.id, index)\" :categoryData=\"computedCategories[DATATYPES.entityType.id]\"\n                            :showConditionOption=true @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.argumentName.id].show\">\n            <CategoryFilter v-for=\"(nameCount, index) in computedCategories[DATATYPES.argumentName.id].queueCount\" :key=\"DATATYPES.argumentName.id  + filterKey + nameCount\"\n                            :ref=\"DATATYPES.argumentName.id + index\" :class='DATATYPES.argumentName.id' :currentFilter=\"getCurrentFilter(DATATYPES.argumentName.id, index)\" :categoryData=\"computedCategories[DATATYPES.argumentName.id]\"\n                            :showConditionOption=true @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.kbId.id].show\">\n            <CategoryFilter v-for=\"(kbIdCount, index) in computedCategories[DATATYPES.kbId.id].queueCount\" :key=\"DATATYPES.kbId.id  + filterKey + kbIdCount\"\n                            :ref=\"DATATYPES.kbId.id + index\"  :class='DATATYPES.kbId.id' :currentFilter=\"getCurrentFilter(DATATYPES.kbId.id, index)\" :categoryData=\"computedCategories[DATATYPES.kbId.id]\"\n                            :showConditionOption=true @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.eventType.id].show\">\n            <CategoryFilter v-for=\"(eventCount, index) in computedCategories[DATATYPES.eventType.id].queueCount\" :key=\"DATATYPES.eventType.id + filterKey + eventCount\"\n                            :ref=\"DATATYPES.eventType.id + index\"  :class='DATATYPES.eventType.id' :currentFilter=\"getCurrentFilter(DATATYPES.eventType.id, index)\" :categoryData=\"computedCategories[DATATYPES.eventType.id]\"\n                            @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.relationType.id].show\">\n            <CategoryFilter v-for=\"(relationCount, index) in computedCategories[DATATYPES.relationType.id].queueCount\" :key=\"DATATYPES.relationType.id  + filterKey + relationCount\"\n                            :ref=\"DATATYPES.relationType.id + index\"  :class='DATATYPES.relationType.id' :currentFilter=\"getCurrentFilter(DATATYPES.relationType.id, index)\" :categoryData=\"computedCategories[DATATYPES.relationType.id]\"\n                            @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <DateFilter v-if=\"componentDisplay[DATATYPES.dateRange.id].show\" :showDateTooltip=\"showDateTooltip\"></DateFilter>\n        <SliderFilter v-if=\"componentDisplay[DATATYPES.confidenceThreshold.id].show\" :settings=\"sliders.confidence\"></SliderFilter>\n        <SliderFilter v-if=\"componentDisplay[DATATYPES.connectionHops.id].show\" :settings=\"sliders.hops\"></SliderFilter>\n    </div>\n</template>\n\n<script>\n    import DateFilter from '@/components/forms/DateFilter';\n    import CategoryFilter from '@/components/forms/CategoryFilter';\n    import SliderFilter from '@/components/forms/SliderFilter';\n    import { DATATYPES, TABLESELECTIONS, QUERYOPTIONS } from '../utils';\n    import CategoryTypes from '@/assets/data/types.json';\n    import { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\n    import { UPPERCASECATEGORY } from '../api';\n\n\n    class Filter {\n        constructor(datatype, values, defaultValue) {\n            this.id = datatype.id;\n            this.title = datatype.display;\n            this.values = values;\n            this.defaultValue = defaultValue;\n\n            this.queueCount = 1;\n            this.firstFilterIndex = 0;\n        }\n    }\n\n    export default {\n        name: 'FilterFormsController',\n        props: {\n            showDateTooltip: Boolean\n        },\n        components: {DateFilter, CategoryFilter, SliderFilter},\n        data: () => ({\n            categoryComponentList: null,\n            controllerKey: 0,\n            filterKey: 0,\n            categories: {},\n            resetKey: null,\n            sliders: {\n                confidence: {id: DATATYPES.confidenceThreshold.id, title: DATATYPES.confidenceThreshold.display,\n                    config: {min: 0, max:100, interval:1, value:50, absorb:false}\n                },\n                hops: {id: DATATYPES.connectionHops.id, title: DATATYPES.connectionHops.display,\n                    config: {min: 1, max:3, interval:.01, value:1.5, data:[1, 1.5, 2, 2.5, 3], absorb:true}\n                }\n            }\n        }),\n        created() {\n            this.QUERYOPTIONS = QUERYOPTIONS;\n            this.DATATYPES = DATATYPES;\n        },\n        computed: {\n            ...mapState([\n                'term', 'exploreSelections', 'categoryTypes', 'categoryArguments', 'savedUrlParameters',\n                'filters', 'savedFilters', 'filterReset'\n            ]),\n            ...mapGetters(['getSavedFilterByTypeAndIndex']),\n            selectedCategory() {\n                return this.exploreSelections[TABLESELECTIONS.tab];\n            },\n            computedCategories() {\n                if(Object.keys(this.categories).length === 0 ||\n                    !this.categories[DATATYPES.relationType.id].values ||\n                    !this.categories[DATATYPES.eventType.id].values\n                )\n                {\n                    this.setInitialValues();\n                }\n\n                if(this.filterReset) {\n                    this.resetFilters();\n                }\n\n                this.$nextTick(() => {\n                    if (this.savedUrlParameters[this.$route.name] &&\n                        this.savedUrlParameters[this.$route.name].filter &&\n                        Object.keys(this.filters).length === 0) {\n                        this.setInitialCounts();\n                    }\n                });\n\n                return this.categories;\n            },\n            argumentNames() {\n                return this.selectedCategory === UPPERCASECATEGORY.event ?  this.categoryArguments[DATATYPES.eventType.id] : this.categoryArguments[DATATYPES.relationType.id];\n            },\n            componentDisplay() {\n                //set the show property on each filter component based on the search bar selection\n                let activateComponents = this.presetDisplay();\n                const selectedTab = this.exploreSelections[TABLESELECTIONS.tab];\n                const searchKey = this.term.type;\n                this.setResetKey(searchKey);\n\n                //based on tab selection on the Explore view\n                if(selectedTab && selectedTab.toLowerCase() === DATATYPES.eventType.id || !selectedTab) {\n                    activateComponents[DATATYPES.eventType.id].show = true;\n                }\n                else if(selectedTab && selectedTab.toLowerCase() === DATATYPES.relationType.id) {\n                    activateComponents[DATATYPES.relationType.id].show = true;\n                }\n\n                //TODO: Add this setup back in once these APIs are available\n                /*\n                if(searchKey === DATATYPES.hypothesis.id) {\n                    activateComponents[DATATYPES.eventType.id].show = true;\n                    activateComponents[DATATYPES.relationType.id].show = true;\n                }\n\n                if(searchKey === DATATYPES.eventType.id || searchKey === DATATYPES.relationType.id) {\n                        activateComponents[DATATYPES.entityType.id].show = true;\n                        activateComponents[DATATYPES.argumentName.id].show = true;\n                        activateComponents[DATATYPES.kbId.id].show = true;\n                    }\n                    else if(searchKey === DATATYPES.entityType.id || searchKey === DATATYPES.kbId.id ||\n                        searchKey === DATATYPES.argumentName.id)\n                    {\n                        activateComponents[DATATYPES.argumentName.id].show = searchKey === DATATYPES.entityType.id || searchKey === DATATYPES.kbId.id;\n                        activateComponents[DATATYPES.kbId.id].show = searchKey === DATATYPES.entityType.id || searchKey === DATATYPES.argumentName.id;\n                        activateComponents[DATATYPES.entityType.id].show = searchKey !== DATATYPES.entityType.id;\n                        activateComponents[DATATYPES.eventType.id].show = true;\n                        activateComponents[DATATYPES.relationType.id].show = true;\n                    }*/\n\n                //TODO: Add this setup back in once these APIs are available\n                //activateComponents[DATATYPES.confidenceThreshold.id].show = true;\n                //activateComponents[DATATYPES.dateRange.id].show = true;\n                return activateComponents;\n            }\n        },\n        methods: {\n            ...mapActions(['updateFilters']),\n            ...mapMutations(['updateFilterReset']),\n            presetDisplay() {\n                let components = {};\n                for (const filter in DATATYPES) {\n                    components[DATATYPES[filter].id] = {show : false}\n                }\n\n                return components;\n            },\n            getDefaultCategories() {\n                return {\n                    //TODO replace all values with data returned from the API calls\n                    [DATATYPES.entityType.id]: new Filter(DATATYPES.entityType, CategoryTypes.entityTypes, 'Type'),\n                    [DATATYPES.argumentName.id]: new Filter(DATATYPES.argumentName, this.argumentNames, 'Name'),\n                    [DATATYPES.eventType.id]: new Filter(DATATYPES.eventType, this.categoryTypes[DATATYPES.eventType.id]),\n                    [DATATYPES.relationType.id]: new Filter(DATATYPES.relationType, this.categoryTypes[DATATYPES.relationType.id]),\n                    [DATATYPES.kbId.id]: new Filter(DATATYPES.kbId, ['RMIC0015D2J.000290','VMIC0015D2J.001269','VMIC0015D2J.000063'], 'ID')\n                }\n            },\n            setInitialValues() {\n                this.categories = this.getDefaultCategories();\n            },\n            setInitialCounts() {\n                //if filters exist update url parameters with the last saved filter key\n                const filterId = this.savedUrlParameters[this.$route.name].filter;\n                const filters = this.savedFilters[filterId];\n\n                for (const typeId of Object.values(DATATYPES).map((type) => { return type.id })) {\n                    if(filters && filters.hasOwnProperty(typeId)) {\n                        this.categories[typeId].queueCount = filters[typeId].length;\n                        for (let [index, filter] of filters[typeId].entries()) {\n                            this.updateFilters({ type: typeId, index: index, filter: filter, condition: '' });\n                        }\n                    }\n                }\n            },\n            addCategoryComponent(category) {\n                //perform validation on previous form before adding a new form\n                let lastActiveCategoryKey = Object.keys(this.$refs).filter(key => key.includes(category)).pop();\n                let lastActiveCategoryForm = this.$refs[lastActiveCategoryKey];\n                let idleCategoryKeys = Object.keys(this.$refs).filter(key => !key.includes(category));\n\n                let allValid = true;\n                for (const ref in this.$refs) {\n                    if(this.$refs.hasOwnProperty(ref) && ref.includes(category) && this.$refs[ref][0] && !this.$refs[ref][0].validForm()) {\n                        allValid = false;\n                        break;\n                    }\n                }\n\n                if(allValid) {\n                    this.categories[category].queueCount ++;\n                }\n                else {\n                    lastActiveCategoryForm[0].requestToValidate = true;\n                }\n\n                this.turnOffRequestToValidate(idleCategoryKeys);\n            },\n            getCurrentFilter(type, index) {\n                let currentFilter = {index: index, value: ''};\n\n                if(this.savedUrlParameters[this.$route.name] && this.savedUrlParameters[this.$route.name].filter) {\n                    const filterId = this.savedUrlParameters[this.$route.name].filter;\n                    const savedFilters = this.savedFilters[filterId];\n\n                    if(savedFilters && savedFilters[type]) {\n                        const typeFilters = savedFilters[type];\n                        if(typeFilters && typeFilters.length > 0) {\n                            currentFilter.value = this.getSavedFilterByTypeAndIndex(filterId, type, index);\n                        }\n                    }\n                }\n                else if (this.filters && this.filters[type]) {\n                    const filters = this.filters[type];\n                    if(filters && filters[index]) {\n                        currentFilter.value = filters[index];\n                    }\n                }\n\n                return currentFilter;\n            },\n            turnOffRequestToValidate(categoryFormKeys) {\n                for (const key of categoryFormKeys) {\n                    if(this.$refs[key][0]) {\n                        this.$refs[key][0].requestToValidate = false;\n                    }\n                }\n            },\n            deactivateComponentValidation() {\n                for (const ref in this.$refs) {\n                    //if this category filter is the only component in the queue and doesn't have a value(currentSelectedValue), turn off the validation\n                    if(this.$refs.hasOwnProperty(ref) && (ref.includes(DATATYPES.entityType.id) || ref.includes(DATATYPES.argumentName.id) ||\n                        ref.includes(DATATYPES.kbId.id) || ref.includes(DATATYPES.eventType.id) || ref.includes(DATATYPES.relationType.id)) &&\n                        this.$refs[ref][0] && this.$refs[ref][0].categoryData.queueCount === 1 && !this.$refs[ref][0].currentSelectedValue)\n                    {\n                        this.$refs[ref][0].requestToValidate = false;\n                    }\n                }\n            },\n            removeCategoryComponent(object) {\n                this.updateCategoryComponentList(this.categories[object.type].id);\n                this.categoryComponentList.forEach((filter)=> {\n                    if(parseInt(filter.id) === object.index) {\n                        //removing the Vue reference to the component container div\n                        for (const ref in this.$refs) {\n                            if(this.$refs.hasOwnProperty(ref) && this.$refs[ref][0] && this.$refs[ref][0].currentFilter.index === object.index) {\n                                delete this.$refs[ref];\n                            }\n                        }\n                    }\n                });\n\n                //give time for the component to be removed then update the categoryComponentList, set the new filterId for the first component\n                //in the queue and decrement the queueCount based on the number of remaining active category components.\n                this.$nextTick(() => {\n                    this.updateCategoryComponentList(object.type);\n                    let categoryArray = Array.from(this.categoryComponentList);\n\n                    if(categoryArray[0]) {\n                        this.categories[object.type].firstFilterIndex = categoryArray[0].id;\n                    }\n\n                    if(this.categories[object.type].queueCount > 1) {\n                        this.categories[object.type].queueCount --;\n                    }\n                    //Rerender category components with new keys in order for Vue to recognize that the old components need to be removed\n                    this.filterKey ++;\n\n                });\n            },\n            updateCategoryComponentList(className) {\n                this.categoryComponentList = this.$el.querySelectorAll('.' + className);\n            },\n            setResetKey(value) {\n                if(this.resetKey && value && this.resetKey !== value) {\n                    this.resetFilters();\n                }\n                this.resetKey = value;\n            },\n            resetFilters() {\n                for (const id of Object.keys(this.$refs)) {\n                    delete this.$refs[id]\n                }\n\n                //Rerender the controller component with a new key in order for Vue to recognize that the old component needs to be removed\n                this.controllerKey ++;\n                this.categories = this.getDefaultCategories();\n                this.updateFilterReset(false)\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/components"}]}