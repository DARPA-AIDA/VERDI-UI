{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/ExploreFilterController.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/ExploreFilterController.vue","mtime":1640207172528},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ExploreFilterController.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ExploreFilterController.vue","sourceRoot":"src/components","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"full-width\" :key=\"controllerKey\">\n        <div v-if=\"componentDisplay[DATATYPES.entityType.id].show\">\n            <CategoryFilter v-for=\"(entityCount, index) in computedCategories[DATATYPES.entityType.id].queueCount\" :key=\"DATATYPES.entityType.id  + filterKey + entityCount\"\n                            :ref=\"DATATYPES.entityType.id + index\" :class='DATATYPES.entityType.id' :currentFilter=\"getCurrentFilter(DATATYPES.entityType.id, index)\" :categoryData=\"computedCategories[DATATYPES.entityType.id]\"\n                            :showConditionOption=true @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.argumentName.id].show\">\n            <CategoryFilter v-for=\"(nameCount, index) in computedCategories[DATATYPES.argumentName.id].queueCount\" :key=\"DATATYPES.argumentName.id  + filterKey + nameCount\"\n                            :ref=\"DATATYPES.argumentName.id + index\" :class='DATATYPES.argumentName.id' :currentFilter=\"getCurrentFilter(DATATYPES.argumentName.id, index)\" :categoryData=\"computedCategories[DATATYPES.argumentName.id]\"\n                            :showConditionOption=true @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.kbId.id].show\">\n            <CategoryFilter v-for=\"(kbIdCount, index) in computedCategories[DATATYPES.kbId.id].queueCount\" :key=\"DATATYPES.kbId.id  + filterKey + kbIdCount\"\n                            :ref=\"DATATYPES.kbId.id + index\"  :class='DATATYPES.kbId.id' :currentFilter=\"getCurrentFilter(DATATYPES.kbId.id, index)\" :categoryData=\"computedCategories[DATATYPES.kbId.id]\"\n                            :showConditionOption=true @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.eventType.id].show\">\n            <CategoryFilter v-for=\"(eventCount, index) in computedCategories[DATATYPES.eventType.id].queueCount\" :key=\"DATATYPES.eventType.id + filterKey + eventCount\"\n                            :ref=\"DATATYPES.eventType.id + index\"  :class='DATATYPES.eventType.id' :currentFilter=\"getCurrentFilter(DATATYPES.eventType.id, index)\" :categoryData=\"computedCategories[DATATYPES.eventType.id]\"\n                            @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <div v-if=\"componentDisplay[DATATYPES.relationType.id].show\">\n            <CategoryFilter v-for=\"(relationCount, index) in computedCategories[DATATYPES.relationType.id].queueCount\" :key=\"DATATYPES.relationType.id  + filterKey + relationCount\"\n                            :ref=\"DATATYPES.relationType.id + index\"  :class='DATATYPES.relationType.id' :currentFilter=\"getCurrentFilter(DATATYPES.relationType.id, index)\" :categoryData=\"computedCategories[DATATYPES.relationType.id]\"\n                            @addCategoryFilterForm=\"addCategoryComponent($event)\" @removeCategoryFilterForm=\"removeCategoryComponent($event)\">\n            </CategoryFilter>\n        </div>\n        <DateFilter v-if=\"componentDisplay[DATATYPES.dateRange.id].show\" :showDateTooltip=\"showDateTooltip\"></DateFilter>\n        <SliderFilter v-if=\"componentDisplay[DATATYPES.confidenceThreshold.id].show\" :settings=\"sliders.confidence\"></SliderFilter>\n        <SliderFilter v-if=\"componentDisplay[DATATYPES.connectionHops.id].show\" :settings=\"sliders.hops\"></SliderFilter>\n    </div>\n</template>\n\n<script>\n    import DateFilter from '@/components/forms/DateFilter';\n    import CategoryFilter from '@/components/forms/CategoryFilter';\n    import SliderFilter from '@/components/forms/SliderFilter';\n    import { DATATYPES, TABLESELECTIONS, QUERYOPTIONS } from '../utils';\n    import CategoryTypes from '@/assets/data/types.json';\n    import { mapState, mapGetters, mapActions, mapMutations } from 'vuex';\n    import { UPPERCASECATEGORY } from '../api';\n\n\n    class Filter {\n        constructor(datatype, values, defaultValue) {\n            this.id = datatype.id;\n            this.title = datatype.display;\n            this.values = values;\n            this.defaultValue = defaultValue;\n\n            this.queueCount = 1;\n            this.firstFilterIndex = 0;\n        }\n    }\n\n    export default {\n        name: 'FilterFormsController',\n        props: {\n            showDateTooltip: Boolean\n        },\n        components: {DateFilter, CategoryFilter, SliderFilter},\n        data: () => ({\n            categoryComponentList: null,\n            controllerKey: 0,\n            filterKey: 0,\n            categories: {},\n            resetKey: null,\n            sliders: {\n                confidence: {id: DATATYPES.confidenceThreshold.id, title: DATATYPES.confidenceThreshold.display,\n                    config: {min: 0, max:100, interval:1, value:50, absorb:false}\n                },\n                hops: {id: DATATYPES.connectionHops.id, title: DATATYPES.connectionHops.display,\n                    config: {min: 1, max:3, interval:.01, value:1.5, data:[1, 1.5, 2, 2.5, 3], absorb:true}\n                }\n            }\n        }),\n        created() {\n            this.QUERYOPTIONS = QUERYOPTIONS;\n            this.DATATYPES = DATATYPES;\n        },\n        computed: {\n            ...mapState([\n                'term', 'exploreSelections', 'categoryTypes', 'categoryArguments', 'savedUrlParameters',\n                'filters', 'savedFilters', 'filterReset'\n            ]),\n            ...mapGetters(['getSavedFilterByTypeAndIndex']),\n            selectedCategory() {\n                return this.exploreSelections[TABLESELECTIONS.tab];\n            },\n            computedCategories() {\n                if(Object.keys(this.categories).length === 0 ||\n                    !this.categories[DATATYPES.relationType.id].values ||\n                    !this.categories[DATATYPES.eventType.id].values\n                )\n                {\n                    this.setInitialValues();\n                }\n\n                if(this.filterReset) {\n                    this.resetFilters();\n                }\n\n                this.$nextTick(() => {\n                    if (this.savedUrlParameters[this.$route.name] &&\n                        this.savedUrlParameters[this.$route.name].filter &&\n                        Object.keys(this.filters).length === 0) {\n                        this.setInitialCounts();\n                    }\n                });\n\n                return this.categories;\n            },\n            argumentNames() {\n                return this.selectedCategory === UPPERCASECATEGORY.event ?  this.categoryArguments[DATATYPES.eventType.id] : this.categoryArguments[DATATYPES.relationType.id];\n            },\n            componentDisplay() {\n                //set the show property on each filter component based on the search bar selection\n                let activateComponents = this.presetDisplay();\n                const selectedTab = this.exploreSelections[TABLESELECTIONS.tab];\n                const searchKey = this.term.type;\n                this.setResetKey(searchKey);\n\n                //based on tab selection on the Explore view\n                if(selectedTab && selectedTab.toLowerCase() === DATATYPES.eventType.id || !selectedTab) {\n                    activateComponents[DATATYPES.eventType.id].show = true;\n                }\n                else if(selectedTab && selectedTab.toLowerCase() === DATATYPES.relationType.id) {\n                    activateComponents[DATATYPES.relationType.id].show = true;\n                }\n\n                //TODO: Add this setup back in once these APIs are available\n                /*\n                if(searchKey === DATATYPES.hypothesis.id) {\n                    activateComponents[DATATYPES.eventType.id].show = true;\n                    activateComponents[DATATYPES.relationType.id].show = true;\n                }\n\n                if(searchKey === DATATYPES.eventType.id || searchKey === DATATYPES.relationType.id) {\n                        activateComponents[DATATYPES.entityType.id].show = true;\n                        activateComponents[DATATYPES.argumentName.id].show = true;\n                        activateComponents[DATATYPES.kbId.id].show = true;\n                    }\n                    else if(searchKey === DATATYPES.entityType.id || searchKey === DATATYPES.kbId.id ||\n                        searchKey === DATATYPES.argumentName.id)\n                    {\n                        activateComponents[DATATYPES.argumentName.id].show = searchKey === DATATYPES.entityType.id || searchKey === DATATYPES.kbId.id;\n                        activateComponents[DATATYPES.kbId.id].show = searchKey === DATATYPES.entityType.id || searchKey === DATATYPES.argumentName.id;\n                        activateComponents[DATATYPES.entityType.id].show = searchKey !== DATATYPES.entityType.id;\n                        activateComponents[DATATYPES.eventType.id].show = true;\n                        activateComponents[DATATYPES.relationType.id].show = true;\n                    }*/\n\n                //TODO: Add this setup back in once these APIs are available\n                //activateComponents[DATATYPES.confidenceThreshold.id].show = true;\n                //activateComponents[DATATYPES.dateRange.id].show = true;\n                return activateComponents;\n            }\n        },\n        methods: {\n            ...mapActions(['updateFilters']),\n            ...mapMutations(['updateFilterReset']),\n            presetDisplay() {\n                let components = {};\n                for (const filter in DATATYPES) {\n                    components[DATATYPES[filter].id] = {show : false}\n                }\n\n                return components;\n            },\n            getDefaultCategories() {\n                return {\n                    //TODO replace all values with data returned from the API calls\n                    [DATATYPES.entityType.id]: new Filter(DATATYPES.entityType, CategoryTypes.entityTypes, 'Type'),\n                    [DATATYPES.argumentName.id]: new Filter(DATATYPES.argumentName, this.argumentNames, 'Name'),\n                    [DATATYPES.eventType.id]: new Filter(DATATYPES.eventType, this.categoryTypes[DATATYPES.eventType.id]),\n                    [DATATYPES.relationType.id]: new Filter(DATATYPES.relationType, this.categoryTypes[DATATYPES.relationType.id]),\n                    [DATATYPES.kbId.id]: new Filter(DATATYPES.kbId, ['RMIC0015D2J.000290','VMIC0015D2J.001269','VMIC0015D2J.000063'], 'ID')\n                }\n            },\n            setInitialValues() {\n                this.categories = this.getDefaultCategories();\n            },\n            setInitialCounts() {\n                //if filters exist update url parameters with the last saved filter key\n                const filterId = this.savedUrlParameters[this.$route.name].filter;\n                const filters = this.savedFilters[filterId];\n\n                for (const typeId of Object.values(DATATYPES).map((type) => { return type.id })) {\n                    if(filters && filters.hasOwnProperty(typeId)) {\n                        this.categories[typeId].queueCount = filters[typeId].length;\n                        for (let [index, filter] of filters[typeId].entries()) {\n                            this.updateFilters({ type: typeId, index: index, filter: filter, condition: '' });\n                        }\n                    }\n                }\n            },\n            addCategoryComponent(category) {\n                //perform validation on previous form before adding a new form\n                let lastActiveCategoryKey = Object.keys(this.$refs).filter(key => key.includes(category)).pop();\n                let lastActiveCategoryForm = this.$refs[lastActiveCategoryKey];\n                let idleCategoryKeys = Object.keys(this.$refs).filter(key => !key.includes(category));\n\n                let allValid = true;\n                for (const ref in this.$refs) {\n                    if(this.$refs.hasOwnProperty(ref) && ref.includes(category) && this.$refs[ref][0] && !this.$refs[ref][0].validForm()) {\n                        allValid = false;\n                        break;\n                    }\n                }\n\n                if(allValid) {\n                    this.categories[category].queueCount ++;\n                }\n                else {\n                    lastActiveCategoryForm[0].requestToValidate = true;\n                }\n\n                this.turnOffRequestToValidate(idleCategoryKeys);\n            },\n            getCurrentFilter(type, index) {\n                let currentFilter = {index: index, value: ''};\n\n                if(this.savedUrlParameters[this.$route.name] && this.savedUrlParameters[this.$route.name].filter) {\n                    const filterId = this.savedUrlParameters[this.$route.name].filter;\n                    const savedFilters = this.savedFilters[filterId];\n\n                    if(savedFilters && savedFilters[type]) {\n                        const typeFilters = savedFilters[type];\n                        if(typeFilters && typeFilters.length > 0) {\n                            currentFilter.value = this.getSavedFilterByTypeAndIndex(filterId, type, index);\n                        }\n                    }\n                }\n                else if (this.filters && this.filters[type]) {\n                    const filters = this.filters[type];\n                    if(filters && filters[index]) {\n                        currentFilter.value = filters[index];\n                    }\n                }\n\n                return currentFilter;\n            },\n            turnOffRequestToValidate(categoryFormKeys) {\n                for (const key of categoryFormKeys) {\n                    if(this.$refs[key][0]) {\n                        this.$refs[key][0].requestToValidate = false;\n                    }\n                }\n            },\n            deactivateComponentValidation() {\n                for (const ref in this.$refs) {\n                    //if this category filter is the only component in the queue and doesn't have a value(currentSelectedValue), turn off the validation\n                    if(this.$refs.hasOwnProperty(ref) && (ref.includes(DATATYPES.entityType.id) || ref.includes(DATATYPES.argumentName.id) ||\n                        ref.includes(DATATYPES.kbId.id) || ref.includes(DATATYPES.eventType.id) || ref.includes(DATATYPES.relationType.id)) &&\n                        this.$refs[ref][0] && this.$refs[ref][0].categoryData.queueCount === 1 && !this.$refs[ref][0].currentSelectedValue)\n                    {\n                        this.$refs[ref][0].requestToValidate = false;\n                    }\n                }\n            },\n            removeCategoryComponent(object) {\n                this.updateCategoryComponentList(this.categories[object.type].id);\n                this.categoryComponentList.forEach((filter)=> {\n                    if(parseInt(filter.id) === object.index) {\n                        //removing the Vue reference to the component container div\n                        for (const ref in this.$refs) {\n                            if(this.$refs.hasOwnProperty(ref) && this.$refs[ref][0] && this.$refs[ref][0].currentFilter.index === object.index) {\n                                delete this.$refs[ref];\n                            }\n                        }\n                    }\n                });\n\n                //give time for the component to be removed then update the categoryComponentList, set the new filterId for the first component\n                //in the queue and decrement the queueCount based on the number of remaining active category components.\n                this.$nextTick(() => {\n                    this.updateCategoryComponentList(object.type);\n                    let categoryArray = Array.from(this.categoryComponentList);\n\n                    if(categoryArray[0]) {\n                        this.categories[object.type].firstFilterIndex = categoryArray[0].id;\n                    }\n\n                    if(this.categories[object.type].queueCount > 1) {\n                        this.categories[object.type].queueCount --;\n                    }\n                    //Rerender category components with new keys in order for Vue to recognize that the old components need to be removed\n                    this.filterKey ++;\n\n                });\n            },\n            updateCategoryComponentList(className) {\n                this.categoryComponentList = this.$el.querySelectorAll('.' + className);\n            },\n            setResetKey(value) {\n                if(this.resetKey && value && this.resetKey !== value) {\n                    this.resetFilters();\n                }\n                this.resetKey = value;\n            },\n            resetFilters() {\n                for (const id of Object.keys(this.$refs)) {\n                    delete this.$refs[id]\n                }\n\n                //Rerender the controller component with a new key in order for Vue to recognize that the old component needs to be removed\n                this.controllerKey ++;\n                this.categories = this.getDefaultCategories();\n                this.updateFilterReset(false)\n            }\n        }\n    }\n</script>\n"]}]}