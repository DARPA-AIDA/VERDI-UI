{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/claims/ClaimFrameDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/claims/ClaimFrameDetails.vue","mtime":1641326767935},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IEFQSSBmcm9tICcuLi8uLi9hcGknOwogIGltcG9ydCBEYXRhVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL0RhdGFUYWJsZSc7CiAgaW1wb3J0IHsKICAgICAgVEFCTEVGSUVMRE1BUFBJTkcsCiAgICAgIFRBQkxFU0VMRUNUSU9OUywKICAgICAgTk9EQVRBTUVTU0FHRSwKICAgICAgVGFibGVTZXR0aW5ncywKICAgICAgSGVhZGVyQ29uZmlnLAogICAgICBnZXREYXRlU3RyaW5nLAogICAgICBtYWtlUGVyY2VudGFnZSwKICAgICAgU2Vjb25kYXJ5RXhwYW5kLAogICAgICBnZXRJZAogIH0gZnJvbSAnLi4vLi4vdXRpbHMnOwoKICBmdW5jdGlvbiBpbml0aWFsU3RhdGUoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgICBjbGFpbTogbnVsbCwKICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgICAgc3RhdHVzTWVzc2FnZTogJycsCiAgICAgICAgICB0b3BpYzogJycsCiAgICAgICAgICBzdWJUb3BpYzogJycsCiAgICAgICAgICB0ZW1wbGF0ZTogJycsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgICAgICB4VmFyaWJsZURhdGE6IFtdLAogICAgICAgICAgcHJvdmVuYW5jZURhdGE6IFtdLAogICAgICAgICAgZHVwQ2xhaW1zRGF0YTogW10sCiAgICAgICAgICBkdXBDbGFpbVRvcGljOiAnJywKICAgICAgICAgIGR1cENsYWltU3VidG9waWM6ICcnLAogICAgICAgICAgZHVwQ2xhaW1UZW1wbGF0ZTogJycsCiAgICAgICAgICBzdXBwQ2xhaW1zRGF0YTogW10sCiAgICAgICAgICBzdXBwQ2xhaW1Ub3BpYzogJycsCiAgICAgICAgICBzdXBwQ2xhaW1TdWJ0b3BpYzogJycsCiAgICAgICAgICBzdXBwQ2xhaW1UZW1wbGF0ZTogJycsCiAgICAgICAgICByZWxDbGFpbXNEYXRhOiBbXSwKICAgICAgICAgIHJlbENsYWltVG9waWM6ICcnLAogICAgICAgICAgcmVsQ2xhaW1TdWJ0b3BpYzogJycsCiAgICAgICAgICByZWxDbGFpbVRlbXBsYXRlOiAnJywKICAgICAgICAgIGNsYWltZXJEYXRhOiBbXSwKICAgICAgICAgIGNsYWltZXJBZmZpbGF0aW9uRGF0YTogW10sCiAgICAgICAgICBwcmltYXJ5SGVhZGVyRGF0YTogW10sCiAgICAgICAgICBsb2NhdGlvbjogJ2hlcmUnLAogICAgICAgICAgaW1wb3J0YW5jZTogJycsCiAgICAgICAgICBkYXRlVGltZTogJycsCiAgICAgICAgICB0YWJsZURhdGE6IG51bGwsCiAgICAgICAgICBlcGVzdGVtaWM6ICcnLAogICAgICAgICAgc2VudGltZW50OiAnJywKICAgICAgICAgIHN5c3RlbTogJycsCiAgICAgICAgICBwYWdpbmc6IHtbVEFCTEVTRUxFQ1RJT05TLml0ZW1zUGVyUGFnZV06J0FsbCd9CiAgICAgIH0KICB9CgogIGV4cG9ydCBkZWZhdWx0IHsKY29tcG9uZW50czogeyBEYXRhVGFibGUgfSwKICAgICAgbmFtZTogJ2NsYWltRnJhbWVEZXRhaWxzJywKICAgICAgZGF0YTogKCkgPT4gKGluaXRpYWxTdGF0ZSgpKSwKICAgICAgY3JlYXRlZCgpIHsKICAgICAgICAgIHRoaXMuTk9EQVRBTUVTU0FHRSA9IE5PREFUQU1FU1NBR0U7CiAgICAgICAgICB0aGlzLnNldENsYWltRnJhbWVEZXRhaWxzKHRoaXMuJHJvdXRlLnBhcmFtcy5jbGFpbWlkKTsKICAgICAgfSwKICAgICAgbWV0aG9kczogewogICAgICAgICAgc2V0Q2xhaW1GcmFtZURldGFpbHMoY2xhaW1GcmFtZUlkKSB7CiAgICAgICAgICAgICAgQVBJLmdldENsYWltRnJhbWVCeUlkKGNsYWltRnJhbWVJZCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnN0IGNsYWltRnJhbWVEZXRhaWxzID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjbGFpbUZyYW1lRGV0YWlscykKCiAgICAgICAgICAgICAgICAgIGlmKE9iamVjdC5rZXlzKGNsYWltRnJhbWVEZXRhaWxzKS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRvcGljID0gY2xhaW1GcmFtZURldGFpbHMudG9waWMKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3ViVG9waWMgPSBjbGFpbUZyYW1lRGV0YWlscy5zdWJ0b3BpYwogICAgICAgICAgICAgICAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IGNsYWltRnJhbWVEZXRhaWxzLmNsYWltVGVtcGxhdGUKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBjbGFpbUZyYW1lRGV0YWlscy5kZXNjcmlwdGlvbgogICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbXBvcnRhbmNlID0gbWFrZVBlcmNlbnRhZ2UoY2xhaW1GcmFtZURldGFpbHMuaW1wb3J0YW5jZSwgMCkKICAgICAgICAgICAgICAgICAgICAgIHRoaXMudGFibGVEYXRhID0gY2xhaW1GcmFtZURldGFpbHMuY29tcG9uZW50cwogICAgICAgICAgICAgICAgICAgICAgdGhpcy5lcGVzdGVtaWMgPSBjbGFpbUZyYW1lRGV0YWlscy5lcGlzdGVtaWMKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VudGltZW50ID0gY2xhaW1GcmFtZURldGFpbHMuc2VudGltZW50CiAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN5c3RlbSA9IGNsYWltRnJhbWVEZXRhaWxzLnN5c3RlbQogICAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRlVGltZSA9IGdldERhdGVTdHJpbmcoY2xhaW1GcmFtZURldGFpbHMuZGF0ZXNbMF0pCgogICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBjb21wb25lbnQgb2YgY2xhaW1GcmFtZURldGFpbHMuY29tcG9uZW50cykgewogICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGNvbXBvbmVudC5wcm9wZXJ0eU5hbWUgPT09ICd4VmFyaWFibGUnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcHJvcENvbXBvbmVudCBvZiBjb21wb25lbnQudmFsdWVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdGVtcFhWYXIgPSB7fQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBYVmFyW1RBQkxFRklFTERNQVBQSU5HLm5hbWVzXSA9IHByb3BDb21wb25lbnQuY29tcG9uZW50TmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFhWYXJbVEFCTEVGSUVMRE1BUFBJTkcuaWRdID0gcHJvcENvbXBvbmVudC5jb21wb25lbnRJZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFhWYXJbVEFCTEVGSUVMRE1BUFBJTkcudHlwZXNdID0gcHJvcENvbXBvbmVudC5jb21wb25lbnRUeXBlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFhWYXJbVEFCTEVGSUVMRE1BUFBJTkcucHJvdmVuYW5jZV0gPSBwcm9wQ29tcG9uZW50LmNvbXBvbmVudFByb3ZlbmFuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBYVmFyW1RBQkxFRklFTERNQVBQSU5HLmtlXSA9IHByb3BDb21wb25lbnQuY29tcG9uZW50S0UKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnhWYXJpYmxlRGF0YS5wdXNoKHRlbXBYVmFyKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKGNvbXBvbmVudC5wcm9wZXJ0eU5hbWUgPT09ICdjbGFpbWVyJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb3BDb21wb25lbnQgb2YgY29tcG9uZW50LnZhbHVlcykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRlbXBDbGFpbWVyID0ge30KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wQ2xhaW1lcltUQUJMRUZJRUxETUFQUElORy5jYXRlZ29yeV0gPSAnQ2xhaW1lcicKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBDbGFpbWVyW1RBQkxFRklFTERNQVBQSU5HLm5hbWVzXSA9IHByb3BDb21wb25lbnQuY29tcG9uZW50TmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcENsYWltZXJbVEFCTEVGSUVMRE1BUFBJTkcuaWRdID0gcHJvcENvbXBvbmVudC5jb21wb25lbnRJZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcENsYWltZXJbVEFCTEVGSUVMRE1BUFBJTkcudHlwZXNdID0gcHJvcENvbXBvbmVudC5jb21wb25lbnRUeXBlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcENsYWltZXJbVEFCTEVGSUVMRE1BUFBJTkcucHJvdmVuYW5jZV0gPSBwcm9wQ29tcG9uZW50LmNvbXBvbmVudFByb3ZlbmFuY2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBDbGFpbWVyW1RBQkxFRklFTERNQVBQSU5HLmtlXSA9IGdldElkKHByb3BDb21wb25lbnQuY29tcG9uZW50S0UpCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy5jbGFpbWVyTGlzdF0gPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy5jbGFpbWVyTGlzdF0gPSBbcHJvcENvbXBvbmVudC5jb21wb25lbnROYW1lXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByaW1hcnlIZWFkZXJEYXRhW1RBQkxFRklFTERNQVBQSU5HLmNsYWltZXJMaXN0XS5wdXNoKHByb3BDb21wb25lbnQuY29tcG9uZW50TmFtZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsYWltZXJEYXRhLnB1c2godGVtcENsYWltZXIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoY29tcG9uZW50LnByb3BlcnR5TmFtZSA9PT0gJ2NsYWltZXJBZmZpbGlhdGlvbicpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm9wQ29tcG9uZW50IG9mIGNvbXBvbmVudC52YWx1ZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0ZW1wQ2xhaW1lckFmZiA9IHt9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcENsYWltZXJBZmZbVEFCTEVGSUVMRE1BUFBJTkcuY2F0ZWdvcnldID0gJ0NsYWltZXIgQWZmaWxpYXRpb24nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wQ2xhaW1lckFmZltUQUJMRUZJRUxETUFQUElORy5uYW1lc10gPSBwcm9wQ29tcG9uZW50LmNvbXBvbmVudE5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBDbGFpbWVyQWZmW1RBQkxFRklFTERNQVBQSU5HLmlkXSA9IHByb3BDb21wb25lbnQuY29tcG9uZW50SWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBDbGFpbWVyQWZmW1RBQkxFRklFTERNQVBQSU5HLnR5cGVzXSA9IHByb3BDb21wb25lbnQuY29tcG9uZW50VHlwZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBDbGFpbWVyQWZmW1RBQkxFRklFTERNQVBQSU5HLnByb3ZlbmFuY2VdID0gcHJvcENvbXBvbmVudC5jb21wb25lbnRQcm92ZW5hbmNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wQ2xhaW1lckFmZltUQUJMRUZJRUxETUFQUElORy5rZV0gPSBnZXRJZChwcm9wQ29tcG9uZW50LmNvbXBvbmVudEtFKQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHRoaXMucHJpbWFyeUhlYWRlckRhdGFbVEFCTEVGSUVMRE1BUFBJTkcuYWZmaWxpYXRpb25dID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJpbWFyeUhlYWRlckRhdGFbVEFCTEVGSUVMRE1BUFBJTkcuYWZmaWxpYXRpb25dID0gW3Byb3BDb21wb25lbnQuY29tcG9uZW50TmFtZV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy5hZmZpbGlhdGlvbl0ucHVzaChwcm9wQ29tcG9uZW50LmNvbXBvbmVudE5hbWUpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGFpbWVyQWZmaWxhdGlvbkRhdGEucHVzaCh0ZW1wQ2xhaW1lckFmZikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihjb21wb25lbnQucHJvcGVydHlOYW1lID09PSAnY2xhaW1Mb2NhdGlvbicpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhdGlvbiA9IGNvbXBvbmVudC52YWx1ZXNbMF0uY29tcG9uZW50TmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHRlbXBQcm92ZW5hbmNlIG9mIGNsYWltRnJhbWVEZXRhaWxzLnByb3ZlbmFuY2VzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGVtcFByb3ZlbmFuY2UucHJvcGVydHlOYW1lID09PSAnYXNzb2NpYXRlZEtFcycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm92QXJyYXkgb2YgdGVtcFByb3ZlbmFuY2UudmFsdWVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZih0aGlzLnByaW1hcnlIZWFkZXJEYXRhW1RBQkxFRklFTERNQVBQSU5HLnZhcmlhYmxlTGlzdF0gPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy52YXJpYWJsZUxpc3RdID0gW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByaW1hcnlIZWFkZXJEYXRhW1RBQkxFRklFTERNQVBQSU5HLnZhcmlhYmxlTGlzdF0ucHVzaChnZXRJZChwcm92QXJyYXkua2VJZCkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJpbWFyeUhlYWRlckRhdGFbVEFCTEVGSUVMRE1BUFBJTkcudmFyaWFibGVMaXN0XS5wdXNoKGdldElkKHByb3ZBcnJheS5rZUlkKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZih0ZW1wUHJvdmVuYW5jZS5wcm9wZXJ0eU5hbWUgPT09ICdjbGFpbVNlbWFudGljcycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm92QXJyYXkgb2YgdGVtcFByb3ZlbmFuY2UudmFsdWVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZih0aGlzLnByaW1hcnlIZWFkZXJEYXRhW1RBQkxFRklFTERNQVBQSU5HLnNlbWFudGljc10gPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy5zZW1hbnRpY3NdID0gW10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByaW1hcnlIZWFkZXJEYXRhW1RBQkxFRklFTERNQVBQSU5HLnNlbWFudGljc10ucHVzaChnZXRJZChwcm92QXJyYXkua2VJZCkpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJpbWFyeUhlYWRlckRhdGFbVEFCTEVGSUVMRE1BUFBJTkcuc2VtYW50aWNzXS5wdXNoKGdldElkKHByb3ZBcnJheS5rZUlkKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBsZXQgc2Vjb25kYXJ5RGF0YSA9IHRoaXMuY2xhaW1lckRhdGE7CiAgICAgICAgICAgICAgICAgICAgICBzZWNvbmRhcnlEYXRhID0gc2Vjb25kYXJ5RGF0YS5jb25jYXQodGhpcy5jbGFpbWVyQWZmaWxhdGlvbkRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy5lbnRpdHlMaXN0XSA9IGNsYWltRnJhbWVEZXRhaWxzLnNvdXJjZURvY3VtZW50LmlkCgogICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmltYXJ5SGVhZGVyRGF0YVtUQUJMRUZJRUxETUFQUElORy5kb2N1bWVudExpc3RdID0gc2Vjb25kYXJ5RGF0YTsKCiAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLnByb3ZlbmFuY2VEYXRhID0gc2Vjb25kYXJ5RGF0YQogICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm92ZW5hbmNlRGF0YSA9IFt0aGlzLnByaW1hcnlIZWFkZXJEYXRhXTsKCiAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wcmltYXJ5SGVhZGVyRGF0YSkKCiAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJlbGF0ZWRDbGFpbXMgb2YgY2xhaW1GcmFtZURldGFpbHMucmVsYXRpb25zKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVsYXRlZENsYWltcy5wcm9wZXJ0eU5hbWUgPT0gJ2lkZW50aWNhbENsYWltcycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCByZWxhdGVkVmFsdWVzIG9mIHJlbGF0ZWRDbGFpbXMudmFsdWVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdGVtcER1cENsYWltID0ge30KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmR1cENsYWltVG9waWMgPSByZWxhdGVkVmFsdWVzLnRvcGljCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmR1cENsYWltU3VidG9waWMgPSByZWxhdGVkVmFsdWVzLnN1YnRvcGljCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmR1cENsYWltVGVtcGxhdGUgPSByZWxhdGVkVmFsdWVzLmNsYWltVGVtcGxhdGUKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRHVwQ2xhaW1bVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmVdID0gcmVsYXRlZFZhbHVlcy5kZXNjcmlwdGlvbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcER1cENsYWltW1RBQkxFRklFTERNQVBQSU5HLnZhcmlhYmxlTGlzdF0gPSAnWCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBEdXBDbGFpbVtUQUJMRUZJRUxETUFQUElORy5sb2NhdGlvbl0gPSAncGxhY2UnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRHVwQ2xhaW1bVEFCTEVGSUVMRE1BUFBJTkcucGVyY2VudGFnZV0gPSAnaW1wb3J0YW50JwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcER1cENsYWltW1RBQkxFRklFTERNQVBQSU5HLmRhdGVzXSA9ICdEJwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZHVwQ2xhaW1zRGF0YS5wdXNoKHRlbXBEdXBDbGFpbSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihyZWxhdGVkQ2xhaW1zLnByb3BlcnR5TmFtZSA9PSAnc3VwcG9ydGluZ0NsYWltcycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCByZWxhdGVkVmFsdWVzIG9mIHJlbGF0ZWRDbGFpbXMudmFsdWVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdGVtcFN1cHBDbGFpbSA9IHt9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdXBwQ2xhaW1Ub3BpYyA9IHJlbGF0ZWRWYWx1ZXMudG9waWMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3VwcENsYWltU3VidG9waWMgPSByZWxhdGVkVmFsdWVzLnN1YnRvcGljCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN1cHBDbGFpbVRlbXBsYXRlID0gcmVsYXRlZFZhbHVlcy5jbGFpbVRlbXBsYXRlCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFN1cHBDbGFpbVtUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZV0gPSByZWxhdGVkVmFsdWVzLmRlc2NyaXB0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wU3VwcENsYWltW1RBQkxFRklFTERNQVBQSU5HLnZhcmlhYmxlTGlzdF0gPSAnWCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBTdXBwQ2xhaW1bVEFCTEVGSUVMRE1BUFBJTkcubG9jYXRpb25dID0gJ3BsYWNlJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFN1cHBDbGFpbVtUQUJMRUZJRUxETUFQUElORy5wZXJjZW50YWdlXSA9ICdpbXBvcnRhbnQnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wU3VwcENsYWltW1RBQkxFRklFTERNQVBQSU5HLmRhdGVzXSA9ICdkJwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3VwcENsYWltc0RhdGEucHVzaCh0ZW1wU3VwcENsYWltKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKHJlbGF0ZWRDbGFpbXMucHJvcGVydHlOYW1lID09ICdyZWxhdGVkQ2xhaW1zJykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJlbGF0ZWRWYWx1ZXMgb2YgcmVsYXRlZENsYWltcy52YWx1ZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0ZW1wUmVsQ2xhaW0gPSB7fQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVsQ2xhaW1Ub3BpYyA9IHJlbGF0ZWRWYWx1ZXMudG9waWMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVsQ2xhaW1TdWJ0b3BpYyA9IHJlbGF0ZWRWYWx1ZXMuc3VidG9waWMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVsQ2xhaW1UZW1wbGF0ZSA9IHJlbGF0ZWRWYWx1ZXMuY2xhaW1UZW1wbGF0ZQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBSZWxDbGFpbVtUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZV0gPSByZWxhdGVkVmFsdWVzLmRlc2NyaXB0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wUmVsQ2xhaW1bVEFCTEVGSUVMRE1BUFBJTkcudmFyaWFibGVMaXN0XSA9ICdYJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFJlbENsYWltW1RBQkxFRklFTERNQVBQSU5HLmxvY2F0aW9uXSA9ICdwbGFjZScKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBSZWxDbGFpbVtUQUJMRUZJRUxETUFQUElORy5wZXJjZW50YWdlXSA9ICdpbXBvcnRhbnQnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wUmVsQ2xhaW1bVEFCTEVGSUVMRE1BUFBJTkcuZGF0ZXNdID0gJ2QnCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWxDbGFpbXNEYXRhLnB1c2godGVtcFJlbENsYWltKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzTWVzc2FnZSA9IHRoaXMuTk9EQVRBTUVTU0FHRTsKICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgIH0sCiAgICAgICAgICBidWlsZFhWYXJUYWJsZUNvbmZpZ3VyYXRpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgdGFibGVTZXR0aW5nczogbmV3IFRhYmxlU2V0dGluZ3MoVEFCTEVGSUVMRE1BUFBJTkcuaWQsIGZhbHNlLCAnWC12YXJpYmxlJywgJycsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcucGVyY2VudGFnZSwgdHJ1ZSksCiAgICAgICAgICAgICAgICAgIHByaW1hcnlIZWFkZXJzOiBbCiAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdOYW1lJywgJ3N0YXJ0JywgdHJ1ZSwgVEFCTEVGSUVMRE1BUFBJTkcubmFtZXMpLAogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnSWRlbnRpdHknLCAnc3RhcnQnLCB0cnVlLCBUQUJMRUZJRUxETUFQUElORy5pZCksCiAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdUeXBlJywgJ3N0YXJ0JywgdHJ1ZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpLAogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnUHJvdmVuYW5jZScsICdzdGFydCcsIHRydWUsIFRBQkxFRklFTERNQVBQSU5HLnByb3ZlbmFuY2UpLAogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnS0UnLCAnc3RhcnQnLCB0cnVlLCBUQUJMRUZJRUxETUFQUElORy5rZSkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgIH07CiAgICAgICAgICB9LAogICAgICAgICAgYnVpbGRQcm92ZW5hbmNlVGFibGVDb25maWd1cmF0aW9uKCkgewogICAgICAgICAgICAgIC8vIFVzZSBwcmltYXJlcnkgYW5kIHNlY29uZGFyeSBoZWFkZXJzIGZvcm1hdCB0aGUgZGF0YSBmb3IgdGhlIHNlY29uZGFyeSBoZWFkZXJzLgogICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgIHRhYmxlU2V0dGluZ3M6IG5ldyBUYWJsZVNldHRpbmdzKFRBQkxFRklFTERNQVBQSU5HLmlkLCB0cnVlLCAnUHJvdmVuYW5jZScsICcnLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnBlcmNlbnRhZ2UsIHRydWUpLAogICAgICAgICAgICAgICAgICBwcmltYXJ5SGVhZGVyczogWwogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnQ2xhaW1lcicsICdzdGFydCcsIHRydWUsIFRBQkxFRklFTERNQVBQSU5HLmNsYWltZXJMaXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0NsYWltZXIgQWZmaWxpYXRpb24nLCAnc3RhcnQnLCB0cnVlLCBUQUJMRUZJRUxETUFQUElORy5hZmZpbGlhdGlvbiksCiAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdTb3VyY2UnLCAnc3RhcnQnLCB0cnVlLCBUQUJMRUZJRUxETUFQUElORy5lbnRpdHlMaXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0Fzc29jaWF0ZWQgS0UnLCAnc3RhcnQnLCB0cnVlLCBUQUJMRUZJRUxETUFQUElORy52YXJpYWJsZUxpc3QpLAogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnQ2xhaW0gU2VtYW50aWNzJywgJ3N0YXJ0JywgdHJ1ZSwgVEFCTEVGSUVMRE1BUFBJTkcuc2VtYW50aWNzKSwKICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJycsICdjZW50ZXInLCBmYWxzZSwgJ2RhdGEtdGFibGUtZXhwYW5kJykKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgc2Vjb25kYXJ5SGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgZXhwYW5kZWQ6IG5ldyBTZWNvbmRhcnlFeHBhbmQoJycsIFRBQkxFRklFTERNQVBQSU5HLmRvY3VtZW50TGlzdCwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0NvbXBvbmVudCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5jYXRlZ29yeSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ05hbWUnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcubmFtZXMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdJZGVudGl0eScsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ1R5cGUnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdQcm92ZW5hbmNlJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnByb3ZlbmFuY2UpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdLRScsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5rZSkKICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgfSwKICAgICAgICAgIGJ1aWxkUmVsYXRlZENsYWltVGFibGVDb25maWd1cmF0aW9uKHJlbGF0aW9uc2hpcCwgdG9waWMsIHN1YnRvcGljLCB0ZW1wbGF0ZSkgewogICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgIHRhYmxlU2V0dGluZ3M6IG5ldyBUYWJsZVNldHRpbmdzKFRBQkxFRklFTERNQVBQSU5HLmlkLCBmYWxzZSwgcmVsYXRpb25zaGlwLCB0b3BpYyArICcgLSAnICsgc3VidG9waWMgKyAnIC0gJyArIHRlbXBsYXRlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnBlcmNlbnRhZ2UsIHRydWUpLAogICAgICAgICAgICAgICAgICBwcmltYXJ5SGVhZGVyczogWwogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnRGVzY3JpcHRpb24nLCAnc3RhcnQnLCB0cnVlLCBUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZSksCiAgICAgICAgICAgICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdYLXZhcmlhYmxlJywgJ3N0YXJ0JywgdHJ1ZSwgVEFCTEVGSUVMRE1BUFBJTkcudmFyaWFibGVMaXN0KSwKICAgICAgICAgICAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0xvY2F0aW9uJywgJ3N0YXJ0JywgdHJ1ZSwgVEFCTEVGSUVMRE1BUFBJTkcubG9jYXRpb24pLAogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnSW1wb3J0YW5jZScsICdzdGFydCcsIHRydWUsIFRBQkxFRklFTERNQVBQSU5HLnBlcmNlbnRhZ2UpLAogICAgICAgICAgICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnRGF0ZTpUaW1lJywgJ3N0YXJ0JywgdHJ1ZSwgVEFCTEVGSUVMRE1BUFBJTkcuZGF0ZXMpCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICB9OwogICAgICAgICAgfQogICAgICB9LAogIH0K"},{"version":3,"sources":["ClaimFrameDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClaimFrameDetails.vue","sourceRoot":"src/views/claims","sourcesContent":["<!--\n  - Copyright 2021 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  - Created by Nate Deml on 12/07/21\n-->\n\n<template>\n    <div class=\"page-content\">\n        <div v-if=\"loading===true\" class=\"loading-section\">\n            <v-progress-linear indeterminate></v-progress-linear>\n            <div class=\"loading-message-clear\">{{statusMessage}}</div>\n        </div>\n        <div>\n            <div class=\"tableContainer\">\n                <div class=\"kb-details\">\n                    <div class=\"kb-description-wrapper\">\n                        <div class=\"element-list-header\">\n                            <div class=\"primary-page-header-left\">Claim Frame Details</div>\n                        </div>\n                    </div>\n                </div>\n                <table class=\"claimFrameDetailsTable\">\n                    <tr>\n                        <td class=\"tableKeyCol\">Topic</td>\n                        <td class=\"tableKValCol\">{{topic}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Subtopic</td>\n                        <td class=\"tableKValCol\">{{subTopic}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Claim Template</td>\n                        <td class=\"tableKValCol\">{{template}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Decription</td>\n                        <td class=\"tableKValCol\">{{description}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Location</td>\n                        <td class=\"tableKValCol\">{{location}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Importance</td>\n                        <td class=\"tableKValCol\">{{importance}}%</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Date:Time</td>\n                        <td class=\"tableKValCol\">{{dateTime}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Epestemic</td>\n                        <td class=\"tableKValCol\">{{epestemic}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">Sentiment</td>\n                        <td class=\"tableKValCol\">{{sentiment}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"tableKeyCol\">System</td>\n                        <td class=\"tableKValCol\">{{system}}</td>\n                    </tr>\n                </table>\n                <br/>\n                <DataTable\n                    :data=\"this.xVaribleData\"\n                    :tableConfiguration=\"buildXVarTableConfiguration()\"\n                    :statusMessage=\"statusMessage\"\n                    :paging=\"paging\"\n                    :hideFooter=true\n                ></DataTable>\n\n                <DataTable\n                    :data=\"this.provenanceData\"\n                    :tableConfiguration=\"buildProvenanceTableConfiguration()\"\n                    :statusMessage=\"statusMessage\"\n                    :paging=\"paging\"\n                    :hideFooter=true\n                ></DataTable>\n\n                <br>\n                <h3>Perspective</h3>\n\n                <DataTable\n                    :data=\"this.dupClaimsData\"\n                    :tableConfiguration=\"buildRelatedClaimTableConfiguration('Identical Claims', this.dupClaimTopic, this.dupClaimSubtopic , this.dupClaimTemplate)\"\n                    :statusMessage=\"statusMessage\"\n                    :paging=\"paging\"\n                    :hideFooter=true\n                ></DataTable>\n\n                <DataTable\n                    :data=\"this.suppClaimsData\"\n                    :tableConfiguration=\"buildRelatedClaimTableConfiguration('Supporting Claims', this.suppClaimTopic, this.suppClaimSubtopic, this.suppClaimTemplate)\"\n                    :statusMessage=\"statusMessage\"\n                    :paging=\"paging\"\n                    :hideFooter=true\n                ></DataTable>\n\n                <DataTable\n                    :data=\"this.relClaimsData\"\n                    :tableConfiguration=\"buildRelatedClaimTableConfiguration('Related Claims', this.relClaimTopic, this.relClaimSubtopic, this.relClaimTemplate)\"\n                    :statusMessage=\"statusMessage\"\n                    :paging=\"paging\"\n                    :hideFooter=true\n                ></DataTable>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import API from '../../api';\n    import DataTable from '@/components/DataTable';\n    import {\n        TABLEFIELDMAPPING,\n        TABLESELECTIONS,\n        NODATAMESSAGE,\n        TableSettings,\n        HeaderConfig,\n        getDateString,\n        makePercentage,\n        SecondaryExpand,\n        getId\n    } from '../../utils';\n\n    function initialState() {\n        return {\n            claim: null,\n            loading: false,\n            statusMessage: '',\n            topic: '',\n            subTopic: '',\n            template: '',\n            description: '',\n            xVaribleData: [],\n            provenanceData: [],\n            dupClaimsData: [],\n            dupClaimTopic: '',\n            dupClaimSubtopic: '',\n            dupClaimTemplate: '',\n            suppClaimsData: [],\n            suppClaimTopic: '',\n            suppClaimSubtopic: '',\n            suppClaimTemplate: '',\n            relClaimsData: [],\n            relClaimTopic: '',\n            relClaimSubtopic: '',\n            relClaimTemplate: '',\n            claimerData: [],\n            claimerAffilationData: [],\n            primaryHeaderData: [],\n            location: 'here',\n            importance: '',\n            dateTime: '',\n            tableData: null,\n            epestemic: '',\n            sentiment: '',\n            system: '',\n            paging: {[TABLESELECTIONS.itemsPerPage]:'All'}\n        }\n    }\n\n    export default {\n  components: { DataTable },\n        name: 'claimFrameDetails',\n        data: () => (initialState()),\n        created() {\n            this.NODATAMESSAGE = NODATAMESSAGE;\n            this.setClaimFrameDetails(this.$route.params.claimid);\n        },\n        methods: {\n            setClaimFrameDetails(claimFrameId) {\n                API.getClaimFrameById(claimFrameId).then(response => {\n                    const claimFrameDetails = response.data\n                    // eslint-disable-next-line no-console\n                    console.log(claimFrameDetails)\n\n                    if(Object.keys(claimFrameDetails).length > 0) {\n                        this.topic = claimFrameDetails.topic\n                        this.subTopic = claimFrameDetails.subtopic\n                        this.template = claimFrameDetails.claimTemplate\n                        this.description = claimFrameDetails.description\n                        this.importance = makePercentage(claimFrameDetails.importance, 0)\n                        this.tableData = claimFrameDetails.components\n                        this.epestemic = claimFrameDetails.epistemic\n                        this.sentiment = claimFrameDetails.sentiment\n                        this.system = claimFrameDetails.system\n                        this.dateTime = getDateString(claimFrameDetails.dates[0])\n\n                        for (const component of claimFrameDetails.components) {\n                            if(component.propertyName === 'xVariable') {\n                                for (const propComponent of component.values) {\n                                    let tempXVar = {}\n\n                                    tempXVar[TABLEFIELDMAPPING.names] = propComponent.componentName\n                                    tempXVar[TABLEFIELDMAPPING.id] = propComponent.componentId\n                                    tempXVar[TABLEFIELDMAPPING.types] = propComponent.componentTypes\n                                    tempXVar[TABLEFIELDMAPPING.provenance] = propComponent.componentProvenance\n                                    tempXVar[TABLEFIELDMAPPING.ke] = propComponent.componentKE\n\n                                    this.xVaribleData.push(tempXVar)\n                                }\n                            } else if(component.propertyName === 'claimer') {\n                                for (const propComponent of component.values) {\n                                    let tempClaimer = {}\n\n                                    tempClaimer[TABLEFIELDMAPPING.category] = 'Claimer'\n                                    tempClaimer[TABLEFIELDMAPPING.names] = propComponent.componentName\n                                    tempClaimer[TABLEFIELDMAPPING.id] = propComponent.componentId\n                                    tempClaimer[TABLEFIELDMAPPING.types] = propComponent.componentTypes\n                                    tempClaimer[TABLEFIELDMAPPING.provenance] = propComponent.componentProvenance\n                                    tempClaimer[TABLEFIELDMAPPING.ke] = getId(propComponent.componentKE)\n\n                                    if(this.primaryHeaderData[TABLEFIELDMAPPING.claimerList] == undefined) {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.claimerList] = [propComponent.componentName]\n                                    } else {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.claimerList].push(propComponent.componentName)\n                                    }\n\n                                    this.claimerData.push(tempClaimer)\n                                }\n                            } else if(component.propertyName === 'claimerAffiliation') {\n                                for (const propComponent of component.values) {\n                                    let tempClaimerAff = {}\n\n                                    tempClaimerAff[TABLEFIELDMAPPING.category] = 'Claimer Affiliation'\n                                    tempClaimerAff[TABLEFIELDMAPPING.names] = propComponent.componentName\n                                    tempClaimerAff[TABLEFIELDMAPPING.id] = propComponent.componentId\n                                    tempClaimerAff[TABLEFIELDMAPPING.types] = propComponent.componentTypes\n                                    tempClaimerAff[TABLEFIELDMAPPING.provenance] = propComponent.componentProvenance\n                                    tempClaimerAff[TABLEFIELDMAPPING.ke] = getId(propComponent.componentKE)\n\n                                    if(this.primaryHeaderData[TABLEFIELDMAPPING.affiliation] == undefined) {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.affiliation] = [propComponent.componentName]\n                                    } else {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.affiliation].push(propComponent.componentName)\n                                    }\n\n                                    this.claimerAffilationData.push(tempClaimerAff)\n                                }\n                            } else if(component.propertyName === 'claimLocation') {\n                                this.location = component.values[0].componentName\n                            }\n                        }\n\n                        for (const tempProvenance of claimFrameDetails.provenances) {\n                            if(tempProvenance.propertyName === 'associatedKEs') {\n                                for (const provArray of tempProvenance.values) {\n                                    if(this.primaryHeaderData[TABLEFIELDMAPPING.variableList] == undefined) {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.variableList] = []\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.variableList].push(getId(provArray.keId))\n                                    } else {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.variableList].push(getId(provArray.keId))\n                                    }\n                                }\n                            } else if(tempProvenance.propertyName === 'claimSemantics') {\n                                for (const provArray of tempProvenance.values) {\n                                    if(this.primaryHeaderData[TABLEFIELDMAPPING.semantics] == undefined) {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.semantics] = []\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.semantics].push(getId(provArray.keId))\n                                    } else {\n                                        this.primaryHeaderData[TABLEFIELDMAPPING.semantics].push(getId(provArray.keId))\n                                    }\n                                }\n                            }\n                        }\n\n                        let secondaryData = this.claimerData;\n                        secondaryData = secondaryData.concat(this.claimerAffilationData);\n                        this.primaryHeaderData[TABLEFIELDMAPPING.entityList] = claimFrameDetails.sourceDocument.id\n\n                        this.primaryHeaderData[TABLEFIELDMAPPING.documentList] = secondaryData;\n\n                        // this.provenanceData = secondaryData\n                        this.provenanceData = [this.primaryHeaderData];\n\n                        // eslint-disable-next-line no-console\n                        console.log(this.primaryHeaderData)\n\n                        for (const relatedClaims of claimFrameDetails.relations) {\n                            if(relatedClaims.propertyName == 'identicalClaims') {\n                                for (const relatedValues of relatedClaims.values) {\n                                    let tempDupClaim = {}\n\n                                    this.dupClaimTopic = relatedValues.topic\n                                    this.dupClaimSubtopic = relatedValues.subtopic\n                                    this.dupClaimTemplate = relatedValues.claimTemplate\n\n                                    tempDupClaim[TABLEFIELDMAPPING.headline] = relatedValues.description\n                                    tempDupClaim[TABLEFIELDMAPPING.variableList] = 'X'\n                                    tempDupClaim[TABLEFIELDMAPPING.location] = 'place'\n                                    tempDupClaim[TABLEFIELDMAPPING.percentage] = 'important'\n                                    tempDupClaim[TABLEFIELDMAPPING.dates] = 'D'\n\n                                    this.dupClaimsData.push(tempDupClaim)\n                                }\n                            } else if(relatedClaims.propertyName == 'supportingClaims') {\n                                for (const relatedValues of relatedClaims.values) {\n                                    let tempSuppClaim = {}\n\n                                    this.suppClaimTopic = relatedValues.topic\n                                    this.suppClaimSubtopic = relatedValues.subtopic\n                                    this.suppClaimTemplate = relatedValues.claimTemplate\n\n                                    tempSuppClaim[TABLEFIELDMAPPING.headline] = relatedValues.description\n                                    tempSuppClaim[TABLEFIELDMAPPING.variableList] = 'X'\n                                    tempSuppClaim[TABLEFIELDMAPPING.location] = 'place'\n                                    tempSuppClaim[TABLEFIELDMAPPING.percentage] = 'important'\n                                    tempSuppClaim[TABLEFIELDMAPPING.dates] = 'd'\n\n                                    this.suppClaimsData.push(tempSuppClaim)\n                                }\n                            } else if(relatedClaims.propertyName == 'relatedClaims') {\n                                for (const relatedValues of relatedClaims.values) {\n                                    let tempRelClaim = {}\n\n                                    this.relClaimTopic = relatedValues.topic\n                                    this.relClaimSubtopic = relatedValues.subtopic\n                                    this.relClaimTemplate = relatedValues.claimTemplate\n\n                                    tempRelClaim[TABLEFIELDMAPPING.headline] = relatedValues.description\n                                    tempRelClaim[TABLEFIELDMAPPING.variableList] = 'X'\n                                    tempRelClaim[TABLEFIELDMAPPING.location] = 'place'\n                                    tempRelClaim[TABLEFIELDMAPPING.percentage] = 'important'\n                                    tempRelClaim[TABLEFIELDMAPPING.dates] = 'd'\n\n                                    this.relClaimsData.push(tempRelClaim)\n                                }\n                            }\n                        }\n\n                    } else {\n                        this.statusMessage = this.NODATAMESSAGE;\n                        this.loading = false;\n                    }\n                })\n            },\n            buildXVarTableConfiguration() {\n                return {\n                    tableSettings: new TableSettings(TABLEFIELDMAPPING.id, false, 'X-varible', '', false, false, false, false, false, TABLEFIELDMAPPING.percentage, true),\n                    primaryHeaders: [\n                        new HeaderConfig('Name', 'start', true, TABLEFIELDMAPPING.names),\n                        new HeaderConfig('Identity', 'start', true, TABLEFIELDMAPPING.id),\n                        new HeaderConfig('Type', 'start', true, TABLEFIELDMAPPING.types),\n                        new HeaderConfig('Provenance', 'start', true, TABLEFIELDMAPPING.provenance),\n                        new HeaderConfig('KE', 'start', true, TABLEFIELDMAPPING.ke)\n                    ]\n                };\n            },\n            buildProvenanceTableConfiguration() {\n                // Use primarery and secondary headers format the data for the secondary headers.\n                return {\n                    tableSettings: new TableSettings(TABLEFIELDMAPPING.id, true, 'Provenance', '', false, false, false, false, false, TABLEFIELDMAPPING.percentage, true),\n                    primaryHeaders: [\n                        new HeaderConfig('Claimer', 'start', true, TABLEFIELDMAPPING.claimerList),\n                        new HeaderConfig('Claimer Affiliation', 'start', true, TABLEFIELDMAPPING.affiliation),\n                        new HeaderConfig('Source', 'start', true, TABLEFIELDMAPPING.entityList),\n                        new HeaderConfig('Associated KE', 'start', true, TABLEFIELDMAPPING.variableList),\n                        new HeaderConfig('Claim Semantics', 'start', true, TABLEFIELDMAPPING.semantics),\n                        new HeaderConfig('', 'center', false, 'data-table-expand')\n                    ],\n                    secondaryHeaders: {\n                        expanded: new SecondaryExpand('', TABLEFIELDMAPPING.documentList,\n                            [\n                                new HeaderConfig('Component', 'start', false, TABLEFIELDMAPPING.category),\n                                new HeaderConfig('Name', 'start', false, TABLEFIELDMAPPING.names),\n                                new HeaderConfig('Identity', 'start', false, TABLEFIELDMAPPING.id),\n                                new HeaderConfig('Type', 'start', false, TABLEFIELDMAPPING.types),\n                                new HeaderConfig('Provenance', 'start', false, TABLEFIELDMAPPING.provenance),\n                                new HeaderConfig('KE', 'start', false, TABLEFIELDMAPPING.ke)\n                            ]\n                        )\n                    }\n                };\n            },\n            buildRelatedClaimTableConfiguration(relationship, topic, subtopic, template) {\n                return {\n                    tableSettings: new TableSettings(TABLEFIELDMAPPING.id, false, relationship, topic + ' - ' + subtopic + ' - ' + template, false, false, false, false, false, TABLEFIELDMAPPING.percentage, true),\n                    primaryHeaders: [\n                        new HeaderConfig('Description', 'start', true, TABLEFIELDMAPPING.headline),\n                        new HeaderConfig('X-variable', 'start', true, TABLEFIELDMAPPING.variableList),\n                        new HeaderConfig('Location', 'start', true, TABLEFIELDMAPPING.location),\n                        new HeaderConfig('Importance', 'start', true, TABLEFIELDMAPPING.percentage),\n                        new HeaderConfig('Date:Time', 'start', true, TABLEFIELDMAPPING.dates)\n                    ]\n                };\n            }\n        },\n    }\n</script>\n"]}]}