{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/DataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/DataTable.vue","mtime":1641326767933},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"DataTable.vue","sourceRoot":"src/components","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div>\n        <div class=\"element-list-header\">\n            <div v-if=\"tableConfiguration.tableSettings.tableHeading && tableConfiguration.tableSettings.tableDescription\"\n                 class=\"page-header-left\">\n                <span class=\"bold-text\">{{tableConfiguration.tableSettings.tableHeading}}</span>\n                <span class=\"space-description-left \">{{tableConfiguration.tableSettings.tableDescription}}</span>\n            </div>\n            <div v-else class=\"page-header-left\">\n                <span v-if=\"tableConfiguration.tableSettings.tableHeading\" class=\"bold-text\">{{tableConfiguration.tableSettings.tableHeading}}</span>\n                <span v-if=\"tableConfiguration.tableSettings.tableDescription\">{{tableConfiguration.tableSettings.tableDescription}}</span>\n            </div>\n\n            <!-- Role Filter -->\n            <div v-if=\"tableConfiguration.tableSettings.rowfilter\" class=\"page-header-right\">\n                <span v-for=\"role in claimsGetFilterData(data)\" :key=\"role\">\n                    <button :class=\"claimsSetFilterClass(role)\" @click=\"claimsSetHideRowsList(role)\">\n                        {{ role }}\n                    </button>\n                </span>\n            </div>\n\n            <div class=\"page-header-right\">\n                <div class=\"small-header-text\">{{paginationText}}\n                    <InfoTooltip :message=\"tooltipMessage\"></InfoTooltip>\n                </div>\n                <div v-if=\"tableConfiguration.tableSettings.showToggleIcon\" class=\"icon-wrapper-div\"><v-icon class=\"table-header-icon\" @click=\"$emit('toggleView')\">mdi-view-grid</v-icon></div>\n                <div v-if=\"tableConfiguration.tableSettings.showNetworkIcon\" class=\"icon-wrapper-div\"><v-icon class=\"table-header-icon\">mdi-graphql</v-icon></div>\n            </div>\n        </div>\n        <div v-if=\"!hideData\">\n            <div v-if=\"tableConfiguration.tableSettings.hideableColumns && this.hiddenHeaders.length > 0\" class=\"hideable-column-header\">\n                <span class=\"bold-text\">Filtered Columns: </span>\n                <div v-for=\"col in this.hiddenHeaders\" :key=\"col\">\n                    <button class=\"filter-pill-on\" @click=\"showColumn(col)\">\n                        {{ col }}\n                        <v-icon class=\"show-icon light-icon-button\">mdi-close-circle-outline</v-icon>\n                    </button>\n                </div>\n                <span @click=\"resetColumn()\" style=\"cursor: pointer;\"> <u>reset</u> </span>\n            </div>\n            <v-data-table\n                ref=\"data_table\"\n                :headers=\"tableConfiguration.primaryHeaders\"\n                :items=\"data\"\n                :single-expand=\"singleExpand\"\n                :expanded.sync=\"expanded\"\n                :show-expand=\"tableConfiguration.tableSettings.expand\"\n                :item-key=\"tableConfiguration.tableSettings.rowKey\"\n                :item-class=\"setItemClass\"\n                :sort-by=customSortBy\n                :sort-desc=customSortDesc\n                :custom-sort=\"customSort\"\n                :page.sync=\"page\"\n                :items-per-page=\"itemsPerPage\"\n                @current-items=\"$emit('currentItems', $event)\"\n                @click:row=\"$emit('updateItem', $event)\"\n                @item-expanded=\"$emit('updateItem', $event.item)\"\n                @pagination=\"updateHeaderPagination($event)\"\n                hide-default-footer\n                :hide-default-header=true\n                :loading=loading\n                :no-data-text=\"statusMessage ? statusMessage : NODATAMESSAGE\"\n                :loading-text=\"LOADINGMESSAGE\"\n            >\n\n                <template v-slot:header=\"{ props:{ headers } } \">\n                    <thead v-if=\"true\">\n                        <tr>\n                            <th v-for=\"(header) in headers\"\n                                scope=\"col\"\n                                :key=\"header.value\"\n                                class=\"text-start sortable\"\n                                v-bind:style=\"'width: ' + header.width + '; min-width: ' + header.width\"\n                            >\n                                <span v-if=\"!hiddenHeaders.includes(header.text) && header.sortable\">\n                                    {{ header.text }}\n                                    <v-icon\n                                        @click=\"sortUpdate(data, header.value, customSortDesc)\"\n                                        :class=\"sortIconClass(header.value)\"\n                                     >\n                                        {{ customSortBy === header.value ? 'mdi-arrow-down' : 'mdi-sort' }}\n                                     </v-icon>\n                                    <v-icon v-if=\"header.hideable\" class=\"hide-icon light-icon-button\" @click=\"hideColumn(header.text)\">mdi-eye-off-outline</v-icon>\n                                </span>\n                            </th>\n                        </tr>\n                    </thead>\n                </template>\n\n                <template v-slot:item=\"{ item, index, headers, expand, isExpanded }\">\n                    <tr :class=\"setItemClass(item)\"\n                        @mouseover=\"item[TABLEFIELDMAPPING.highlight] = turnHighlightOn(item, true)\"\n                        @mouseleave=\"item[TABLEFIELDMAPPING.highlight] = turnHighlightOn(item, false)\"\n                        @click.prevent=\"updateOnClick(item)\"\n                        :style=\"claimsShowHideRows(item)\"\n                    >\n                        <td v-for=\"(header, hIndex) in headers\" :key=\"hIndex\" :class=\"'text-'+header.align\">\n                            <div v-if=\"!hiddenHeaders.includes(header.text)\">\n                                <div v-if=\"header.value === TABLEFIELDMAPPING.headline\" :class=\"item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id ? 'row-width-description-wrapper' : ''\">\n                                    <!--Table row highlighted header link - The slot for headline is not dynamic. Currently it is expecting a field called 'headline' in order for this template to work. The dataset will need to be modified to contain this field -->\n                                    <router-link\n                                            :class=\"isRowExpanded(item) ? 'table-row-open' : 'table-row-close'\"\n                                            @click.native=\"saveSelectedItem(item)\"\n                                                    :to=\"buildRoute(\n                                                    item[tableConfiguration.tableSettings.rowKey],\n                                                    item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id ||\n                                                    item[TABLEFIELDMAPPING.category] === DATATYPES.hypothesis.id ?\n                                                     VUEROUTES.hypothesis: item[TABLEFIELDMAPPING.category] === DATATYPES.topic.id ? VUEROUTES.claims: VUEROUTES.cluster,\n                                                    item[TABLEFIELDMAPPING.clusterCategory] === item[TABLEFIELDMAPPING.category] &&\n                                                    item[TABLEFIELDMAPPING.category] === DATATYPES.eventType.id ?\n                                                    item[TABLEFIELDMAPPING.clusterCategory] :\n                                                    item[TABLEFIELDMAPPING.category] && item[TABLEFIELDMAPPING.category] !== DATATYPES.sin.id &&\n                                                    item[TABLEFIELDMAPPING.category] !== DATATYPES.hypothesis.id ?\n                                                    item[TABLEFIELDMAPPING.category] : '',\n                                                    item[TABLEFIELDMAPPING.route] ? setRouteParams(item[TABLEFIELDMAPPING.route]) : routeParameters)\"\n                                    >\n                                        {{item.headline}}\n                                    </router-link>\n                                    <!--Compensate for the space that the compare icon takes up-->\n                                    <div v-if=\"item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id && !item[TABLEFIELDMAPPING.highlight]\" class=\"space-div\"></div>\n                                    <div v-else-if=\"item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id && item[TABLEFIELDMAPPING.highlight]\">\n                                        <v-icon :class=\"!item[TABLEFIELDMAPPING.compare] ? 'table-header-icon' : 'table-header-icon-selected'\">\n                                            mdi-compare\n                                        </v-icon>\n                                    </div>\n\n                                    <!--Table row secondary header caption-->\n                                    <div class=\"info-text-wrapper\"\n                                        v-if=\"tableConfiguration.secondaryHeaders && tableConfiguration.secondaryHeaders.caption\">\n                                        <div>\n                                            <span v-for=\"(entry, index) in getCaptionValues(tableConfiguration.secondaryHeaders.caption, item)\"\n                                                :key=\"index\">\n                                                <span v-if=\"entry.count > 0\">\n                                                    <span v-if=\"index > 0\" class=\"pipe-spacing\">|</span>\n                                                    <span>{{entry.id}} <span v-if=\"entry.count > 1\">({{entry.count}})</span></span>\n                                                </span>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div v-if=\"tableConfiguration.secondaryHeaders && loadSecondaryHeaders(item)\">\n                                        <v-progress-linear indeterminate></v-progress-linear>\n                                    </div>\n                                </div>\n                                <div v-else-if=\"header.value === TABLEFIELDMAPPING.id\">\n                                    <!--Table row highlighted link-->\n                                    <router-link\n                                        :class=\"isRowExpanded(item) ? 'table-row-open' : 'table-row-close'\"\n                                        @click.native=\"saveSelectedItem(item)\"\n                                        :to=\"buildRoute(\n                                            item[tableConfiguration.tableSettings.rowKey],\n                                            VUEROUTES.cluster,\n                                            item[TABLEFIELDMAPPING.category] ? item[TABLEFIELDMAPPING.category] : '',\n                                            item[TABLEFIELDMAPPING.route] ? setRouteParams(item[TABLEFIELDMAPPING.route]) : '')\"\n                                    >\n                                        {{item[TABLEFIELDMAPPING.id]}}\n                                    </router-link>\n                                </div>\n                                <div v-else-if=\"header.value === TABLEFIELDMAPPING.prototypeId\">\n                                    <!--Table row highlighted link-->\n                                    <router-link\n                                        :class=\"isRowExpanded(item) ? 'table-row-open' : 'table-row-close'\"\n                                        @click.native=\"saveSelectedItem(item)\"\n                                        :to=\"buildRoute(\n                                            item[TABLEFIELDMAPPING.prototypeUri] ? item[TABLEFIELDMAPPING.prototypeUri] : '',\n                                            VUEROUTES.element,\n                                            item[TABLEFIELDMAPPING.category] ? item[TABLEFIELDMAPPING.category] : '',\n                                            item[TABLEFIELDMAPPING.route] ? setRouteParams(item[TABLEFIELDMAPPING.route]) : '')\"\n                                    >\n                                        {{item[TABLEFIELDMAPPING.prototypeId] ? item[TABLEFIELDMAPPING.prototypeId] : ''}}\n                                    </router-link>\n                                </div>\n                                <div v-else-if=\"header.value === TABLEFIELDMAPPING.types || header.value === TABLEFIELDMAPPING.affiliation || header.value === TABLEFIELDMAPPING.claimerList ||  header.value === TABLEFIELDMAPPING.semantics || header.value === TABLEFIELDMAPPING.variableList\">\n                                    <!--Table row types, variableList, or possibly any other simple array-->\n                                    <div class=\"kb-description-wrapper\">\n                                        <span v-for=\"(value, vIndex) in item[header.value]\" :key=\"vIndex\">\n                                            {{value}}\n                                        </span>\n                                    </div>\n                                </div>\n                                <div v-else-if=\"header.value === TABLEFIELDMAPPING.entityCount\">\n                                    <span v-if=\"item[TABLEFIELDMAPPING.prototype]\">\n                                        {{item[TABLEFIELDMAPPING.prototype][TABLEFIELDMAPPING.entityCount]}}\n                                    </span>\n                                    <span v-else>\n                                        {{item[TABLEFIELDMAPPING.entityCount]}}\n                                    </span>\n                                </div>\n                                <!-- TODO: Add back in once we decide to display confidences-->\n                                <!-- <div v-else-if=\"header.value === TABLEFIELDMAPPING.confidenceSum\">\n                                    &lt;!&ndash;Table row, confidence column, method to calculate the average confidence for all entities&ndash;&gt;\n                                    {{getAverageConfidence(item[TABLEFIELDMAPPING.confidenceSum], item[TABLEFIELDMAPPING.entityCount])}}\n                                </div>-->\n                                <div v-else-if=\"(item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id) && getRoleHeaders().includes(header.value)\" class=\"kb-description-wrapper\">\n                                    <div class=\"space-text\" :ref=\"'sin_data_div' + header.value\" v-for=\"(value, vIndex) in getRowValues(item, header.value)\" :key=\"vIndex\">\n                                        <span v-if=\"value[TABLEFIELDMAPPING.colorText]\" :class=\"value[TABLEFIELDMAPPING.colorText] ? 'compare-text-color' : ''\">\n                                            <span>{{value.text}}</span>\n                                        </span>\n                                        <span v-else>{{value.text}}</span>\n                                    </div>\n                                </div>\n                                <div v-else-if=\"header.value === TABLEFIELDMAPPING.dates\" class=\"table-date-div\">\n                                    <div v-for=\"(date, dIndex) in item[header.value]\" :key=\"dIndex\">\n                                        {{date}}\n                                    </div>\n                                </div>\n                                <div v-else-if=\"header.value === 'data-table-expand' && expansionItemExists(item)\">\n                                    <v-icon :class=\"setExpandedClass(isExpanded)\" @click=\"expand(!isExpanded)\">mdi-chevron-down</v-icon>\n                                </div>\n                                <div v-else-if=\"header.value === 'data-table-anchor'\">\n                                    <v-icon class=\"dark-icon-button\" @click=\"$emit('anchorScroll', item[TABLEFIELDMAPPING.id])\" title=\"go to Event Details\">mdi-filter-variant</v-icon>\n                                </div>\n                                <div v-else>\n                                    {{item[header.value]}}<span v-if=\"header.value === TABLEFIELDMAPPING.percentage && !isNaN(item[header.value])\">%</span>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n            </template>\n            <!--Table row expanded -->\n            <template v-slot:expanded-item=\"{ item }\" v-if=\"tableConfiguration.secondaryHeaders && tableConfiguration.secondaryHeaders.expanded\">\n                <td :class=\"'align-top'\" :set=\"entry = tableConfiguration.secondaryHeaders.expanded\" :colspan=\"tableConfiguration.primaryHeaders.length\"\n                :style=\"claimsShowHideRows(item)\">\n                    <SimpleTable :headers=\"entry.headers\" :route=\"VUEROUTES.cluster\" :data=\n                            \"item[entry.prototype] ?\n                            item[entry.prototype][entry.field] : item[entry.field]\"\n                    ></SimpleTable>\n                </td>\n            </template>\n            <template v-slot:footer=\"{ item }\" v-if=\"!hideFooter\">\n                <div class=\"pagination-footer\">\n                    <div v-if=\"tableConfiguration.tableSettings.showResultsPerPage\" class=\"pagination-footer-text\">Results per page:\n                            <SelectDropdown :options=\"itemsPerPageArray\" :selectedOption=\"paging ? paging.itemsPerPage : null\"\n                                            @selectDropdownChange=\"updateItemsPerPage($event)\"\n                            >\n                            </SelectDropdown>\n                    </div>\n                    <div v-else class=\"pagination-footer-text\"></div><!--Placeholder for footer alignment-->\n                    <v-pagination\n                            class=\"pagination-component\"\n                            v-model=\"page\"\n                            :length=\"pageCount\"\n                            :value=\"selectedPage\"\n                            total-visible=\"10\"\n                            @input=\"updatePageSelection($event)\"\n                    ></v-pagination>\n                    <div class=\"pagination-footer-text-end\">{{paginationText}}\n                        <InfoTooltip :message=\"tooltipMessage\"></InfoTooltip>\n                    </div>\n                </div>\n            </template>\n        </v-data-table>\n        </div>\n    </div>\n</template>\n\n<script> \n    import SelectDropdown from '@/components/SelectDropdown';\n    import SimpleTable from '@/components/SimpleTable';\n    import InfoTooltip from '@/components/InfoTooltip';\n    import DataDisplayMixin from '@/mixins/DataDisplayMixin';\n    import {mapMutations} from 'vuex';\n    import {\n        DATADISPLAY,\n        DATATYPES,\n        ERETYPES,\n        VUEROUTES,\n        TABLEFIELDMAPPING,\n        LOADINGMESSAGE,\n        NODATAMESSAGE,\n        PARAMETERNAMES,\n        prettyPluralize,\n        upperFirstLetter,\n        buildRoute\n    } from '../utils';\n\n    export default {\n        name: 'DataTable',\n        components: {SelectDropdown, SimpleTable, InfoTooltip},\n        mixins: [DataDisplayMixin],\n        props: {\n            tableConfiguration: Object,\n            statusMessage: String,\n            routeParameters: Array,\n            hideData: {\n                type: Boolean,\n                default: false,\n                required: false\n            }\n        },\n        data: () => ({\n            expanded: [],\n            singleExpand: false,\n            tooltipMessage: 'Data limit 500',\n            expandedClass: 'v-icon notranslate v-data-table__expand-icon v-icon--link mdi mdi-chevron-down theme--light',\n            hiddenHeaders: [],\n            customSortBy: 'headline',\n            customSortDesc: false,\n            hiddenRoles: new Set(),\n        }),\n        created() {\n            this.VUEROUTES = VUEROUTES;\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.LOADINGMESSAGE = LOADINGMESSAGE;\n            this.NODATAMESSAGE = NODATAMESSAGE;\n            this.DATADISPLAY = DATADISPLAY;\n            this.DATATYPES = DATATYPES;\n            this.buildRoute = buildRoute;\n            this.customSortBy = this.tableConfiguration.tableSettings.defaultSortBy;\n            this.customSortDesc = this.tableConfiguration.tableSettings.defaultSortDesc;\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection', 'updateHypothesisSelection']),\n            //TODO: Add back in once we decide to display confidences\n            /*  getAverageConfidence(confidence, count) {\n                let average = confidence / count;\n                return average.toPrecision(2);\n            },*/\n            showColumn(headerValue) {\n                let newArr = [];\n                for(let column of this.hiddenHeaders) {\n                    if (column !== headerValue) {\n                        newArr.push(column)\n                    }\n                }\n                this.hiddenHeaders = newArr;\n            },\n            hideColumn(headerValue) {\n                this.hiddenHeaders.push(headerValue);\n            },\n            resetColumn() {\n                this.hiddenHeaders = [];\n            },\n            updateCustomSort (headerValue, isDesc) {\n                this.customSortBy = headerValue;\n                this.customSortDesc = !isDesc;\n            },\n            sortIconClass(headerValue) {\n                if (headerValue === this.customSortBy)\n                    return this.customSortDesc ? 'arrow-icon-up' : 'arrow-icon-down';\n                else\n                    return 'arrow-icon-up light-icon-button'\n            },\n            sortUpdate(data, index, sortDesc) {\n                this.customSort(data, [index], [sortDesc]);\n                this.updateCustomSort(index, sortDesc);\n            },\n            customSort(items, index, isDesc) {\n                items.sort((a, b) => {\n                    //if value is from a role header column\n                    if (a[TABLEFIELDMAPPING.category] === DATATYPES.sin.id && this.getRoleHeaders().length > 0 && this.getRoleHeaders().includes(index[0])) {\n                        //sorts object text values or regular string values\n                        let aValues = this.getRowValues(a, index[0]);\n                        let bValues = this.getRowValues(b, index[0]);\n\n                        aValues = aValues === null ? '' : aValues;\n                        bValues = bValues === null ? '' : bValues;\n\n                        aValues = typeof aValues[0] === 'object' ? [...aValues.map(av => av.text)].join(',').toLowerCase() : aValues.join(',').toLowerCase();\n                        bValues = typeof bValues[0] === 'object' ? [...bValues.map(av => av.text)].join(',').toLowerCase() : bValues.join(',').toLowerCase();\n\n                        if (!isDesc[0]) {\n                            return a[TABLEFIELDMAPPING.roles].includes(index[0]) && b[TABLEFIELDMAPPING.roles].includes(index[0]) ?\n                                aValues.localeCompare(bValues) :\n                                a[TABLEFIELDMAPPING.roles].includes(index[0]) ? 1 : -1;\n                        } else {\n                            return a[TABLEFIELDMAPPING.roles].includes(index[0]) && b[TABLEFIELDMAPPING.roles].includes(index[0]) ?\n                                bValues.localeCompare(aValues) :\n                                a[TABLEFIELDMAPPING.roles].includes(index[0]) ? -1 : 1;\n                        }\n                    }\n                    //if value is a number\n                    else if (typeof a[index] === 'number' || typeof b[index] === 'number') {\n                        return !isDesc[0] ? a[index] - b[index] : b[index] - a[index];\n                    }\n                    //if value contains format of 'title: number'\n                    else if ((typeof a[index] === 'string' && a[index].match('\\\\w+:\\\\s[0-9]+')) || (typeof b[index] === 'string' && b[index].match('\\\\w+:\\\\s[0-9]+'))) {\n                        const aValue = a[index].split(' ')[1];\n                        const bValue = b[index].split(' ')[1];\n\n                        return !isDesc[0] ? aValue - bValue : bValue - aValue;\n                    }\n                    //if value is a string or array\n                    else if (typeof a[index] !== 'undefined') {\n                        a[index] = a[index] === null ? '' : a[index];\n                        b[index] = b[index] === null ? '' : b[index];\n\n                        const aValue = Array.isArray(a[index]) ? a[index].join(',').toLowerCase() : a[index].toLowerCase();\n                        const bValue = Array.isArray(b[index]) ? b[index].join(',').toLowerCase() : b[index].toLowerCase();\n                        return !isDesc[0] ? aValue.localeCompare(bValue.toLowerCase()) : bValue.toLowerCase().localeCompare(aValue.toLowerCase());\n                    }\n                });\n\n                return items;\n            },\n            isRowExpanded(row) {\n                let isExpanded = false;\n                for (let i = 0; i < this.expanded.length; i++) {\n                    isExpanded = this.expanded[i][this.tableConfiguration.tableSettings.rowKey] === row[this.tableConfiguration.tableSettings.rowKey];\n                    if(isExpanded) {\n                        break;\n                    }\n                }\n                return isExpanded;\n            },\n            loadSecondaryHeaders(item) {\n                let secondary = this.tableConfiguration.secondaryHeaders.caption;\n                return (item[secondary.prototype] && Object.keys(item[secondary.prototype]).length === 0) || (item[secondary.field] && Object.keys(item[secondary.field]).length === 0)\n            },\n            getCaptionValues(captionObj, item) {\n                let captions = [];\n                const entries = item[captionObj.prototype] ? item[captionObj.prototype][captionObj.field] : item[captionObj.field];\n                if(entries) {\n                    const formattedCaptions = entries.flatMap(entry => entry[captionObj.key])\n                        .reduce((sums,entry,index) => {\n                            // TODO: make this less complicated. Seems like when entries[index][nodeCount] is undefined is when sums[entry] || 0 should be used.\n                            // TODO: seems like index would only reference the specified entry when there is only 1 object in captionObj.key array\n                            let total = entries[index] && entries[index][TABLEFIELDMAPPING.nodeCount] ? entries[index][TABLEFIELDMAPPING.nodeCount] :\n                                entries[index] && [null, 0].includes(entries[index][TABLEFIELDMAPPING.nodeCount]) ? 0 :\n                                    (sums[entry] && sums[entry].count || 0) + 1;\n\n                            sums[entry] = {id: total === 1 ? upperFirstLetter(entry) : prettyPluralize(entry), count: total};\n                            return sums;\n                        }, {});\n\n                    //Sorted based on visual preference - for hypotheses data\n                    if(!item[captionObj.prototype]) {\n                        for (const type of ERETYPES)  {\n                            if(formattedCaptions[type]) {\n                                captions.push(formattedCaptions[type]);\n                            }\n                        }\n                    } //Sorted based on data order\n                    else {\n                        captions = Object.values(formattedCaptions);\n                    }\n                }\n                return captions;\n            },\n            setItemClass(item) {\n                return item[TABLEFIELDMAPPING.highlight] ? 'highlight-added' : '';\n            },\n            turnHighlightOn(item, toggle) {\n                let highlight = item[TABLEFIELDMAPPING.highlight];\n                if(item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id) {\n                    highlight = !item[TABLEFIELDMAPPING.compare] && toggle || item[TABLEFIELDMAPPING.compare] && item[TABLEFIELDMAPPING.highlight];\n                }\n                return highlight;\n            },\n            updateOnClick(item) {\n                if(item[TABLEFIELDMAPPING.category] === DATATYPES.sin.id) {\n                    this.$emit('activateCompare', {item: item, type:this.tableConfiguration.tableSettings.tableHeading});\n                    this.updateHypothesisSelection(item);\n                }\n                else {\n                    this.$emit('updateItem', item);\n                }\n            },\n            setRouteParams(route) {\n                return [{key: PARAMETERNAMES.datasoure, value: route}];\n            },\n            saveSelectedItem(data) {\n                if(data[TABLEFIELDMAPPING.category] === DATATYPES.hypothesis.id) {\n                    this.updateHypothesisSelection(data);\n                }\n                else {\n                    this.updateNodeSelection(data);\n                }\n\n                //TODO: Figure out why this emit is not reaching the parent component\n                //this.$emit('updateItem', data)\n            },\n            setExpandedClass(isExpanded) {\n                return isExpanded ? this.expandedClass + ' v-data-table__expand-icon--active' : this.expandedClass;\n            },\n            statementHeaderExists() {\n                return !!this.tableConfiguration.primaryHeaders.find(h => h.value === TABLEFIELDMAPPING.statement);\n            },\n            getRoleHeaders() {\n                const indexStart = this.statementHeaderExists ? 2 : 1;\n                return this.tableConfiguration.primaryHeaders.slice(indexStart, -1).map(header => header.value);\n            },\n            getRowValues(item, header) {\n                let argumentsByRole = [];\n                if(header === TABLEFIELDMAPPING.dates) {\n                    for (const date of item[TABLEFIELDMAPPING.dates]) {\n                        if(date.hasOwnProperty(TABLEFIELDMAPPING.colorText)) {\n                            argumentsByRole.push(date);\n                        }\n                        else {\n                            argumentsByRole.push({text:date});\n                        }\n                    }\n                }\n                else {\n                    for (const cluster of item[TABLEFIELDMAPPING.clusterList]) {\n                        let argumentList = cluster.hasOwnProperty(TABLEFIELDMAPPING.prototype) ?\n                            cluster[TABLEFIELDMAPPING.prototype][TABLEFIELDMAPPING.entityList] :\n                            cluster[TABLEFIELDMAPPING.entityList];\n\n                        for (const argument of argumentList) {\n                            if (argument[TABLEFIELDMAPPING.roles] && argument[TABLEFIELDMAPPING.roles].includes(header)) {\n                                let argumentString = argument[TABLEFIELDMAPPING.headline] + ' ' + (argument.discrepancy || '') + ' - ';\n                                if(argument[TABLEFIELDMAPPING.resolvedType]) {\n                                    argumentString += argument[TABLEFIELDMAPPING.resolvedType];\n                                }\n                                else {\n                                    for (let [index, type] of argument[TABLEFIELDMAPPING.types].entries()) {\n                                        argumentString += argument[TABLEFIELDMAPPING.types].length > 1 && index < argument[TABLEFIELDMAPPING.types].length - 1 ?\n                                            type + ', ' : type;\n                                    }\n                                }\n                                //Check if the argument exists in the argumentsByRole before adding it\n                                if (argumentsByRole.length === 0 || argumentsByRole.find(a => a.text === argumentString) === undefined) {\n                                    if(argument[TABLEFIELDMAPPING.colorText]) {\n                                        argumentsByRole.push({[TABLEFIELDMAPPING.colorText]:argument[TABLEFIELDMAPPING.colorText], text:argumentString});\n                                    }\n                                    else {\n                                        argumentsByRole.push({text:argumentString})\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                return argumentsByRole;\n            },\n            expansionItemExists(item) {\n                let itemExists = false;\n                const expandConfig = this.tableConfiguration.secondaryHeaders.expanded;\n                if(this.tableConfiguration.secondaryHeaders && expandConfig) {\n                    const eItem = item[expandConfig.prototype] ? item[expandConfig.prototype][expandConfig.field] : item[expandConfig.field];\n                    itemExists = eItem && eItem.length > 0;\n                }\n                return itemExists;\n            },\n            claimsGetFilterData(data) {\n                let claimRoles = new Set();\n                if (data.length > 0) {\n                    for (const z of data) {\n                        this.claimsGetItemRoles(z).forEach(claimRoles.add, claimRoles);\n                    }\n                }\n                return [...claimRoles];\n            },\n            claimsSetFilterClass(role) {\n                return (this.hiddenRoles.has(role)) ? 'filter-pill-on' : 'filter-pill-off';\n            },\n            claimsSetHideRowsList(role) {\n                if (this.hiddenRoles.has(role)) {\n                    this.hiddenRoles.delete(role);\n                } else {\n                    this.hiddenRoles.add(role);\n                }\n                this.hiddenRoles = new Set(this.hiddenRoles);\n            },\n            claimsShowHideRows(item) {\n                let hideRow = false;\n                let itemRoles = new Set();\n                if (this.hiddenRoles.size > 0) {\n                    itemRoles = this.claimsGetItemRoles(item);\n                    if ([...this.hiddenRoles].every(elem => itemRoles.has(elem))) {\n                        hideRow = true;\n                    }\n                } else {\n                    hideRow = true;\n                }\n                return hideRow ? '' : 'display:none;';\n            },\n            claimsGetItemRoles(item) {\n                let itemRoles = new Set();\n                for (const entity of item['entities']) {\n                    for (const role of entity['roles']) {\n                        itemRoles.add(role);\n                    }\n                }\n                return itemRoles;\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .align-top {\n        vertical-align: top !important;\n        div {\n            padding: 10px;\n        }\n    }\n\n    .info-text-wrapper {\n        @include flex-row-nowrap;\n        min-width: 0;\n        div {\n            width: 480px;\n        }\n    }\n    \n    .table-row-operation {\n        @extend .row-heading;\n        @include no-text-decoration;\n        @extend .page-link;\n    }\n\n    .table-row-close {\n        font-size: 15px;\n        font-weight: bold;\n        text-decoration: none;\n        color: $theme-teal !important;\n    }\n\n    .table-row-open {\n        @extend .table-row-operation;\n        color: $theme-dark-offset !important;\n    }\n\n    .pipe-spacing {\n        margin: 0 6px;\n    }\n\n    .footer-page-selector{\n        margin-left: 4px;\n        max-width: 60px;\n        font-size: inherit;\n    }\n    .highlight-added{\n        text-decoration: none !important;\n        background-color: #aceed8a6 !important;\n    }\n\n    .space-description-left {\n        font-size: 13px;\n        margin-left: 6px;\n        color: $theme-break-line-color;\n    }\n\n    .compare-text-color {\n       color: #04a7b2 !important;\n    }\n\n    .space-text {\n        padding: 6px 0;\n    }\n\n    .space-div {\n        width: 24px;\n        height: 24px;\n    }\n\n    /************************************************************/\n    /*hideable columns styling*/\n    /************************************************************/\n\n    .filter-pill-on {\n        background-color: $background-pale-gold;\n        border: 2px #fdd195 solid;\n        color: $theme-primary-color;\n        padding: 1px 1px 1px 6px;\n        text-decoration: none;\n        margin: 4px;\n        cursor: pointer;\n        border-radius: 16px;\n        @include flex-row-nowrap;\n        align-items: center;\n        height: 25px;\n    }\n\n    .filter-pill-off {\n        background-color: white;\n        border: 2px #b1b5b5 solid;\n        color: $theme-primary-color;\n        padding: 1px 10px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius: 16px;\n        min-height: 30px;\n    }\n\n    .hideable-column-header {\n    @include flex-row-nowrap;\n    align-items: center;\n    }\n\n    .hideable-column-thead {\n    background-color: $theme-teal;\n    }\n\n    .table-column-hideable {\n        font-size: 25px;\n    }\n\n    .arrow-icon-down {\n        transform: rotate(180deg);\n        transition: all .3s ease;\n        color: white !important;\n        font-size: 20px !important;\n    }\n\n    .arrow-icon-up {\n        transform: rotate(0deg);\n        transition: all .3s ease;\n        color: white !important;\n        font-size: 20px !important;\n    }\n\n    .hide-icon {\n        color: white !important;\n        font-size: 20px !important;\n    }\n\n    .show-icon {\n        color: $theme-primary-color !important;\n        font-size: 20px !important;\n    }\n\n    .table-header-icon-selected {\n        color: #424040 !important;\n        padding: 0;\n        font-size: 30px;\n    }\n    .table-date-div {\n        width: 180px;\n    }\n\n</style>\n"]}]}