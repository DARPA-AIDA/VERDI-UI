{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityClusterDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityClusterDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7VEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIGJ1aWxkUm91dGUsIGZvcm1hdEVudGl0eUNsdXN0ZXIsCiAgICBnZXRTdHJpbmdWYWx1ZSwgSGVhZGVyQ29uZmlnfSBmcm9tICcuLi8uLi91dGlscyc7CmltcG9ydCBTaW1wbGVUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvU2ltcGxlVGFibGUnOwppbXBvcnQgRG9jdW1lbnRHcmlkIGZyb20gJ0AvY29tcG9uZW50cy9Eb2N1bWVudEdyaWQnOwppbXBvcnQgSW5mb1Rvb2x0aXAgZnJvbSAnQC9jb21wb25lbnRzL0luZm9Ub29sdGlwJzsKaW1wb3J0IEFQSSBmcm9tICcuLi8uLi9hcGknOwppbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4JzsKaW1wb3J0IHttYXBNdXRhdGlvbnN9IGZyb20gJ3Z1ZXgnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0NsdXN0ZXJEZXRhaWxzJywKICAgIGNvbXBvbmVudHM6IHtTaW1wbGVUYWJsZSwgRG9jdW1lbnRHcmlkLCBJbmZvVG9vbHRpcH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICAgIHNvcnQ6IHt9LAogICAgICAgIGNvbm5lY3Rpb25IZWFkZXJzOiBbXSwKICAgICAgICBlbGVtZW50SGVhZGVyczogW10sCiAgICAgICAgc3RhdHVzTWVzc2FnZTogJycsCiAgICAgICAgcm91dGVJZDogJycKICAgIH0pLAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLlRBQkxFRklFTERNQVBQSU5HID0gVEFCTEVGSUVMRE1BUFBJTkc7CiAgICAgICAgdGhpcy5WVUVST1VURVMgPSBWVUVST1VURVM7CiAgICAgICAgdGhpcy5nZXRTdHJpbmdWYWx1ZSA9IGdldFN0cmluZ1ZhbHVlOwogICAgICAgIHRoaXMuc29ydCA9IHtieTogVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmUsIGRlc2NlbmRpbmc6IGZhbHNlfSwKICAgICAgICB0aGlzLmNvbm5lY3Rpb25IZWFkZXJzID0gWwogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdDbHVzdGVyIElEJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmlkKSwKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnUm9sZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcucm9sZXMpLAogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdUeXBlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy50eXBlcykKICAgICAgICBdOwogICAgICAgIHRoaXMuZWxlbWVudEhlYWRlcnMgPSBbCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ05hbWVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLm5hbWVzKSwKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnSUQnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuaWQpLAogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdUeXBlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy50eXBlcykKICAgICAgICBdOwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwU3RhdGUoWydub2RlU2VsZWN0aW9uJywgJ2N1cnJlbnREYXRhU291cmNlJ10pLAogICAgICAgIGhlYWRpbmcoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmVdID8gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmhlYWRsaW5lXSA6CiAgICAgICAgICAgICAgICB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaWRdOwogICAgICAgIH0sCiAgICAgICAgcHJvdG90eXBlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZV0gfHwge307CiAgICAgICAgfSwKICAgICAgICBwcm90b3R5cGVJZCgpIHsKICAgICAgICAgICAgcmV0dXJuICB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcucHJvdG90eXBlSWRdIHx8ICcnOwogICAgICAgIH0sCiAgICAgICAgcm91dGVQYXRoKCkgewogICAgICAgICAgICByZXR1cm4gIGJ1aWxkUm91dGUoCiAgICAgICAgICAgICAgICB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcucHJvdG90eXBlVXJpXSwKICAgICAgICAgICAgICAgIHRoaXMuVlVFUk9VVEVTLmVsZW1lbnQsCiAgICAgICAgICAgICAgICAnZW50aXR5JwogICAgICAgICAgICApOwogICAgICAgIH0sCiAgICAgICAgZG9jdW1lbnRMaXN0KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmRvY3VtZW50TGlzdF07CiAgICAgICAgfSwKICAgICAgICByb3V0ZVBhcmFtcygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtczsKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcE11dGF0aW9ucyhbJ3VwZGF0ZU5vZGVTZWxlY3Rpb24nXSksCiAgICAgICAgZ2V0Q2x1c3RlckNvdW50KGFycmF5TmFtZSkgewogICAgICAgICAgICBsZXQgYXJyYXkgPSB0aGlzLnByb3RvdHlwZVthcnJheU5hbWVdOwogICAgICAgICAgICByZXR1cm4gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAnJzsKICAgICAgICB9LAogICAgICAgIGdldE5vZGVDb3VudChhcnJheU5hbWUpIHsKICAgICAgICAgICAgbGV0IGFycmF5ID0gdGhpcy5ub2RlU2VsZWN0aW9uW2FycmF5TmFtZV07CiAgICAgICAgICAgIHJldHVybiBhcnJheSA/IGFycmF5Lmxlbmd0aCA6ICcnOwogICAgICAgIH0sCiAgICAgICAgZ2V0Q2x1c3RlckNhdGVnb3J5KCkgewogICAgICAgICAgICBpZih0aGlzLnJvdXRlUGFyYW1zLmlkICE9PSB0aGlzLnJvdXRlSWQpIHsKICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaERhdGEoKTsKICAgICAgICAgICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiAnRW50aXR5JzsKICAgICAgICB9LAogICAgICAgIHJlZnJlc2hEYXRhKCkgewogICAgICAgICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICB0aGlzLnN0YXR1c01lc3NhZ2UgPSBMT0FESU5HTUVTU0FHRTsKCiAgICAgICAgICAgIEFQSS5nZXRFbnRpdHlDbHVzdGVyRGV0YWlscyhkZWNvZGVVUklDb21wb25lbnQodGhpcy5yb3V0ZVBhcmFtcy5pZCksIDEwKS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgT2JqZWN0LmtleXMocmVzcG9uc2UuZGF0YSkubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbihmb3JtYXRFbnRpdHlDbHVzdGVyKHJlc3BvbnNlLmRhdGEpKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXR1c01lc3NhZ2UgPSAnJzsKICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiBzd2FnZ2VyIHNlcnZlciBuZWVkcyB0byBpbmRpY2F0ZSBpZiBubyBkYXRhIGV4aXN0cwogICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuc3RhdHVzTWVzc2FnZSA9ICdObyByZXN1bHRzIGZvdW5kJzsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2Uuc3RhdHVzTWVzc2FnZSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzTWVzc2FnZSA9IHJlc3BvbnNlLnN0YXR1c01lc3NhZ2U7CiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVOb2RlU2VsZWN0aW9uKHt9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["EntityClusterDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EntityClusterDetails.vue","sourceRoot":"src/views/explore","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{heading}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getClusterCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(nodeSelection[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">Cluster ID: </span><span>{{nodeSelection[TABLEFIELDMAPPING.clusterUri]}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-label-spaced\">Prototype ID:\n                <router-link :to=\"routePath\" class=\"theme-color-text page-link\">\n                    {{prototypeId}}\n                </router-link >\n            </div>\n            <div v-if=\"prototype[TABLEFIELDMAPPING.eventList]\">\n                <div class=\"section-space\">\n                    <div class=\"kb-table-heading\">Events ({{getClusterCount(TABLEFIELDMAPPING.eventList)}})</div>\n                    <SimpleTable\n                            :headers=\"connectionHeaders\"\n                            :data=\"prototype[TABLEFIELDMAPPING.eventList]\"\n                            :loading=\"loading\"\n                            :statusMessage=\"statusMessage\"\n                            :route=\"VUEROUTES.cluster\"\n                    ></SimpleTable>\n                 </div>\n            </div>\n            <div v-if=\"prototype[TABLEFIELDMAPPING.relationList]\">\n                <div class=\"section-space\">\n                    <div class=\"kb-table-heading\">Relations ({{getClusterCount(TABLEFIELDMAPPING.relationList)}})</div>\n                    <SimpleTable\n                            :headers=\"connectionHeaders\"\n                            :data=\"prototype[TABLEFIELDMAPPING.relationList]\"\n                            :loading=\"loading\"\n                            :statusMessage=\"statusMessage\"\n                            :route=\"VUEROUTES.cluster\"\n                    ></SimpleTable>\n                </div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Entity Co-References ({{getNodeCount(TABLEFIELDMAPPING.nodes)}}) <InfoTooltip :iconStyle=\"'light'\" :message=\"'Data limit 10'\"></InfoTooltip></div>\n            <SimpleTable\n                :headers=\"elementHeaders\"\n                :data=\"nodeSelection[TABLEFIELDMAPPING.nodes]\"\n                :loading=\"loading\"\n                :statusMessage=\"statusMessage\"\n                :route=\"VUEROUTES.element\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"documentList\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, buildRoute, formatEntityCluster,\n        getStringValue, HeaderConfig} from '../../utils';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import InfoTooltip from '@/components/InfoTooltip';\n    import API from '../../api';\n    import {mapState} from 'vuex';\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'ClusterDetails',\n        components: {SimpleTable, DocumentGrid, InfoTooltip},\n        data: () => ({\n            loading: false,\n            sort: {},\n            connectionHeaders: [],\n            elementHeaders: [],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES = VUEROUTES;\n            this.getStringValue = getStringValue;\n            this.sort = {by: TABLEFIELDMAPPING.headline, descending: false},\n            this.connectionHeaders = [\n                new HeaderConfig('Cluster ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n            this.elementHeaders = [\n                new HeaderConfig('Names', 'start', false, TABLEFIELDMAPPING.names),\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource']),\n            heading() {\n                return this.nodeSelection[TABLEFIELDMAPPING.headline] ? this.nodeSelection[TABLEFIELDMAPPING.headline] :\n                    this.nodeSelection[TABLEFIELDMAPPING.id];\n            },\n            prototype() {\n                return this.nodeSelection[TABLEFIELDMAPPING.prototype] || {};\n            },\n            prototypeId() {\n                return  this.nodeSelection[TABLEFIELDMAPPING.prototypeId] || '';\n            },\n            routePath() {\n                return  buildRoute(\n                    this.nodeSelection[TABLEFIELDMAPPING.prototypeUri],\n                    this.VUEROUTES.element,\n                    'entity'\n                );\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            },\n            routeParams() {\n                return this.$route.params;\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            getClusterCount(arrayName) {\n                let array = this.prototype[arrayName];\n                return array ? array.length : '';\n            },\n            getNodeCount(arrayName) {\n                let array = this.nodeSelection[arrayName];\n                return array ? array.length : '';\n            },\n            getClusterCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return 'Entity';\n            },\n            refreshData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n\n                API.getEntityClusterDetails(decodeURIComponent(this.routeParams.id), 10).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.updateNodeSelection(formatEntityCluster(response.data));\n                        this.statusMessage = '';\n                        // TODO: swagger server needs to indicate if no data exists\n                        // this.statusMessage = 'No results found';\n                    } else if (response.statusMessage) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}