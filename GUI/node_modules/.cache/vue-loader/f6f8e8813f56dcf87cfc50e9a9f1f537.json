{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/settings/GraphLoad.vue?vue&type=style&index=0&id=f402d83c&lang=scss&scoped=true&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/settings/GraphLoad.vue","mtime":1641326767935},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/css-loader/dist/cjs.js","mtime":1641411773021},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1641411774047},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/postcss-loader/src/index.js","mtime":1641411773350},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/sass-loader/dist/cjs.js","mtime":1641411772200},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGV4dGFyZWEgewogIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50OwogIGZvbnQtc2l6ZTogOHB0OwogIGZvbnQtZmFtaWx5OiBBcmlhbDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzOwogIGNvbG9yOiAjMDM3NzdkOwogIHdpZHRoOiAxMDAlOwp9Cgouc3RhdHVzLWhlYWRpbmcgewogIGZvbnQtc2l6ZTogMTRweDsKICB3aWR0aDogMTAwJTsKICBtYXJnaW4tdG9wOiAyNnB4Owp9Cg=="},{"version":3,"sources":["GraphLoad.vue"],"names":[],"mappingsfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"GraphLoad.vue","sourceRoot":"src/views/settings","sourcesContent":["<template>\n  <div class=\"page-content\">\n    <h2>What would you like to do?</h2>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm\">\n          <h3 class=\"kb-heading\">Graph Management</h3>\n          <Collapse>\n            <template v-slot:header> <h3>Add Graph to triple store</h3> </template>\n            <template v-slot:content>\n              <h3>URI Base: {{ uriBase }}</h3>\n              <div>\n                <v-select\n                  :items=\"taskAreaOptions\"\n                  label=\"Select Task Area\"\n                  @input=\"showImportItems\"\n                  ref=\"taskArea\"\n                  @change=\"updateURI\"\n                  v-model=\"taskArea\"\n                ></v-select>\n              </div>\n              <div>\n                <v-select\n                  v-if=\"showTA3\"\n                  :items=\"sinOptions\"\n                  label=\"Select SIN\"\n                  @input=\"updateURI\"\n                  ref=\"sinSelect\"\n                  id=\"sinSelect\"\n                  v-model=\"sinID\"\n                  @change=\"updateURI\"\n                ></v-select>\n              </div>\n              <div>\n                <v-text-field\n                  v-if=\"showTA3\"\n                  label=\"TA3 Team Run ID: {TeamID}-{RunID}\"\n                  v-model=\"ta3Run\"\n                  @change=\"updateURI\"\n                />\n              </div>\n              <div>\n                <v-text-field\n                  v-if=\"showTA2 || showTA3\"\n                  label=\"TA2 Team Run ID: {TeamID}-{RunID}\"\n                  v-model=\"ta2Run\"\n                  @change=\"updateURI\"\n                />\n              </div>\n              <div>\n                <v-text-field\n                  v-if=\"showTA2 || showTA3\"\n                  label=\"TA1 Team Run ID: {TeamID}-{RunID}\"\n                  v-model=\"ta1Run\"\n                  @change=\"updateURI\"\n                />\n              </div>\n              <v-file-input\n                v-if=\"showTA2 || showTA3\"\n                accept=\"*.ttl\"\n                label=\"Select TTL File\"\n                show-size\n                id=\"fileInput\"\n                ref=\"fileInput\"\n                @change=\"changeFileInput\"\n              ></v-file-input>\n              <div>\n                <v-text-field\n                  v-if=\"showTA2 || showTA3\"\n                  label=\"URI of Graph\"\n                  v-model=\"newGraphURI\"\n                />\n              </div>\n              <div class=\"form-wrapper\">\n                <div class=\"row-wrapper-flex\" v-if=\"showTA2 || showTA3\">\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"importGraph()\">Import TTL</button>\n                  </div>\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"clearImportInputs()\">Clear</button>\n                  </div>\n                </div>\n                <div class=\"status-heading\">\n                  <div>Import Status:</div>\n                  <div><textarea v-model=importResponse readonly></textarea></div>\n                </div>\n              </div>\n            </template>\n          </Collapse>\n          <Collapse>\n            <template v-slot:header>\n              <h3>Delete Graph from triple store</h3>\n            </template>\n            <template v-slot:content> \n              <v-select \n                label='Select Graphs to Delete' \n                :items=\"graphsList\"\n                v-model=\"graphsListDelete\"\n                id=\"selectDelete\"\n                ref=\"selectDelete\"\n                multiple>\n              </v-select>\n              <div class=\"form-wrapper\">\n                <div>\n                  <button class=\"dark-app-button\" @click=\"deleteGraph()\">Delete Graph</button>\n                </div>\n                <div class=\"status-heading\">\n                  <div>Delete Status:</div>\n                  <div><textarea v-model=deleteResponse readonly></textarea></div>\n                </div>\n              </div>\n            </template>\n          </Collapse>\n          <Collapse>\n            <template v-slot:header>\n              <h3>Rename Graph in triple store</h3>\n            </template>\n            <template v-slot:content> \n              <v-select \n                label='Select Graph to Rename' \n                ref=\"origRenameGraph\"\n                id=\"origRenameGraph\"\n                v-model=\"origRenameGraph\"\n                :items=\"graphsList\"\n                @change=\"defaultRenameGraph\"\n              ></v-select>\n              <v-text-field  \n                label=\"New Graph URI\"\n                id=\"newRenameGraph\"\n                ref=\"newRenameGraph\"\n                v-model=\"newRenameGraph\"\n              />\n              <div class=\"form-wrapper\">\n                <div>\n                <button class=\"dark-app-button\" @click=\"renameGraph()\">Rename Graph</button>\n                </div>\n                <div  class=\"status-heading\">\n                  <div>Rename Status:</div>\n                  <div><textarea v-model=renameResponse readonly></textarea></div>\n                </div>\n              </div>\n            </template>\n          </Collapse>\n        </div>\n        <div class=\"col-sm\">\n          <h3 class=\"kb-heading\">Cache Management</h3>\n            <Collapse>\n              <template v-slot:header>\n                <h3>Create TA2 Cache</h3>\n              </template>\n              <template v-slot:content> \n                <v-select \n                  label='Select Graphs to cache' \n                  v-model=\"cacheGraphList\"\n                  :items=\"rootTA2GraphsList\"\n                  @change=\"defaultRenameGraph\"\n                  multiple\n                ></v-select>\n                <div class=\"form-wrapper\">\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"cacheTA2GraphsList()\">Cache Graph(s)</button>\n                  </div>\n                  <div class=\"status-heading\">\n                    <div>Create Cache Status:</div>\n                    <div><textarea v-model=createCacheResponse readonly></textarea></div>\n                  </div>\n                </div>\n              </template>\n            </Collapse>\n            <Collapse>\n              <template v-slot:header>\n                <h3>Delete TA2 Indices From Cache</h3>\n              </template>\n              <template v-slot:content> \n                <v-select \n                  label='Select Graphs to delete indices' \n                  v-model=\"uncacheGraphList\"\n                  :items=\"rootTA2GraphsList\"\n                  @change=\"defaultRenameGraph\"\n                  multiple\n                ></v-select>\n                <div class=\"form-wrapper\">\n                  <div class=\"row-wrapper-flex\">\n                    <div>\n                      <button class=\"dark-app-button\" @click=\"deleteCacheList()\">Clear selected indices</button>\n                    </div>\n                    <div>\n                      <button class=\"dark-app-button\" @click=\"deleteCacheAll()\">Clear all indices</button>\n                    </div>\n                  </div>\n                  <div class=\"status-heading\">\n                    <div>Clear Cache Status:</div>\n                    <div><textarea v-model=clearCacheResponse readonly></textarea></div>\n                  </div>\n                </div>\n              </template>\n            </Collapse>\n            <Collapse>\n              <template v-slot:header>\n                <h3>Create TA3 Cache</h3>\n              </template>\n              <template v-slot:content>\n                <div class=\"form-wrapper\">\n                  <div>\n                    <button class=\"dark-app-button\" @click=\"cacheTA3Graphs()\">Index All TA3 Graphs</button>\n                  </div>\n                  <div class=\"status-heading\">\n                    <div>Clear Cache Status:</div>\n                    <div><textarea v-model=cacheTA3Response readonly></textarea></div>\n                  </div>\n                </div>\n              </template>\n            </Collapse>        \n          </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Collapse from '@/components/Collapse';\nimport API from '../../api';\nimport { DATASOURCEURI } from '../../utils';\n\nexport default {\n  name: 'GraphManagement',\n  components: { Collapse },\n  data: () => ({\n    taskAreaOptions: [\n      { value: 'TA2', text: 'TA2' },\n      { value: 'TA3', text: 'TA3' },\n    ],\n    sinOptions: [\n      { value: 'E201', text: 'E201' },\n      { value: 'E202', text: 'E202' },\n      { value: 'E203', text: 'E203' },\n    ],\n    showTA2: false,\n    showTA3: false,\n    uriBase: DATASOURCEURI,\n    newGraphURI: '',\n    taskArea: '',\n    sinID: '',\n    ta1Run: '',\n    ta2Run: '',\n    ta3Run: '',\n    importResponse: '',\n    deleteResponse: '',\n    renameResponse: '',\n    clearCacheResponse: '',\n    createCacheResponse: '',\n    cacheTA3Response: '',\n    uploadFile: undefined,\n    graphsList: [],\n    graphsListDelete: [],\n    cacheGraphList: [],\n    uncacheGraphList: [],\n    origRenameGraph: '',\n    newRenameGraph: '',\n    rootGraphsList: [],\n    rootTA2GraphsList: [],\n    rootTA3GraphsList: [],\n  }),\n  mounted() {\n    this.updateGraphsList();\n  },\n  methods: {\n    updateURI() {\n      if (this.showTA2) {\n        this.newGraphURI = [this.uriBase,this.taskArea,this.ta2Run,this.ta1Run].join('/');\n      }\n      if (this.showTA3) {\n        this.newGraphURI = [this.uriBase,this.taskArea,this.sinID,this.ta3Run,this.ta2Run,this.ta1Run,(typeof this.uploadFile == 'undefined' ? '' :  (typeof this.uploadFile.name == 'undefined' ? '' : this.uploadFile.name.replace('.ttl', '')))].join('/');       \n      }\n    },\n    changeFileInput(file) {\n      this.uploadFile = file;\n      this.updateURI();\n    },    \n    clearImportInputs() {\n      this.taskArea = '';\n      this.sinID = '';\n      this.ta3Run = '';\n      this.ta2Run = '';\n      this.ta1Run = '';\n      this.uploadFile = undefined;\n      this.$refs['fileInput'].reset();\n      this.newGraphURI = '';\n      this.showTA2 = false;\n      this.showTA3 = false;\n    },\n    showImportItems(value) {\n      if (value === 'TA2') {\n        this.showTA2 = true;\n        this.showTA3 = false;\n      }\n      if (value === 'TA3') {\n        this.showTA2 = false;\n        this.showTA3 = true;\n      }\n    },\n    importGraph() {\n      if (this.validateURI(this.newGraphURI)) {\n        this.importResponse = '> Currently importing ' + this.newGraphURI + '...\\n';\n        API.importGraph(this.newGraphURI, this.uploadFile).then((response) => {\n          if (response.data && Object.keys(response.data).length > 0) {\n            this.importResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n          }\n          this.updateGraphsList();\n          this.importResponse += '> Completed importing of ' + this.newGraphURI + '.\\n';\n          if (this.showTA2) {\n            this.cacheTA2Graph(this.getGraphRoot(this.newGraphURI));\n          }\n        });\n      } else {\n        alert('Please complete all the components of the URI.');\n      }\n    },\n    renameGraph() {\n      this.renameResponse = '> Currently renaming ' + this.origRenameGraph + ' to ' + this.newRenameGraph + '...\\n';\n      API.renameGraph(this.origRenameGraph, this.newRenameGraph).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.renameResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        this.updateGraphsList();\n        this.renameResponse += '> Completed renaming of ' + this.origRenameGraph + ' to ' + this.newRenameGraph + '.\\n';\n        this.newRenameGraph = '';\n      });\n    },\n    defaultRenameGraph() {\n      this.newRenameGraph = this.origRenameGraph;\n    },    \n    updateGraphsList() {\n      this.rootGraphsList = []\n      this.rootTA2GraphsList = []\n      this.rootTA3GraphsList = []\n      API.getGraphs().then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.graphsList = response.data;\n          this.graphsList.forEach(graph => {\n            if (this.rootGraphsList.indexOf(graph) === -1) {\n              this.rootGraphsList.push(graph);\n            }\n\n            if (graph.includes('/TA2/')) {\n              if (this.rootTA2GraphsList.indexOf(graph) === -1)\n                this.rootTA2GraphsList.push(graph);\n            }\n            if (graph.includes('/TA3/')) {\n              if (this.rootTA3GraphsList.indexOf(this.getGraphRoot(graph)) === -1)\n                this.rootTA3GraphsList.push(this.getGraphRoot(graph));\n            }\n          });\n        }\n      });\n    },\n    deleteGraph() {\n      this.deleteResponse = '';\n      this.graphsListDelete.forEach(graph => {\n\n        if (graph.includes('/TA2/')) {\n          this.deleteResponse += '> Currently deleting ' + graph + '...\\n';\n          API.deleteGraph(graph).then((response) => {\n            if (response.data && Object.keys(response.data).length > 0) {\n              this.deleteResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n            }\n            this.updateGraphsList();\n            this.deleteResponse += '> Completed deletion of ' + graph + ' .\\n'\n            this.deleteCacheGraph(graph);\n            this.deleteResponse += '> Cache for ' + graph + ' was also removed.\\n'\n          });\n        }\n\n        if (graph.includes('/TA3/')) {\n          this.deleteResponse += '> Currently deleting ' + graph + '...\\n';\n          API.deleteGraph(graph).then((response) => {\n            if (response.data && Object.keys(response.data).length > 0) {\n              this.deleteResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n            }\n            this.updateGraphsList();\n            this.deleteResponse += '> Completed deletion of ' + graph + ' .\\n'\n          });\n        }\n\n      });\n      //needs check\n      this.graphsListDelete = [];\n      this.$refs['selectDelete'].reset();\n    },\n    deleteCacheList() {\n      this.clearCacheResponse = '';\n      this.uncacheGraphList.forEach(graph => {\n        this.deleteCacheGraph(graph);\n      });\n\n    },\n    deleteCacheGraph(graph) {\n      this.clearCacheResponse += '> Clearing index for ' + graph + '...\\n';\n      API.deleteCache(graph).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.clearCacheResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        //TODO: Catch Error\n        this.updateGraphsList();\n        this.clearCacheResponse += '> Clearing index for ' + graph + ' completed\\n';\n      });\n    },\n    deleteCacheAll() {\n      if (confirm('Are you sure you want to delete all indices in the cache?')) {\n        this.clearCacheResponse = '> Clearing all indices from cache...\\n';\n        API.deleteCache(null).then((response) => {\n          if (response.data && Object.keys(response.data).length > 0) {\n            this.clearCacheResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n          }\n          //TODO: Catch Error\n          this.updateGraphsList();\n          this.clearCacheResponse += '> Clearing all indices has completed\\n'\n        });\n      }\n    },\n    cacheTA2GraphsList() {\n      this.createCacheResponse = '';\n      this.cacheGraphList.forEach(graph => {\n\n        var payload = {\n          'taskArea': 'TA2',\n          'overwrite': true,\n          'graphRootURI': [graph]\n        };\n\n        this.createCacheResponse += '> Currently caching ' + graph + '...\\n';\n\n        API.cacheGraph(JSON.stringify(payload)).then((response) => {\n          if (response.data && Object.keys(response.data).length > 0) {\n            this.createCacheResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n          }\n          //TODO: Catch Error\n          this.createCacheResponse += '> Completed caching of ' + graph + ' .\\n'\n        });\n      });\n    },\n\n    cacheTA2Graph(graph) {\n\n      var payload = {\n        'taskArea': 'TA2',\n        'overwrite': true,\n        'graphRootURI': [graph]\n      };\n\n      this.importResponse += '> Currently caching ' + graph + '...\\n';\n\n      API.cacheGraph(JSON.stringify(payload)).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.importResponse += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        //TODO: Catch Error\n        this.importResponse += '> Completed caching of ' + graph + ' .\\n';\n      });\n    },\n    cacheTA3Graphs() {\n\n      var payload = {\n        'taskArea': 'TA3',\n        'overwrite': true,\n        'graphRootURI': this.rootTA3GraphsList\n      };\n\n      this.cacheTA3Response = '> Currently caching all TA3 Graphs...\\n';\n\n      API.cacheGraph(JSON.stringify(payload)).then((response) => {\n        if (response.data && Object.keys(response.data).length > 0) {\n          this.cacheTA3Response += '> ' + JSON.parse(JSON.stringify(response.data)).message + '\\n';\n        }\n        //TODO: Catch Error\n        this.cacheTA3Response += '> Completed caching of all TA3 Graphs.\\n';\n      });\n    },\n\n    getGraphRoot(graph) {\n      if (graph.includes('/TA2/'))\n        return graph;\n      if (graph.includes('/TA3/'))\n        return graph.replace('/' + graph.split('/').pop() , '');\n    },\n    validateURI(strURI) {\n      if (strURI.includes('/TA2/')) {\n        if (this.ta2Run !== '' &&\n            this.ta1Run !== '' &&\n            (typeof this.uploadFile !== 'undefined'))\n              return true;\n      }\n      if (strURI.includes('/TA3/')) {\n        if (this.sinID !== '' &&\n            this.ta3Run !== '' &&\n            this.ta2Run !== '' &&\n            this.ta1Run !== '' &&\n            (typeof this.uploadFile !== 'undefined'))\n            return true;\n      }\n      return false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n  border: none !important;\n  font-size: 8pt;\n  font-family: Arial;\n  background-color: #f3f3f3;\n  color: #03777d;\n  width: 100%;\n}\n\n.status-heading {\n  font-size: 14px;\n  width: 100%;\n  margin-top: 26px;\n}\n</style>\n"]}]}