{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityElementDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/EntityElementDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7VEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIGZvcm1hdEVudGl0eU1lbWJlcnMsCiAgICBnZXRTdHJpbmdWYWx1ZSwgSGVhZGVyQ29uZmlnfSBmcm9tICcuLi8uLi91dGlscyc7Ci8vaW1wb3J0IFRhYnMgZnJvbSAnQC9jb21wb25lbnRzL1RhYnMnOwppbXBvcnQgU2ltcGxlVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL1NpbXBsZVRhYmxlJzsKaW1wb3J0IERvY3VtZW50R3JpZCBmcm9tICdAL2NvbXBvbmVudHMvRG9jdW1lbnRHcmlkJzsKaW1wb3J0IEFQSSBmcm9tICcuLi8uLi9hcGknOwppbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4JzsKaW1wb3J0IHttYXBNdXRhdGlvbnN9IGZyb20gJ3Z1ZXgnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0VudGl0eUVsZW1lbnREZXRhaWxzJywKICAgIGNvbXBvbmVudHM6IHtTaW1wbGVUYWJsZSwgRG9jdW1lbnRHcmlkfSwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgdGFiVGl0bGVzOiBbJ0V2ZW50cycsICdSZWxhdGlvbnMnXSwKICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICBjb25uZWN0aW9uSGVhZGVyczogW10sCiAgICAgICAgY2x1c3RlckhlYWRlcnM6IFtdLAogICAgICAgIHN0YXR1c01lc3NhZ2U6ICcnLAogICAgICAgIHJvdXRlSWQ6ICcnCiAgICB9KSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5UQUJMRUZJRUxETUFQUElORyA9IFRBQkxFRklFTERNQVBQSU5HOwogICAgICAgIHRoaXMuVlVFUk9VVEVTID0gVlVFUk9VVEVTOwogICAgICAgIHRoaXMuZ2V0U3RyaW5nVmFsdWUgPSBnZXRTdHJpbmdWYWx1ZTsKICAgICAgICB0aGlzLmNvbm5lY3Rpb25IZWFkZXJzID0gWwogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ1JvbGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnJvbGVzKSwKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpCiAgICAgICAgXTsKICAgICAgICB0aGlzLmNsdXN0ZXJIZWFkZXJzID0gWwogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdOYW1lcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5uYW1lcyksCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0lEJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLmlkKSwKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpCiAgICAgICAgXTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcFN0YXRlKFsnbm9kZVNlbGVjdGlvbicsICdjdXJyZW50RGF0YVNvdXJjZSddKSwKICAgICAgICBoZWFkaW5nKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmhlYWRsaW5lXSA/IHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZV0gOgogICAgICAgICAgICAgICAgdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmlkXTsKICAgICAgICB9LAogICAgICAgIGN1cnJlbnRFbnRpdHkoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb247CiAgICAgICAgfSwKICAgICAgICBlbGVtZW50VVJJKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmlkXSA/CiAgICAgICAgICAgICAgICB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaWRdIDogJyc7CiAgICAgICAgfSwKICAgICAgICBkb2N1bWVudExpc3QoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZG9jdW1lbnRMaXN0XTsKICAgICAgICB9LAogICAgICAgIHJvdXRlUGFyYW1zKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kcm91dGUucGFyYW1zOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwTXV0YXRpb25zKFsndXBkYXRlTm9kZVNlbGVjdGlvbiddKSwKICAgICAgICBnZXROb2RlQ291bnQoYXJyYXlOYW1lKSB7CiAgICAgICAgICAgIGxldCBhcnJheSA9IHRoaXMubm9kZVNlbGVjdGlvblthcnJheU5hbWVdOwogICAgICAgICAgICByZXR1cm4gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAnJzsKICAgICAgICB9LAogICAgICAgIGdldEVudGl0eUNhdGVnb3J5KCkgewogICAgICAgICAgICBpZih0aGlzLnJvdXRlUGFyYW1zLmlkICE9PSB0aGlzLnJvdXRlSWQpIHsKICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaEVudGl0eURhdGEoKTsKICAgICAgICAgICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiAnRW50aXR5JzsKICAgICAgICB9LAogICAgICAgIHJlZnJlc2hFbnRpdHlEYXRhKCkgewogICAgICAgICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICB0aGlzLnN0YXR1c01lc3NhZ2UgPSBMT0FESU5HTUVTU0FHRTsKICAgICAgICAgICAgQVBJLmdldEVudGl0eUVsZW1lbnREZXRhaWxzKGRlY29kZVVSSUNvbXBvbmVudCh0aGlzLnJvdXRlUGFyYW1zLmlkKSkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhICYmIE9iamVjdC5rZXlzKHJlc3BvbnNlLmRhdGEpLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oZm9ybWF0RW50aXR5TWVtYmVycyhyZXNwb25zZS5kYXRhKSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gJyc7CiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5zdGF0dXNNZXNzYWdlID0gJ05vIHJlc3VsdHMgZm91bmQnOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5zdGF0dXNNZXNzYWdlKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gcmVzcG9uc2Uuc3RhdHVzTWVzc2FnZTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["EntityElementDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EntityElementDetails.vue","sourceRoot":"src/views/explore","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{heading}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getEntityCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(currentEntity[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">ID: </span><span>{{currentEntity[TABLEFIELDMAPPING.idUri]}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div v-if=\"currentEntity[TABLEFIELDMAPPING.eventList]\">\n                <div class=\"kb-table-heading\">Events ({{getNodeCount(TABLEFIELDMAPPING.eventList)}})</div>\n                <SimpleTable\n                        :headers=\"connectionHeaders\"\n                        :data=\"currentEntity[TABLEFIELDMAPPING.eventList]\"\n                        :loading=\"loading\"\n                        :statusMessage=\"statusMessage\"\n                        :route=\"VUEROUTES.element\"\n                ></SimpleTable>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div v-if=\"currentEntity[TABLEFIELDMAPPING.relationList]\">\n                <div class=\"kb-table-heading\">Relations ({{getNodeCount(TABLEFIELDMAPPING.relationList)}})</div>\n                <SimpleTable\n                        :headers=\"connectionHeaders\"\n                        :data=\"currentEntity[TABLEFIELDMAPPING.relationList]\"\n                        :loading=\"loading\"\n                        :statusMessage=\"statusMessage\"\n                        :route=\"VUEROUTES.element\"\n                ></SimpleTable>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Clusters ({{getNodeCount(TABLEFIELDMAPPING.clusterList)}})</div>\n            <SimpleTable\n                    :headers=\"clusterHeaders\"\n                    :data=\"currentEntity[TABLEFIELDMAPPING.clusterList]\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.cluster\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"currentEntity[TABLEFIELDMAPPING.documentList]\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, formatEntityMembers,\n        getStringValue, HeaderConfig} from '../../utils';\n    //import Tabs from '@/components/Tabs';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import API from '../../api';\n    import {mapState} from 'vuex';\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'EntityElementDetails',\n        components: {SimpleTable, DocumentGrid},\n        data: () => ({\n            tabTitles: ['Events', 'Relations'],\n            loading: false,\n            connectionHeaders: [],\n            clusterHeaders: [],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES = VUEROUTES;\n            this.getStringValue = getStringValue;\n            this.connectionHeaders = [\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n            this.clusterHeaders = [\n                new HeaderConfig('Names', 'start', false, TABLEFIELDMAPPING.names),\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource']),\n            heading() {\n                return this.nodeSelection[TABLEFIELDMAPPING.headline] ? this.nodeSelection[TABLEFIELDMAPPING.headline] :\n                    this.nodeSelection[TABLEFIELDMAPPING.id];\n            },\n            currentEntity() {\n                return this.nodeSelection;\n            },\n            elementURI() {\n                return this.nodeSelection[TABLEFIELDMAPPING.id] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.id] : '';\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            },\n            routeParams() {\n                return this.$route.params;\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            getNodeCount(arrayName) {\n                let array = this.nodeSelection[arrayName];\n                return array ? array.length : '';\n            },\n            getEntityCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshEntityData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return 'Entity';\n            },\n            refreshEntityData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n                API.getEntityElementDetails(decodeURIComponent(this.routeParams.id)).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.updateNodeSelection(formatEntityMembers(response.data));\n                        this.statusMessage = '';\n                        // this.statusMessage = 'No results found';\n                    } else if (response.statusMessage) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}