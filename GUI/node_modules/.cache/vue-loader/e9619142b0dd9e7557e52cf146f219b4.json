{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/TableAndGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/components/TableAndGrid.vue","mtime":1640207172530},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEYXRhVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL0RhdGFUYWJsZSc7CmltcG9ydCBDYXJkR3JpZCBmcm9tICdAL2NvbXBvbmVudHMvQ2FyZEdyaWQnOwppbXBvcnQge21hcFN0YXRlLCBtYXBBY3Rpb25zfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgVEFCTEVTRUxFQ1RJT05TIH0gZnJvbSAnLi4vdXRpbHMnOwoKbGV0IHZpZXdUeXBlID0gewogICAgICAgIHRhYmxlOiAnbWRpLXZpZXctZ3JpZCcsCiAgICAgICAgY2FyZDogJ21kaS12aWV3LWxpc3QnCiAgICB9OwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1RhYmxlQW5kR3JpZCcsCiAgICBjb21wb25lbnRzOiB7RGF0YVRhYmxlLCBDYXJkR3JpZH0sCiAgICBwcm9wczogewogICAgICAgIHNob3dUYWJsZTogQm9vbGVhbiwKICAgICAgICBsb2FkaW5nOiBCb29sZWFuLAogICAgICAgIGRhdGE6IEFycmF5LAogICAgICAgIHNvcnQ6IE9iamVjdCwKICAgICAgICBwYWdpbmc6IE9iamVjdCwKICAgICAgICB0YWJsZUNvbmZpZ3VyYXRpb246IE9iamVjdCwKICAgICAgICBjYXJkQ29uZmlndXJhdGlvbjogT2JqZWN0LAogICAgICAgIHN0YXR1c01lc3NhZ2U6IFN0cmluZwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwU3RhdGUoWydleHBsb3JlU2VsZWN0aW9ucyddKSwKICAgICAgICBzZWxlY3RlZFZpZXcoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmV4cGxvcmVTZWxlY3Rpb25zW1RBQkxFU0VMRUNUSU9OUy5kaXNwbGF5XSA/IHRoaXMuZXhwbG9yZVNlbGVjdGlvbnNbVEFCTEVTRUxFQ1RJT05TLmRpc3BsYXldIDoKICAgICAgICAgICAgICAgIHRoaXMuc2hvd1RhYmxlID8gdmlld1R5cGUudGFibGUgOiB2aWV3VHlwZS5jYXJkOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwQWN0aW9ucyhbJ3VwZGF0ZUV4cGxvcmVTZWxlY3Rpb25zJ10pLAogICAgICAgIHNob3dUYWJsZVZpZXcoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkVmlldyA9PT0gdmlld1R5cGUudGFibGU7CiAgICAgICAgfSwKICAgICAgICB0b2dnbGVQYWdlVmlldygpIHsKICAgICAgICAgICAgaWYgKHRoaXMuc2hvd1RhYmxlVmlldygpKSB7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUV4cGxvcmVTZWxlY3Rpb25zKHtvcHRpb246IFRBQkxFU0VMRUNUSU9OUy5kaXNwbGF5LCB2YWx1ZTogdmlld1R5cGUuY2FyZH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFeHBsb3JlU2VsZWN0aW9ucyh7b3B0aW9uOiBUQUJMRVNFTEVDVElPTlMuZGlzcGxheSwgdmFsdWU6IHZpZXdUeXBlLnRhYmxlfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["TableAndGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableAndGrid.vue","sourceRoot":"src/components","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div>\n        <DataTable v-if=\"showTableView()\"\n                   :data=\"data\"\n                   :tableConfiguration=\"tableConfiguration\"\n                   :sort=\"sort\"\n                   :loading=\"loading\"\n                   :paging=\"paging\"\n                   :statusMessage=\"statusMessage\"\n                   :hideHeader=false\n                   :hideFooter=false\n                   @toggleView=\"togglePageView()\"\n                   @currentItems=\"$emit('currentItems', $event)\"\n        ></DataTable>\n        <CardGrid v-else\n                  :data=\"data\"\n                  :cardConfiguration=\"cardConfiguration\"\n                  :sort=\"sort\"\n                  :loading=\"loading\"\n                  :paging=\"paging\"\n                  :statusMessage=\"statusMessage\"\n                  :hideHeader=false\n                  :hideFooter=false\n                  @toggleView=\"togglePageView()\"\n        ></CardGrid>\n    </div>\n    \n</template>\n\n<script>\n    import DataTable from '@/components/DataTable';\n    import CardGrid from '@/components/CardGrid';\n    import {mapState, mapActions} from 'vuex';\n    import { TABLESELECTIONS } from '../utils';\n\n    let viewType = {\n            table: 'mdi-view-grid',\n            card: 'mdi-view-list'\n        };\n\n    export default {\n        name: 'TableAndGrid',\n        components: {DataTable, CardGrid},\n        props: {\n            showTable: Boolean,\n            loading: Boolean,\n            data: Array,\n            sort: Object,\n            paging: Object,\n            tableConfiguration: Object,\n            cardConfiguration: Object,\n            statusMessage: String\n        },\n        computed: {\n            ...mapState(['exploreSelections']),\n            selectedView() {\n                return this.exploreSelections[TABLESELECTIONS.display] ? this.exploreSelections[TABLESELECTIONS.display] :\n                    this.showTable ? viewType.table : viewType.card;\n            }\n        },\n        methods: {\n            ...mapActions(['updateExploreSelections']),\n            showTableView() {\n                return this.selectedView === viewType.table;\n            },\n            togglePageView() {\n                if (this.showTableView()) {\n                    this.updateExploreSelections({option: TABLESELECTIONS.display, value: viewType.card});\n                } else {\n                    this.updateExploreSelections({option: TABLESELECTIONS.display, value: viewType.table});\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n\n"]}]}