{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ClusterDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ClusterDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7VEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIFBBUkFNRVRFUk5BTUVTLCB1cHBlckZpcnN0TGV0dGVyLCBmb3JtYXRDbHVzdGVyLAogICAgYnVpbGRSb3V0ZSwgZ2V0U3RyaW5nVmFsdWUsIEhlYWRlckNvbmZpZ30gZnJvbSAnLi4vLi4vdXRpbHMnOwppbXBvcnQgU2ltcGxlVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL1NpbXBsZVRhYmxlJzsKaW1wb3J0IERvY3VtZW50R3JpZCBmcm9tICdAL2NvbXBvbmVudHMvRG9jdW1lbnRHcmlkJzsKaW1wb3J0IEFQSSBmcm9tICcuLi8uLi9hcGknOwppbXBvcnQge21hcEFjdGlvbnMsIG1hcE11dGF0aW9ucywgbWFwU3RhdGV9IGZyb20gJ3Z1ZXgnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ0NsdXN0ZXJEZXRhaWxzJywKICAgIGNvbXBvbmVudHM6IHtTaW1wbGVUYWJsZSwgRG9jdW1lbnRHcmlkfSwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgZGF0YVJlc3BvbnNlOiBbXSwKICAgICAgICBzb3J0OiB7fSwKICAgICAgICBhcmd1bWVudEhlYWRlcnM6IFtdLAogICAgICAgIGVsZW1lbnRIZWFkZXJzOiBbXSwKICAgICAgICBzdGF0dXNNZXNzYWdlOiAnJywKICAgICAgICByb3V0ZUlkOiAnJwogICAgfSksCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuVEFCTEVGSUVMRE1BUFBJTkcgPSBUQUJMRUZJRUxETUFQUElORzsKICAgICAgICB0aGlzLlZVRVJPVVRFUyA9ICBWVUVST1VURVM7CiAgICAgICAgdGhpcy5nZXRTdHJpbmdWYWx1ZSA9IGdldFN0cmluZ1ZhbHVlOwogICAgICAgIHRoaXMuc29ydCA9IHtieTogVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmUsIGRlc2NlbmRpbmc6IGZhbHNlfTsKICAgICAgICB0aGlzLmFyZ3VtZW50SGVhZGVycyA9IFsKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnTmFtZScsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5oZWFkbGluZSksCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0NsdXN0ZXIgSUQnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuaWQpLAogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdSb2xlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5yb2xlcyksCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ1R5cGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnR5cGVzKQogICAgICAgIF07CiAgICAgICAgdGhpcy5lbGVtZW50SGVhZGVycyA9IFsKICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksCiAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpLAogICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ0VudGl0eSBDbHVzdGVycycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5lbnRpdHlDb3VudCkKICAgICAgICBdOwogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgaWYodGhpcy4kcm91dGUucXVlcnkuaGFzT3duUHJvcGVydHkoUEFSQU1FVEVSTkFNRVMuZGF0YXNvdXJlKSkgewogICAgICAgICAgICBpZih0aGlzLmN1cnJlbnREYXRhU291cmNlICE9PSB0aGlzLiRyb3V0ZS5xdWVyeVtQQVJBTUVURVJOQU1FUy5kYXRhc291cmVdKSB7CiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnREYXRhU291cmNlKHRoaXMuJHJvdXRlLnF1ZXJ5W1BBUkFNRVRFUk5BTUVTLmRhdGFzb3VyZV0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgICB0aGlzLnVwZGF0ZUN1cnJlbnREYXRhU291cmNlKHRoaXMuZGVmYXVsdEtiRGF0YVNvdXJjZSk7CiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwU3RhdGUoWydub2RlU2VsZWN0aW9uJywgJ2N1cnJlbnREYXRhU291cmNlJywgJ2RlZmF1bHRLYkRhdGFTb3VyY2UnXSksCiAgICAgICAgcHJvdG90eXBlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLnByb3RvdHlwZV07CiAgICAgICAgfSwKICAgICAgICBwcm90b3R5cGVJZCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5wcm90b3R5cGVJZF07CiAgICAgICAgfSwKICAgICAgICBjbHVzdGVySWQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuY2x1c3RlclVyaV07CiAgICAgICAgfSwKICAgICAgICByb3V0ZVBhcmFtcygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhcmFtczsKICAgICAgICB9LAogICAgICAgIHJvdXRlUGF0aCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvdG90eXBlID8gYnVpbGRSb3V0ZSgKICAgICAgICAgICAgICAgIHRoaXMucHJvdG90eXBlW1RBQkxFRklFTERNQVBQSU5HLmlkVXJpXSwKICAgICAgICAgICAgICAgIHRoaXMuVlVFUk9VVEVTLmVsZW1lbnQsCiAgICAgICAgICAgICAgICB0aGlzLnByb3RvdHlwZVtUQUJMRUZJRUxETUFQUElORy5jYXRlZ29yeV0KICAgICAgICAgICAgKSA6ICcnOwogICAgICAgIH0sCiAgICAgICAgZW50aXR5Q291bnQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb3RvdHlwZSA/CiAgICAgICAgICAgICAgICB0aGlzLnByb3RvdHlwZVtUQUJMRUZJRUxETUFQUElORy5lbnRpdHlDb3VudF0gOiBudWxsOwogICAgICAgIH0sCiAgICAgICAgYXJndW1lbnRMaXN0KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5wcm90b3R5cGUgPwogICAgICAgICAgICAgICAgdGhpcy5wcm90b3R5cGVbVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5TGlzdF0gOiBbXTsKICAgICAgICB9LAogICAgICAgIGRvY3VtZW50TGlzdCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5kb2N1bWVudExpc3RdOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwTXV0YXRpb25zKFsndXBkYXRlTm9kZVNlbGVjdGlvbiddKSwKICAgICAgICAuLi5tYXBBY3Rpb25zKFsndXBkYXRlQ3VycmVudERhdGFTb3VyY2UnXSksCiAgICAgICAgZ2V0Q2x1c3RlckNhdGVnb3J5KCkgewogICAgICAgICAgICBpZih0aGlzLnJvdXRlUGFyYW1zLmlkICE9PSB0aGlzLnJvdXRlSWQpIHsKICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaERhdGEoKTsKICAgICAgICAgICAgICAgIHRoaXMucm91dGVJZCA9IHRoaXMucm91dGVQYXJhbXMuaWQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB1cHBlckZpcnN0TGV0dGVyKHRoaXMucm91dGVQYXJhbXMuY2F0ZWdvcnkpOwogICAgICAgIH0sCiAgICAgICAgcmVmcmVzaERhdGEoKSB7CiAgICAgICAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbih7fSk7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuc3RhdHVzTWVzc2FnZSA9IExPQURJTkdNRVNTQUdFOwogICAgICAgICAgICBBUEkuZ2V0Q2x1c3RlckRldGFpbHMoCiAgICAgICAgICAgICAgICBkZWNvZGVVUklDb21wb25lbnQodGhpcy5yb3V0ZVBhcmFtcy5pZCksCiAgICAgICAgICAgICAgICB0aGlzLnJvdXRlUGFyYW1zLmNhdGVnb3J5LAogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50RGF0YVNvdXJjZQogICAgICAgICAgICApLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSAmJiBPYmplY3Qua2V5cyhyZXNwb25zZS5kYXRhKS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhUmVzcG9uc2UgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLmRhdGEucHJvdG90eXBlLmlkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbihmb3JtYXRDbHVzdGVyKHJlc3BvbnNlLmRhdGEsIHRoaXMucm91dGVQYXJhbXMuY2F0ZWdvcnkpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gJyc7CiAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogc3dhZ2dlciBzZXJ2ZXIgbmVlZHMgdG8gaW5kaWNhdGUgd2hlbiBub3RoaW5nIHdhcyBmb3VuZAogICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuc3RhdHVzTWVzc2FnZSA9ICdObyByZXN1bHRzIGZvdW5kJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1c01lc3NhZ2UgJiYgcmVzcG9uc2Uuc3RhdHVzTWVzc2FnZS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gcmVzcG9uc2Uuc3RhdHVzTWVzc2FnZTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZU5vZGVTZWxlY3Rpb24oe30pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["ClusterDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ClusterDetails.vue","sourceRoot":"src/views/explore","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{nodeSelection[TABLEFIELDMAPPING.headline]}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getClusterCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(nodeSelection[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">Cluster ID: </span><span>{{clusterId}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-label-spaced\">Prototype ID:\n                <router-link :to=\"routePath\" class=\"theme-color-text page-link\">\n                    {{prototypeId}}\n                </router-link >\n            </div>\n            <div class=\"kb-table-heading\">Arguments ({{entityCount}}) </div>\n            <SimpleTable\n                    :headers=\"argumentHeaders\"\n                    :data=\"argumentList\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.cluster\"\n            ></SimpleTable>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">{{getClusterCategory()}} Co-References ({{nodeSelection[TABLEFIELDMAPPING.nodeCount]}})</div>\n            <SimpleTable\n                    :headers=\"elementHeaders\"\n                    :data=\"nodeSelection[TABLEFIELDMAPPING.nodes]\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.element\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"documentList\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, PARAMETERNAMES, upperFirstLetter, formatCluster,\n        buildRoute, getStringValue, HeaderConfig} from '../../utils';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import API from '../../api';\n    import {mapActions, mapMutations, mapState} from 'vuex';\n\n    export default {\n        name: 'ClusterDetails',\n        components: {SimpleTable, DocumentGrid},\n        data: () => ({\n            loading: false,\n            dataResponse: [],\n            sort: {},\n            argumentHeaders: [],\n            elementHeaders: [],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES =  VUEROUTES;\n            this.getStringValue = getStringValue;\n            this.sort = {by: TABLEFIELDMAPPING.headline, descending: false};\n            this.argumentHeaders = [\n                new HeaderConfig('Name', 'start', false, TABLEFIELDMAPPING.headline),\n                new HeaderConfig('Cluster ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ];\n            this.elementHeaders = [\n            new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n            new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types),\n            new HeaderConfig('Entity Clusters', 'start', false, TABLEFIELDMAPPING.entityCount)\n            ];\n        },\n        mounted() {\n            if(this.$route.query.hasOwnProperty(PARAMETERNAMES.datasoure)) {\n                if(this.currentDataSource !== this.$route.query[PARAMETERNAMES.datasoure]) {\n                    this.updateCurrentDataSource(this.$route.query[PARAMETERNAMES.datasoure]);\n                }\n            }\n            else {\n                this.updateCurrentDataSource(this.defaultKbDataSource);\n            }\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource', 'defaultKbDataSource']),\n            prototype() {\n                return this.nodeSelection[TABLEFIELDMAPPING.prototype];\n            },\n            prototypeId() {\n                return this.nodeSelection[TABLEFIELDMAPPING.prototypeId];\n            },\n            clusterId() {\n                return this.nodeSelection[TABLEFIELDMAPPING.clusterUri];\n            },\n            routeParams() {\n                return this.$route.params;\n            },\n            routePath() {\n                return this.prototype ? buildRoute(\n                    this.prototype[TABLEFIELDMAPPING.idUri],\n                    this.VUEROUTES.element,\n                    this.prototype[TABLEFIELDMAPPING.category]\n                ) : '';\n            },\n            entityCount() {\n                return this.prototype ?\n                    this.prototype[TABLEFIELDMAPPING.entityCount] : null;\n            },\n            argumentList() {\n                return this.prototype ?\n                    this.prototype[TABLEFIELDMAPPING.entityList] : [];\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            ...mapActions(['updateCurrentDataSource']),\n            getClusterCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return upperFirstLetter(this.routeParams.category);\n            },\n            refreshData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n                API.getClusterDetails(\n                    decodeURIComponent(this.routeParams.id),\n                    this.routeParams.category,\n                    this.currentDataSource\n                ).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.dataResponse = response.data;\n                        if(response.data.prototype.id) {\n                            this.updateNodeSelection(formatCluster(response.data, this.routeParams.category));\n                        }\n                        this.statusMessage = '';\n                        // TODO: swagger server needs to indicate when nothing was found\n                        // this.statusMessage = 'No results found';\n                    }\n                    else if (response.statusMessage && response.statusMessage.length > 0) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}