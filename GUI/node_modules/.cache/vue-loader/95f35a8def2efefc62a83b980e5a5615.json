{"remainingRequest":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ElementDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/src/views/explore/ElementDetails.vue","mtime":1640207172537},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/babel-loader/lib/index.js","mtime":1641411773354},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/cache-loader/dist/cjs.js","mtime":1641411772188},{"path":"/Users/womitowoju/workspace/aida/VERDI-UI/GUI/node_modules/vue-loader/lib/index.js","mtime":1641411773606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7VEFCTEVGSUVMRE1BUFBJTkcsIExPQURJTkdNRVNTQUdFLCBWVUVST1VURVMsIHVwcGVyRmlyc3RMZXR0ZXIsCiAgICBmb3JtYXRFbGVtZW50TWVtYmVycywgZ2V0U3RyaW5nVmFsdWUsIEhlYWRlckNvbmZpZ30gZnJvbSAnLi4vLi4vdXRpbHMnOwovL2ltcG9ydCBUYWJzIGZyb20gJ0AvY29tcG9uZW50cy9UYWJzJzsKaW1wb3J0IFNpbXBsZVRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9TaW1wbGVUYWJsZSc7CmltcG9ydCBEb2N1bWVudEdyaWQgZnJvbSAnQC9jb21wb25lbnRzL0RvY3VtZW50R3JpZCc7CmltcG9ydCBBUEkgZnJvbSAnLi4vLi4vYXBpJzsKaW1wb3J0IHttYXBTdGF0ZX0gZnJvbSAndnVleCc7CmltcG9ydCB7bWFwTXV0YXRpb25zfSBmcm9tICd2dWV4JzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdFbGVtZW50RGV0YWlscycsCiAgICBjb21wb25lbnRzOiB7U2ltcGxlVGFibGUsIERvY3VtZW50R3JpZH0sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIHRhYlRpdGxlczogWydFdmVudHMnLCAnUmVsYXRpb25zJ10sCiAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgYXJndW1lbnRIZWFkZXJzOiBbCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ05hbWUnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuaGVhZGxpbmUpLAogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5pZCksCiAgICAgICAgICAgIG5ldyBIZWFkZXJDb25maWcoJ1JvbGVzJywgJ3N0YXJ0JywgZmFsc2UsIFRBQkxFRklFTERNQVBQSU5HLnJvbGVzKSwKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnVHlwZXMnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcudHlwZXMpLAogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdFbnRpdHkgQ2x1c3RlciBJRCcsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy5jbHVzdGVySWRMaXN0KQogICAgICAgIF0sCiAgICAgICAgY2x1c3RlckhlYWRlcnM6IFsKICAgICAgICAgICAgbmV3IEhlYWRlckNvbmZpZygnSUQnLCAnc3RhcnQnLCBmYWxzZSwgVEFCTEVGSUVMRE1BUFBJTkcuaWQpLAogICAgICAgICAgICBuZXcgSGVhZGVyQ29uZmlnKCdUeXBlcycsICdzdGFydCcsIGZhbHNlLCBUQUJMRUZJRUxETUFQUElORy50eXBlcykKICAgICAgICBdLAogICAgICAgIHN0YXR1c01lc3NhZ2U6ICcnLAogICAgICAgIHJvdXRlSWQ6ICcnCiAgICB9KSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5UQUJMRUZJRUxETUFQUElORyA9IFRBQkxFRklFTERNQVBQSU5HOwogICAgICAgIHRoaXMuVlVFUk9VVEVTID0gVlVFUk9VVEVTOwogICAgICAgIHRoaXMuZ2V0U3RyaW5nVmFsdWUgPSBnZXRTdHJpbmdWYWx1ZTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcFN0YXRlKFsnbm9kZVNlbGVjdGlvbicsICdjdXJyZW50RGF0YVNvdXJjZSddKSwKICAgICAgICBjdXJyZW50RWxlbWVudCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbjsKICAgICAgICB9LAogICAgICAgIGVsZW1lbnRVUkkoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuaWRdID8KICAgICAgICAgICAgICAgIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5pZF0gOiAnJzsKICAgICAgICB9LAogICAgICAgIGVudGl0eUNvdW50KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2VsZWN0aW9uW1RBQkxFRklFTERNQVBQSU5HLmVudGl0eUNvdW50XSA/CiAgICAgICAgICAgICAgICB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5Q291bnRdIDogMDsKICAgICAgICB9LAogICAgICAgIGFyZ3VtZW50TGlzdCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5lbnRpdHlMaXN0XSA/CiAgICAgICAgICAgICAgICB0aGlzLm5vZGVTZWxlY3Rpb25bVEFCTEVGSUVMRE1BUFBJTkcuZW50aXR5TGlzdF0gOiBbXTsKICAgICAgICB9LAogICAgICAgIGRvY3VtZW50TGlzdCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVNlbGVjdGlvbltUQUJMRUZJRUxETUFQUElORy5kb2N1bWVudExpc3RdOwogICAgICAgIH0sCiAgICAgICAgcm91dGVQYXJhbXMoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5wYXJhbXM7CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAuLi5tYXBNdXRhdGlvbnMoWyd1cGRhdGVOb2RlU2VsZWN0aW9uJ10pLAogICAgICAgIGdldEVsZW1lbnRDYXRlZ29yeSgpIHsKICAgICAgICAgICAgaWYodGhpcy5yb3V0ZVBhcmFtcy5pZCAhPT0gdGhpcy5yb3V0ZUlkKSB7CiAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hFbGVtZW50RGF0YSgpOwogICAgICAgICAgICAgICAgdGhpcy5yb3V0ZUlkID0gdGhpcy5yb3V0ZVBhcmFtcy5pZDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHVwcGVyRmlyc3RMZXR0ZXIodGhpcy5yb3V0ZVBhcmFtcy5jYXRlZ29yeSk7CiAgICAgICAgfSwKICAgICAgICByZWZyZXNoRWxlbWVudERhdGEoKSB7CiAgICAgICAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbih7fSk7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuc3RhdHVzTWVzc2FnZSA9IExPQURJTkdNRVNTQUdFOwogICAgICAgICAgICBBUEkuZ2V0RWxlbWVudERldGFpbHMoZGVjb2RlVVJJQ29tcG9uZW50KHRoaXMucm91dGVQYXJhbXMuaWQpLCB0aGlzLnJvdXRlUGFyYW1zLmNhdGVnb3J5KS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgJiYgT2JqZWN0LmtleXMocmVzcG9uc2UuZGF0YSkubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbihmb3JtYXRFbGVtZW50TWVtYmVycyhyZXNwb25zZS5kYXRhLCB0aGlzLnJvdXRlUGFyYW1zLmNhdGVnb3J5KSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNNZXNzYWdlID0gJyc7CiAgICAgICAgICAgICAgICAgICAgLy9UT0RPOiBzd2FnZ2VyIG5lZWRzIHRvIGluZGljYXRlIHdoZW4gdGhlcmUgYXJlIG5vIHJlc3VsdHMKICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLnN0YXR1c01lc3NhZ2UgPSAnTm8gcmVzdWx0cyBmb3VuZCc7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLnN0YXR1c01lc3NhZ2UpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXR1c01lc3NhZ2UgPSByZXNwb25zZS5zdGF0dXNNZXNzYWdlOwogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTm9kZVNlbGVjdGlvbih7fSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIH0pOwoKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["ElementDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"ElementDetails.vue","sourceRoot":"src/views/explore","sourcesContent":["<!--\n  - Copyright 2019 Next Century Corporation/CACI\n  -\n  - Licensed under the Apache License, Version 2.0 (the \"License\");\n  - you may not use this file except in compliance with the License.\n  - You may obtain a copy of the License at\n  -\n  -       http://www.apache.org/licenses/LICENSE-2.0\n  -\n  - Unless required by applicable law or agreed to in writing, software\n  - distributed under the License is distributed on an \"AS IS\" BASIS,\n  - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  - See the License for the specific language governing permissions and\n  - limitations under the License.\n  -\n  -->\n\n<template>\n    <div class=\"page-content\">\n        <div class=\"kb-details\">\n            <div class=\"kb-description-wrapper\">\n                <div class=\"kb-heading\">{{currentElement[TABLEFIELDMAPPING.id]}}</div>\n                <div><span class=\"kb-labels\">Category: </span><span>{{getElementCategory()}}</span></div>\n                <div><span class=\"kb-labels\">Types: </span><span>{{getStringValue(currentElement[TABLEFIELDMAPPING.types])}}</span></div>\n                <div><span class=\"kb-labels\">ID: </span><span>{{currentElement[TABLEFIELDMAPPING.idUri]}}</span></div>\n            </div>\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Arguments ({{entityCount}}) </div>\n            <SimpleTable\n                    :headers=\"argumentHeaders\"\n                    :data=\"argumentList\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.element\"\n            ></SimpleTable>\n<!--                <Tabs :titles=\"tabTitles\" class=\"deactivate-pointer\">\n                <SimpleTable\n                        :slot=\"tabTitles[0]\"\n                        :headers=\"headers\"\n                        :data=\"nodeSelection[TABLEFIELDMAPPING.entityList]\"\n                        :loading=\"loading\"\n                        :statusMessage=\"statusMessage\"\n                ></SimpleTable>\n            </Tabs>-->\n        </div>\n        <div class=\"section-space\">\n            <div class=\"kb-table-heading\">Clusters ({{currentElement[TABLEFIELDMAPPING.nodeCount]}})</div>\n            <SimpleTable\n                    :headers=\"clusterHeaders\"\n                    :data=\"currentElement[TABLEFIELDMAPPING.clusterList]\"\n                    :loading=\"loading\"\n                    :statusMessage=\"statusMessage\"\n                    :route=\"VUEROUTES.cluster\"\n            ></SimpleTable>\n        </div>\n        <DocumentGrid v-if=\"loading===false\" :data=\"currentElement[TABLEFIELDMAPPING.documentList]\"></DocumentGrid>\n    </div>\n\n</template>\n\n<script>\n    import {TABLEFIELDMAPPING, LOADINGMESSAGE, VUEROUTES, upperFirstLetter,\n        formatElementMembers, getStringValue, HeaderConfig} from '../../utils';\n    //import Tabs from '@/components/Tabs';\n    import SimpleTable from '@/components/SimpleTable';\n    import DocumentGrid from '@/components/DocumentGrid';\n    import API from '../../api';\n    import {mapState} from 'vuex';\n    import {mapMutations} from 'vuex';\n\n    export default {\n        name: 'ElementDetails',\n        components: {SimpleTable, DocumentGrid},\n        data: () => ({\n            tabTitles: ['Events', 'Relations'],\n            loading: false,\n            argumentHeaders: [\n                new HeaderConfig('Name', 'start', false, TABLEFIELDMAPPING.headline),\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Roles', 'start', false, TABLEFIELDMAPPING.roles),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types),\n                new HeaderConfig('Entity Cluster ID', 'start', false, TABLEFIELDMAPPING.clusterIdList)\n            ],\n            clusterHeaders: [\n                new HeaderConfig('ID', 'start', false, TABLEFIELDMAPPING.id),\n                new HeaderConfig('Types', 'start', false, TABLEFIELDMAPPING.types)\n            ],\n            statusMessage: '',\n            routeId: ''\n        }),\n        created() {\n            this.TABLEFIELDMAPPING = TABLEFIELDMAPPING;\n            this.VUEROUTES = VUEROUTES;\n            this.getStringValue = getStringValue;\n        },\n        computed: {\n            ...mapState(['nodeSelection', 'currentDataSource']),\n            currentElement() {\n                return this.nodeSelection;\n            },\n            elementURI() {\n                return this.nodeSelection[TABLEFIELDMAPPING.id] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.id] : '';\n            },\n            entityCount() {\n                return this.nodeSelection[TABLEFIELDMAPPING.entityCount] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.entityCount] : 0;\n            },\n            argumentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.entityList] ?\n                    this.nodeSelection[TABLEFIELDMAPPING.entityList] : [];\n            },\n            documentList() {\n                return this.nodeSelection[TABLEFIELDMAPPING.documentList];\n            },\n            routeParams() {\n                return this.$route.params;\n            }\n        },\n        methods: {\n            ...mapMutations(['updateNodeSelection']),\n            getElementCategory() {\n                if(this.routeParams.id !== this.routeId) {\n                    this.refreshElementData();\n                    this.routeId = this.routeParams.id;\n                }\n\n                return upperFirstLetter(this.routeParams.category);\n            },\n            refreshElementData() {\n                this.updateNodeSelection({});\n                this.loading = true;\n                this.statusMessage = LOADINGMESSAGE;\n                API.getElementDetails(decodeURIComponent(this.routeParams.id), this.routeParams.category).then((response) => {\n                    if (response.data && Object.keys(response.data).length > 0) {\n                        this.updateNodeSelection(formatElementMembers(response.data, this.routeParams.category));\n                        this.statusMessage = '';\n                        //TODO: swagger needs to indicate when there are no results\n                        // this.statusMessage = 'No results found';\n                    } else if (response.statusMessage) {\n                        this.statusMessage = response.statusMessage;\n                        this.updateNodeSelection({});\n                    }\n\n                    this.loading = false;\n                });\n\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}